[*] Start mutation process:
   - targets: MRTD
   - tests: MRTDtest_v2
[*] 21 tests passed:
   - MRTDtest_v2 [0.00300 s]
[*] Start mutants generation and execution:
   - [#   1] AOR MRTD: 
--------------------------------------------------------------------------------
   63:         int(i)
   64:         return int(i)
   65:     except ValueError:
   66:         if (str(i) >= 'A' and str(i) <= 'Z'):
-  67:             return int(ord(str(i)) - 55)
+  67:             return int(ord(str(i)) + 55)
   68:         elif (str(i) >= 'a' and str(i) <= 'z'):
   69:             return int(ord(str(i)) - 87)
   70:         else:
   71:             return 0
--------------------------------------------------------------------------------
[0.00299 s] killed by testGetNumericalValue (MRTDtest_v2.TestMRTD)
   - [#   2] AOR MRTD: 
--------------------------------------------------------------------------------
   65:     except ValueError:
   66:         if (str(i) >= 'A' and str(i) <= 'Z'):
   67:             return int(ord(str(i)) - 55)
   68:         elif (str(i) >= 'a' and str(i) <= 'z'):
-  69:             return int(ord(str(i)) - 87)
+  69:             return int(ord(str(i)) + 87)
   70:         else:
   71:             return 0
   72: 
   73: def calculateCheck(lst):
--------------------------------------------------------------------------------
[0.00300 s] killed by testGetNumericalValue (MRTDtest_v2.TestMRTD)
   - [#   3] AOR MRTD: 
--------------------------------------------------------------------------------
   76:     total = 0
   77:     
   78:     for i in lst:
   79:         numVal = getNumericalValue(i)
-  80:         total += numVal * weights[weightIdx]
+  80:         total += numVal / weights[weightIdx]
   81:         weightIdx = (weightIdx + 1) % len(weights)
   82:     return total % 10
   83: 
   84: def validateDate(date):
--------------------------------------------------------------------------------
[0.00100 s] killed by testCalculateCheck (MRTDtest_v2.TestMRTD)
   - [#   4] AOR MRTD: 
--------------------------------------------------------------------------------
   76:     total = 0
   77:     
   78:     for i in lst:
   79:         numVal = getNumericalValue(i)
-  80:         total += numVal * weights[weightIdx]
+  80:         total += numVal // weights[weightIdx]
   81:         weightIdx = (weightIdx + 1) % len(weights)
   82:     return total % 10
   83: 
   84: def validateDate(date):
--------------------------------------------------------------------------------
[0.00000 s] killed by testCalculateCheck (MRTDtest_v2.TestMRTD)
   - [#   5] AOR MRTD: 
--------------------------------------------------------------------------------
   76:     total = 0
   77:     
   78:     for i in lst:
   79:         numVal = getNumericalValue(i)
-  80:         total += numVal * weights[weightIdx]
+  80:         total += numVal ** weights[weightIdx]
   81:         weightIdx = (weightIdx + 1) % len(weights)
   82:     return total % 10
   83: 
   84: def validateDate(date):
--------------------------------------------------------------------------------
[0.00100 s] killed by testCalculateCheck (MRTDtest_v2.TestMRTD)
   - [#   6] AOR MRTD: 
--------------------------------------------------------------------------------
   77:     
   78:     for i in lst:
   79:         numVal = getNumericalValue(i)
   80:         total += numVal * weights[weightIdx]
-  81:         weightIdx = (weightIdx + 1) % len(weights)
+  81:         weightIdx = (weightIdx - 1) % len(weights)
   82:     return total % 10
   83: 
   84: def validateDate(date):
   85:     for char in date:
--------------------------------------------------------------------------------
[0.00100 s] killed by testCalculateCheck (MRTDtest_v2.TestMRTD)
   - [#   7] AOR MRTD: 
--------------------------------------------------------------------------------
   77:     
   78:     for i in lst:
   79:         numVal = getNumericalValue(i)
   80:         total += numVal * weights[weightIdx]
-  81:         weightIdx = (weightIdx + 1) % len(weights)
+  81:         weightIdx = (weightIdx + 1) * len(weights)
   82:     return total % 10
   83: 
   84: def validateDate(date):
   85:     for char in date:
--------------------------------------------------------------------------------
[0.00193 s] killed by testCalculateCheck (MRTDtest_v2.TestMRTD)
   - [#   8] AOR MRTD: 
--------------------------------------------------------------------------------
   78:     for i in lst:
   79:         numVal = getNumericalValue(i)
   80:         total += numVal * weights[weightIdx]
   81:         weightIdx = (weightIdx + 1) % len(weights)
-  82:     return total % 10
+  82:     return total * 10
   83: 
   84: def validateDate(date):
   85:     for char in date:
   86:         if (char != '<' and (char < '0' or char > '9')):
--------------------------------------------------------------------------------
[0.00000 s] killed by testCalculateCheck (MRTDtest_v2.TestMRTD)
   - [#   9] AOR MRTD: 
--------------------------------------------------------------------------------
   83: 
   84: def validateDate(date):
   85:     for char in date:
   86:         if (char != '<' and (char < '0' or char > '9')):
-  87:             raise Exception(('Invalid character ' + char) + ' in date')
+  87:             raise Exception(('Invalid character ' - char) + ' in date')
   88: 
   89: 
   90: 
   91: def scanMRZ():
--------------------------------------------------------------------------------
[0.00301 s] survived
   - [#  10] AOR MRTD: 
--------------------------------------------------------------------------------
   83: 
   84: def validateDate(date):
   85:     for char in date:
   86:         if (char != '<' and (char < '0' or char > '9')):
-  87:             raise Exception(('Invalid character ' + char) + ' in date')
+  87:             raise Exception(('Invalid character ' + char) - ' in date')
   88: 
   89: 
   90: 
   91: def scanMRZ():
--------------------------------------------------------------------------------
[0.00300 s] survived
   - [#  11] AOR MRTD: 
--------------------------------------------------------------------------------
   97: 
   98: def decodeMRZ():
   99:     (line1, line2) = scanMRZ()
  100:     if (len(line1) != LINE_LENGTH or len(line2) != LINE_LENGTH):
- 101:         raise Exception(('Lines must both be ' + str(LINE_LENGTH)) + ' characters.')
+ 101:         raise Exception(('Lines must both be ' - str(LINE_LENGTH)) + ' characters.')
  102:     travelData = TravelData()
  103:     linePos = 0
  104:     
  105:     currentString = ''
--------------------------------------------------------------------------------
[0.00300 s] survived
   - [#  12] AOR MRTD: 
--------------------------------------------------------------------------------
   97: 
   98: def decodeMRZ():
   99:     (line1, line2) = scanMRZ()
  100:     if (len(line1) != LINE_LENGTH or len(line2) != LINE_LENGTH):
- 101:         raise Exception(('Lines must both be ' + str(LINE_LENGTH)) + ' characters.')
+ 101:         raise Exception(('Lines must both be ' + str(LINE_LENGTH)) - ' characters.')
  102:     travelData = TravelData()
  103:     linePos = 0
  104:     
  105:     currentString = ''
--------------------------------------------------------------------------------
[0.00299 s] survived
   - [#  13] AOR MRTD: 
--------------------------------------------------------------------------------
  102:     travelData = TravelData()
  103:     linePos = 0
  104:     
  105:     currentString = ''
- 106:     travelData.docType = line1[linePos:linePos + 1]
+ 106:     travelData.docType = line1[linePos:linePos - 1]
  107:     linePos += 2
  108:     travelData.issuingCountry = line1[linePos:linePos + 3]
  109:     linePos += 3
  110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [#  14] AOR MRTD: 
--------------------------------------------------------------------------------
  104:     
  105:     currentString = ''
  106:     travelData.docType = line1[linePos:linePos + 1]
  107:     linePos += 2
- 108:     travelData.issuingCountry = line1[linePos:linePos + 3]
+ 108:     travelData.issuingCountry = line1[linePos:linePos - 3]
  109:     linePos += 3
  110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
  111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  112:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [#  15] AOR MRTD: 
--------------------------------------------------------------------------------
  108:     travelData.issuingCountry = line1[linePos:linePos + 3]
  109:     linePos += 3
  110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
  111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
- 112:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
+ 112:             raise Exception(('Invalid character ' - line1[linePos]) + ' in last name')
  113:         currentString += line1[linePos]
  114:         linePos += 1
  115:     travelData.lastName = currentString
  116:     linePos += 2
--------------------------------------------------------------------------------
[0.01823 s] survived
   - [#  16] AOR MRTD: 
--------------------------------------------------------------------------------
  108:     travelData.issuingCountry = line1[linePos:linePos + 3]
  109:     linePos += 3
  110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
  111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
- 112:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
+ 112:             raise Exception(('Invalid character ' + line1[linePos]) - ' in last name')
  113:         currentString += line1[linePos]
  114:         linePos += 1
  115:     travelData.lastName = currentString
  116:     linePos += 2
--------------------------------------------------------------------------------
[0.00302 s] survived
   - [#  17] AOR MRTD: 
--------------------------------------------------------------------------------
  116:     linePos += 2
  117:     currentString = ''
  118:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
  119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
- 120:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
+ 120:             raise Exception(('Invalid character ' - line1[linePos]) + ' in first name')
  121:         currentString += line1[linePos]
  122:         linePos += 1
  123:     travelData.firstName = currentString
  124:     linePos += 1
--------------------------------------------------------------------------------
[0.00303 s] survived
   - [#  18] AOR MRTD: 
--------------------------------------------------------------------------------
  116:     linePos += 2
  117:     currentString = ''
  118:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
  119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
- 120:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
+ 120:             raise Exception(('Invalid character ' + line1[linePos]) - ' in first name')
  121:         currentString += line1[linePos]
  122:         linePos += 1
  123:     travelData.firstName = currentString
  124:     linePos += 1
--------------------------------------------------------------------------------
[0.00301 s] survived
   - [#  19] AOR MRTD: 
--------------------------------------------------------------------------------
  124:     linePos += 1
  125:     currentString = ''
  126:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
  127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
- 128:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
+ 128:             raise Exception(('Invalid character ' - line1[linePos]) + ' in middle name')
  129:         currentString += line1[linePos]
  130:         linePos += 1
  131:     travelData.middleName = currentString
  132:     currentString = ''
--------------------------------------------------------------------------------
[0.00300 s] survived
   - [#  20] AOR MRTD: 
--------------------------------------------------------------------------------
  124:     linePos += 1
  125:     currentString = ''
  126:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
  127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
- 128:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
+ 128:             raise Exception(('Invalid character ' + line1[linePos]) - ' in middle name')
  129:         currentString += line1[linePos]
  130:         linePos += 1
  131:     travelData.middleName = currentString
  132:     currentString = ''
--------------------------------------------------------------------------------
[0.00300 s] survived
   - [#  21] AOR MRTD: 
--------------------------------------------------------------------------------
  135:     
  136:     linePos = 0
  137:     travelData.passportNo = line2[linePos:PASSPORT_LENGTH]
  138:     linePos += PASSPORT_LENGTH
- 139:     travelData.passportCheck = line2[linePos:linePos + 1]
+ 139:     travelData.passportCheck = line2[linePos:linePos - 1]
  140:     linePos += 1
  141:     travelData.countryCode = line2[linePos:linePos + COUNTRY_CODE_LENGTH]
  142:     linePos += COUNTRY_CODE_LENGTH
  143:     travelData.birthday = line2[linePos:linePos + DATE_LENGTH]
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [#  22] AOR MRTD: 
--------------------------------------------------------------------------------
  137:     travelData.passportNo = line2[linePos:PASSPORT_LENGTH]
  138:     linePos += PASSPORT_LENGTH
  139:     travelData.passportCheck = line2[linePos:linePos + 1]
  140:     linePos += 1
- 141:     travelData.countryCode = line2[linePos:linePos + COUNTRY_CODE_LENGTH]
+ 141:     travelData.countryCode = line2[linePos:linePos - COUNTRY_CODE_LENGTH]
  142:     linePos += COUNTRY_CODE_LENGTH
  143:     travelData.birthday = line2[linePos:linePos + DATE_LENGTH]
  144:     validateDate(travelData.birthday)
  145:     linePos += DATE_LENGTH
--------------------------------------------------------------------------------
[0.00101 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [#  23] AOR MRTD: 
--------------------------------------------------------------------------------
  139:     travelData.passportCheck = line2[linePos:linePos + 1]
  140:     linePos += 1
  141:     travelData.countryCode = line2[linePos:linePos + COUNTRY_CODE_LENGTH]
  142:     linePos += COUNTRY_CODE_LENGTH
- 143:     travelData.birthday = line2[linePos:linePos + DATE_LENGTH]
+ 143:     travelData.birthday = line2[linePos:linePos - DATE_LENGTH]
  144:     validateDate(travelData.birthday)
  145:     linePos += DATE_LENGTH
  146:     travelData.birthdayCheck = line2[linePos:linePos + 1]
  147:     linePos += 1
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [#  24] AOR MRTD: 
--------------------------------------------------------------------------------
  142:     linePos += COUNTRY_CODE_LENGTH
  143:     travelData.birthday = line2[linePos:linePos + DATE_LENGTH]
  144:     validateDate(travelData.birthday)
  145:     linePos += DATE_LENGTH
- 146:     travelData.birthdayCheck = line2[linePos:linePos + 1]
+ 146:     travelData.birthdayCheck = line2[linePos:linePos - 1]
  147:     linePos += 1
  148:     travelData.sex = line2[linePos:linePos + SEX_LENGTH]
  149:     linePos += 1
  150:     travelData.expirationDate = line2[linePos:linePos + DATE_LENGTH]
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [#  25] AOR MRTD: 
--------------------------------------------------------------------------------
  144:     validateDate(travelData.birthday)
  145:     linePos += DATE_LENGTH
  146:     travelData.birthdayCheck = line2[linePos:linePos + 1]
  147:     linePos += 1
- 148:     travelData.sex = line2[linePos:linePos + SEX_LENGTH]
+ 148:     travelData.sex = line2[linePos:linePos - SEX_LENGTH]
  149:     linePos += 1
  150:     travelData.expirationDate = line2[linePos:linePos + DATE_LENGTH]
  151:     validateDate(travelData.expirationDate)
  152:     linePos += DATE_LENGTH
--------------------------------------------------------------------------------
[0.00099 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [#  26] AOR MRTD: 
--------------------------------------------------------------------------------
  146:     travelData.birthdayCheck = line2[linePos:linePos + 1]
  147:     linePos += 1
  148:     travelData.sex = line2[linePos:linePos + SEX_LENGTH]
  149:     linePos += 1
- 150:     travelData.expirationDate = line2[linePos:linePos + DATE_LENGTH]
+ 150:     travelData.expirationDate = line2[linePos:linePos - DATE_LENGTH]
  151:     validateDate(travelData.expirationDate)
  152:     linePos += DATE_LENGTH
  153:     travelData.expirationCheck = line2[linePos:linePos + 1]
  154:     linePos += 1
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [#  27] AOR MRTD: 
--------------------------------------------------------------------------------
  149:     linePos += 1
  150:     travelData.expirationDate = line2[linePos:linePos + DATE_LENGTH]
  151:     validateDate(travelData.expirationDate)
  152:     linePos += DATE_LENGTH
- 153:     travelData.expirationCheck = line2[linePos:linePos + 1]
+ 153:     travelData.expirationCheck = line2[linePos:linePos - 1]
  154:     linePos += 1
  155:     travelData.personalNo = line2[linePos:len(line2) - 1]
  156:     linePos = len(line2) - 1
  157:     travelData.personalNoCheck = line2[linePos]
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [#  28] AOR MRTD: 
--------------------------------------------------------------------------------
  151:     validateDate(travelData.expirationDate)
  152:     linePos += DATE_LENGTH
  153:     travelData.expirationCheck = line2[linePos:linePos + 1]
  154:     linePos += 1
- 155:     travelData.personalNo = line2[linePos:len(line2) - 1]
+ 155:     travelData.personalNo = line2[linePos:len(line2) + 1]
  156:     linePos = len(line2) - 1
  157:     travelData.personalNoCheck = line2[linePos]
  158:     linePos += 1
  159:     return travelData
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [#  29] AOR MRTD: 
--------------------------------------------------------------------------------
  152:     linePos += DATE_LENGTH
  153:     travelData.expirationCheck = line2[linePos:linePos + 1]
  154:     linePos += 1
  155:     travelData.personalNo = line2[linePos:len(line2) - 1]
- 156:     linePos = len(line2) - 1
+ 156:     linePos = len(line2) + 1
  157:     travelData.personalNoCheck = line2[linePos]
  158:     linePos += 1
  159:     return travelData
  160: 
--------------------------------------------------------------------------------
[0.00203 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [#  30] AOR MRTD: 
--------------------------------------------------------------------------------
  167: 
  168: def encodeMRZ(personalNo):
  169:     data = getTravelDataFromDB(personalNo)
  170:     
- 171:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
+ 171:     line1 = ((((((data.docType - '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
  172:     if len(line1) > LINE_LENGTH:
  173:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
  174:     while len(line1) < LINE_LENGTH:
  175:         line1 += '<'
--------------------------------------------------------------------------------
[0.00200 s] incompetent
   - [#  31] AOR MRTD: 
--------------------------------------------------------------------------------
  167: 
  168: def encodeMRZ(personalNo):
  169:     data = getTravelDataFromDB(personalNo)
  170:     
- 171:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
+ 171:     line1 = ((((((data.docType + '<') - data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
  172:     if len(line1) > LINE_LENGTH:
  173:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
  174:     while len(line1) < LINE_LENGTH:
  175:         line1 += '<'
--------------------------------------------------------------------------------
[0.00300 s] incompetent
   - [#  32] AOR MRTD: 
--------------------------------------------------------------------------------
  167: 
  168: def encodeMRZ(personalNo):
  169:     data = getTravelDataFromDB(personalNo)
  170:     
- 171:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
+ 171:     line1 = ((((((data.docType + '<') + data.issuingCountry) - data.lastName) + '<<') + data.firstName) + '<') + data.middleName
  172:     if len(line1) > LINE_LENGTH:
  173:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
  174:     while len(line1) < LINE_LENGTH:
  175:         line1 += '<'
--------------------------------------------------------------------------------
[0.00306 s] incompetent
   - [#  33] AOR MRTD: 
--------------------------------------------------------------------------------
  167: 
  168: def encodeMRZ(personalNo):
  169:     data = getTravelDataFromDB(personalNo)
  170:     
- 171:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
+ 171:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) - '<<') + data.firstName) + '<') + data.middleName
  172:     if len(line1) > LINE_LENGTH:
  173:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
  174:     while len(line1) < LINE_LENGTH:
  175:         line1 += '<'
--------------------------------------------------------------------------------
[0.00300 s] incompetent
   - [#  34] AOR MRTD: 
--------------------------------------------------------------------------------
  167: 
  168: def encodeMRZ(personalNo):
  169:     data = getTravelDataFromDB(personalNo)
  170:     
- 171:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
+ 171:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') - data.firstName) + '<') + data.middleName
  172:     if len(line1) > LINE_LENGTH:
  173:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
  174:     while len(line1) < LINE_LENGTH:
  175:         line1 += '<'
--------------------------------------------------------------------------------
[0.00299 s] incompetent
   - [#  35] AOR MRTD: 
--------------------------------------------------------------------------------
  167: 
  168: def encodeMRZ(personalNo):
  169:     data = getTravelDataFromDB(personalNo)
  170:     
- 171:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
+ 171:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) - '<') + data.middleName
  172:     if len(line1) > LINE_LENGTH:
  173:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
  174:     while len(line1) < LINE_LENGTH:
  175:         line1 += '<'
--------------------------------------------------------------------------------
[0.00299 s] incompetent
   - [#  36] AOR MRTD: 
--------------------------------------------------------------------------------
  167: 
  168: def encodeMRZ(personalNo):
  169:     data = getTravelDataFromDB(personalNo)
  170:     
- 171:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
+ 171:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') - data.middleName
  172:     if len(line1) > LINE_LENGTH:
  173:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
  174:     while len(line1) < LINE_LENGTH:
  175:         line1 += '<'
--------------------------------------------------------------------------------
[0.00206 s] incompetent
   - [#  37] AOR MRTD: 
--------------------------------------------------------------------------------
  169:     data = getTravelDataFromDB(personalNo)
  170:     
  171:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
  172:     if len(line1) > LINE_LENGTH:
- 173:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
+ 173:         raise Exception(('First line is not ' - str(LINE_LENGTH)) + ' characters.')
  174:     while len(line1) < LINE_LENGTH:
  175:         line1 += '<'
  176:     
  177:     
--------------------------------------------------------------------------------
[0.00300 s] survived
   - [#  38] AOR MRTD: 
--------------------------------------------------------------------------------
  169:     data = getTravelDataFromDB(personalNo)
  170:     
  171:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
  172:     if len(line1) > LINE_LENGTH:
- 173:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
+ 173:         raise Exception(('First line is not ' + str(LINE_LENGTH)) - ' characters.')
  174:     while len(line1) < LINE_LENGTH:
  175:         line1 += '<'
  176:     
  177:     
--------------------------------------------------------------------------------
[0.00394 s] survived
   - [#  39] AOR MRTD: 
--------------------------------------------------------------------------------
  174:     while len(line1) < LINE_LENGTH:
  175:         line1 += '<'
  176:     
  177:     
- 178:     line2 = ((((((((data.passportNo + str(calculateCheck(data.passportNo))) + data.countryCode) + data.birthday) + str(calculateCheck(data.birthday))) + data.sex) + data.expirationDate) + str(calculateCheck(data.expirationDate))) + data.personalNo) + str(calculateCheck(data.personalNo))
+ 178:     line2 = ((((((((data.passportNo - str(calculateCheck(data.passportNo))) + data.countryCode) + data.birthday) + str(calculateCheck(data.birthday))) + data.sex) + data.expirationDate) + str(calculateCheck(data.expirationDate))) + data.personalNo) + str(calculateCheck(data.personalNo))
  179:     
  180:     if len(line2) != LINE_LENGTH:
  181:         raise Exception(('Second line is not ' + str(LINE_LENGTH)) + ' characters.')
  182:     return (line1, line2)
--------------------------------------------------------------------------------
[0.00306 s] incompetent
   - [#  40] AOR MRTD: 
--------------------------------------------------------------------------------
  174:     while len(line1) < LINE_LENGTH:
  175:         line1 += '<'
  176:     
  177:     
- 178:     line2 = ((((((((data.passportNo + str(calculateCheck(data.passportNo))) + data.countryCode) + data.birthday) + str(calculateCheck(data.birthday))) + data.sex) + data.expirationDate) + str(calculateCheck(data.expirationDate))) + data.personalNo) + str(calculateCheck(data.personalNo))
+ 178:     line2 = ((((((((data.passportNo + str(calculateCheck(data.passportNo))) - data.countryCode) + data.birthday) + str(calculateCheck(data.birthday))) + data.sex) + data.expirationDate) + str(calculateCheck(data.expirationDate))) + data.personalNo) + str(calculateCheck(data.personalNo))
  179:     
  180:     if len(line2) != LINE_LENGTH:
  181:         raise Exception(('Second line is not ' + str(LINE_LENGTH)) + ' characters.')
  182:     return (line1, line2)
--------------------------------------------------------------------------------
[0.00300 s] incompetent
   - [#  41] AOR MRTD: 
--------------------------------------------------------------------------------
  174:     while len(line1) < LINE_LENGTH:
  175:         line1 += '<'
  176:     
  177:     
- 178:     line2 = ((((((((data.passportNo + str(calculateCheck(data.passportNo))) + data.countryCode) + data.birthday) + str(calculateCheck(data.birthday))) + data.sex) + data.expirationDate) + str(calculateCheck(data.expirationDate))) + data.personalNo) + str(calculateCheck(data.personalNo))
+ 178:     line2 = ((((((((data.passportNo + str(calculateCheck(data.passportNo))) + data.countryCode) - data.birthday) + str(calculateCheck(data.birthday))) + data.sex) + data.expirationDate) + str(calculateCheck(data.expirationDate))) + data.personalNo) + str(calculateCheck(data.personalNo))
  179:     
  180:     if len(line2) != LINE_LENGTH:
  181:         raise Exception(('Second line is not ' + str(LINE_LENGTH)) + ' characters.')
  182:     return (line1, line2)
--------------------------------------------------------------------------------
[0.00301 s] incompetent
   - [#  42] AOR MRTD: 
--------------------------------------------------------------------------------
  174:     while len(line1) < LINE_LENGTH:
  175:         line1 += '<'
  176:     
  177:     
- 178:     line2 = ((((((((data.passportNo + str(calculateCheck(data.passportNo))) + data.countryCode) + data.birthday) + str(calculateCheck(data.birthday))) + data.sex) + data.expirationDate) + str(calculateCheck(data.expirationDate))) + data.personalNo) + str(calculateCheck(data.personalNo))
+ 178:     line2 = ((((((((data.passportNo + str(calculateCheck(data.passportNo))) + data.countryCode) + data.birthday) - str(calculateCheck(data.birthday))) + data.sex) + data.expirationDate) + str(calculateCheck(data.expirationDate))) + data.personalNo) + str(calculateCheck(data.personalNo))
  179:     
  180:     if len(line2) != LINE_LENGTH:
  181:         raise Exception(('Second line is not ' + str(LINE_LENGTH)) + ' characters.')
  182:     return (line1, line2)
--------------------------------------------------------------------------------
[0.00300 s] incompetent
   - [#  43] AOR MRTD: 
--------------------------------------------------------------------------------
  174:     while len(line1) < LINE_LENGTH:
  175:         line1 += '<'
  176:     
  177:     
- 178:     line2 = ((((((((data.passportNo + str(calculateCheck(data.passportNo))) + data.countryCode) + data.birthday) + str(calculateCheck(data.birthday))) + data.sex) + data.expirationDate) + str(calculateCheck(data.expirationDate))) + data.personalNo) + str(calculateCheck(data.personalNo))
+ 178:     line2 = ((((((((data.passportNo + str(calculateCheck(data.passportNo))) + data.countryCode) + data.birthday) + str(calculateCheck(data.birthday))) - data.sex) + data.expirationDate) + str(calculateCheck(data.expirationDate))) + data.personalNo) + str(calculateCheck(data.personalNo))
  179:     
  180:     if len(line2) != LINE_LENGTH:
  181:         raise Exception(('Second line is not ' + str(LINE_LENGTH)) + ' characters.')
  182:     return (line1, line2)
--------------------------------------------------------------------------------
[0.00300 s] incompetent
   - [#  44] AOR MRTD: 
--------------------------------------------------------------------------------
  174:     while len(line1) < LINE_LENGTH:
  175:         line1 += '<'
  176:     
  177:     
- 178:     line2 = ((((((((data.passportNo + str(calculateCheck(data.passportNo))) + data.countryCode) + data.birthday) + str(calculateCheck(data.birthday))) + data.sex) + data.expirationDate) + str(calculateCheck(data.expirationDate))) + data.personalNo) + str(calculateCheck(data.personalNo))
+ 178:     line2 = ((((((((data.passportNo + str(calculateCheck(data.passportNo))) + data.countryCode) + data.birthday) + str(calculateCheck(data.birthday))) + data.sex) - data.expirationDate) + str(calculateCheck(data.expirationDate))) + data.personalNo) + str(calculateCheck(data.personalNo))
  179:     
  180:     if len(line2) != LINE_LENGTH:
  181:         raise Exception(('Second line is not ' + str(LINE_LENGTH)) + ' characters.')
  182:     return (line1, line2)
--------------------------------------------------------------------------------
[0.00319 s] incompetent
   - [#  45] AOR MRTD: 
--------------------------------------------------------------------------------
  174:     while len(line1) < LINE_LENGTH:
  175:         line1 += '<'
  176:     
  177:     
- 178:     line2 = ((((((((data.passportNo + str(calculateCheck(data.passportNo))) + data.countryCode) + data.birthday) + str(calculateCheck(data.birthday))) + data.sex) + data.expirationDate) + str(calculateCheck(data.expirationDate))) + data.personalNo) + str(calculateCheck(data.personalNo))
+ 178:     line2 = ((((((((data.passportNo + str(calculateCheck(data.passportNo))) + data.countryCode) + data.birthday) + str(calculateCheck(data.birthday))) + data.sex) + data.expirationDate) - str(calculateCheck(data.expirationDate))) + data.personalNo) + str(calculateCheck(data.personalNo))
  179:     
  180:     if len(line2) != LINE_LENGTH:
  181:         raise Exception(('Second line is not ' + str(LINE_LENGTH)) + ' characters.')
  182:     return (line1, line2)
--------------------------------------------------------------------------------
[0.00300 s] incompetent
   - [#  46] AOR MRTD: 
--------------------------------------------------------------------------------
  174:     while len(line1) < LINE_LENGTH:
  175:         line1 += '<'
  176:     
  177:     
- 178:     line2 = ((((((((data.passportNo + str(calculateCheck(data.passportNo))) + data.countryCode) + data.birthday) + str(calculateCheck(data.birthday))) + data.sex) + data.expirationDate) + str(calculateCheck(data.expirationDate))) + data.personalNo) + str(calculateCheck(data.personalNo))
+ 178:     line2 = ((((((((data.passportNo + str(calculateCheck(data.passportNo))) + data.countryCode) + data.birthday) + str(calculateCheck(data.birthday))) + data.sex) + data.expirationDate) + str(calculateCheck(data.expirationDate))) - data.personalNo) + str(calculateCheck(data.personalNo))
  179:     
  180:     if len(line2) != LINE_LENGTH:
  181:         raise Exception(('Second line is not ' + str(LINE_LENGTH)) + ' characters.')
  182:     return (line1, line2)
--------------------------------------------------------------------------------
[0.00300 s] incompetent
   - [#  47] AOR MRTD: 
--------------------------------------------------------------------------------
  174:     while len(line1) < LINE_LENGTH:
  175:         line1 += '<'
  176:     
  177:     
- 178:     line2 = ((((((((data.passportNo + str(calculateCheck(data.passportNo))) + data.countryCode) + data.birthday) + str(calculateCheck(data.birthday))) + data.sex) + data.expirationDate) + str(calculateCheck(data.expirationDate))) + data.personalNo) + str(calculateCheck(data.personalNo))
+ 178:     line2 = ((((((((data.passportNo + str(calculateCheck(data.passportNo))) + data.countryCode) + data.birthday) + str(calculateCheck(data.birthday))) + data.sex) + data.expirationDate) + str(calculateCheck(data.expirationDate))) + data.personalNo) - str(calculateCheck(data.personalNo))
  179:     
  180:     if len(line2) != LINE_LENGTH:
  181:         raise Exception(('Second line is not ' + str(LINE_LENGTH)) + ' characters.')
  182:     return (line1, line2)
--------------------------------------------------------------------------------
[0.00301 s] incompetent
   - [#  48] AOR MRTD: 
--------------------------------------------------------------------------------
  177:     
  178:     line2 = ((((((((data.passportNo + str(calculateCheck(data.passportNo))) + data.countryCode) + data.birthday) + str(calculateCheck(data.birthday))) + data.sex) + data.expirationDate) + str(calculateCheck(data.expirationDate))) + data.personalNo) + str(calculateCheck(data.personalNo))
  179:     
  180:     if len(line2) != LINE_LENGTH:
- 181:         raise Exception(('Second line is not ' + str(LINE_LENGTH)) + ' characters.')
+ 181:         raise Exception(('Second line is not ' - str(LINE_LENGTH)) + ' characters.')
  182:     return (line1, line2)
  183: 
  184: 
  185: 
--------------------------------------------------------------------------------
[0.00401 s] survived
   - [#  49] AOR MRTD: 
--------------------------------------------------------------------------------
  177:     
  178:     line2 = ((((((((data.passportNo + str(calculateCheck(data.passportNo))) + data.countryCode) + data.birthday) + str(calculateCheck(data.birthday))) + data.sex) + data.expirationDate) + str(calculateCheck(data.expirationDate))) + data.personalNo) + str(calculateCheck(data.personalNo))
  179:     
  180:     if len(line2) != LINE_LENGTH:
- 181:         raise Exception(('Second line is not ' + str(LINE_LENGTH)) + ' characters.')
+ 181:         raise Exception(('Second line is not ' + str(LINE_LENGTH)) - ' characters.')
  182:     return (line1, line2)
  183: 
  184: 
  185: 
--------------------------------------------------------------------------------
[0.00300 s] survived
   - [#  50] ASR MRTD: 
--------------------------------------------------------------------------------
   76:     total = 0
   77:     
   78:     for i in lst:
   79:         numVal = getNumericalValue(i)
-  80:         total += numVal * weights[weightIdx]
+  80:         total -= numVal * weights[weightIdx]
   81:         weightIdx = (weightIdx + 1) % len(weights)
   82:     return total % 10
   83: 
   84: def validateDate(date):
--------------------------------------------------------------------------------
[0.00109 s] killed by testCalculateCheck (MRTDtest_v2.TestMRTD)
   - [#  51] ASR MRTD: 
--------------------------------------------------------------------------------
  103:     linePos = 0
  104:     
  105:     currentString = ''
  106:     travelData.docType = line1[linePos:linePos + 1]
- 107:     linePos += 2
+ 107:     linePos -= 2
  108:     travelData.issuingCountry = line1[linePos:linePos + 3]
  109:     linePos += 3
  110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
  111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [#  52] ASR MRTD: 
--------------------------------------------------------------------------------
  105:     currentString = ''
  106:     travelData.docType = line1[linePos:linePos + 1]
  107:     linePos += 2
  108:     travelData.issuingCountry = line1[linePos:linePos + 3]
- 109:     linePos += 3
+ 109:     linePos -= 3
  110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
  111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  112:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  113:         currentString += line1[linePos]
--------------------------------------------------------------------------------
[0.00099 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [#  53] ASR MRTD: 
--------------------------------------------------------------------------------
  109:     linePos += 3
  110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
  111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  112:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
- 113:         currentString += line1[linePos]
+ 113:         currentString -= line1[linePos]
  114:         linePos += 1
  115:     travelData.lastName = currentString
  116:     linePos += 2
  117:     currentString = ''
--------------------------------------------------------------------------------
[0.00317 s] incompetent
   - [#  54] ASR MRTD: 
--------------------------------------------------------------------------------
  110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
  111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  112:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  113:         currentString += line1[linePos]
- 114:         linePos += 1
+ 114:         linePos -= 1
  115:     travelData.lastName = currentString
  116:     linePos += 2
  117:     currentString = ''
  118:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [#  55] ASR MRTD: 
--------------------------------------------------------------------------------
  112:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  113:         currentString += line1[linePos]
  114:         linePos += 1
  115:     travelData.lastName = currentString
- 116:     linePos += 2
+ 116:     linePos -= 2
  117:     currentString = ''
  118:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
  119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  120:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [#  56] ASR MRTD: 
--------------------------------------------------------------------------------
  117:     currentString = ''
  118:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
  119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  120:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
- 121:         currentString += line1[linePos]
+ 121:         currentString -= line1[linePos]
  122:         linePos += 1
  123:     travelData.firstName = currentString
  124:     linePos += 1
  125:     currentString = ''
--------------------------------------------------------------------------------
[0.00300 s] incompetent
   - [#  57] ASR MRTD: 
--------------------------------------------------------------------------------
  118:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
  119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  120:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  121:         currentString += line1[linePos]
- 122:         linePos += 1
+ 122:         linePos -= 1
  123:     travelData.firstName = currentString
  124:     linePos += 1
  125:     currentString = ''
  126:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
--------------------------------------------------------------------------------
[0.00109 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [#  58] ASR MRTD: 
--------------------------------------------------------------------------------
  120:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  121:         currentString += line1[linePos]
  122:         linePos += 1
  123:     travelData.firstName = currentString
- 124:     linePos += 1
+ 124:     linePos -= 1
  125:     currentString = ''
  126:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
  127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  128:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
--------------------------------------------------------------------------------
[0.00099 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [#  59] ASR MRTD: 
--------------------------------------------------------------------------------
  125:     currentString = ''
  126:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
  127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  128:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
- 129:         currentString += line1[linePos]
+ 129:         currentString -= line1[linePos]
  130:         linePos += 1
  131:     travelData.middleName = currentString
  132:     currentString = ''
  133:     
--------------------------------------------------------------------------------
[0.00297 s] incompetent
   - [#  60] ASR MRTD: 
--------------------------------------------------------------------------------
  126:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
  127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  128:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  129:         currentString += line1[linePos]
- 130:         linePos += 1
+ 130:         linePos -= 1
  131:     travelData.middleName = currentString
  132:     currentString = ''
  133:     
  134:     
--------------------------------------------------------------------------------
[0.00099 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [#  61] ASR MRTD: 
--------------------------------------------------------------------------------
  134:     
  135:     
  136:     linePos = 0
  137:     travelData.passportNo = line2[linePos:PASSPORT_LENGTH]
- 138:     linePos += PASSPORT_LENGTH
+ 138:     linePos -= PASSPORT_LENGTH
  139:     travelData.passportCheck = line2[linePos:linePos + 1]
  140:     linePos += 1
  141:     travelData.countryCode = line2[linePos:linePos + COUNTRY_CODE_LENGTH]
  142:     linePos += COUNTRY_CODE_LENGTH
--------------------------------------------------------------------------------
[0.00201 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [#  62] ASR MRTD: 
--------------------------------------------------------------------------------
  136:     linePos = 0
  137:     travelData.passportNo = line2[linePos:PASSPORT_LENGTH]
  138:     linePos += PASSPORT_LENGTH
  139:     travelData.passportCheck = line2[linePos:linePos + 1]
- 140:     linePos += 1
+ 140:     linePos -= 1
  141:     travelData.countryCode = line2[linePos:linePos + COUNTRY_CODE_LENGTH]
  142:     linePos += COUNTRY_CODE_LENGTH
  143:     travelData.birthday = line2[linePos:linePos + DATE_LENGTH]
  144:     validateDate(travelData.birthday)
--------------------------------------------------------------------------------
[0.00098 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [#  63] ASR MRTD: 
--------------------------------------------------------------------------------
  138:     linePos += PASSPORT_LENGTH
  139:     travelData.passportCheck = line2[linePos:linePos + 1]
  140:     linePos += 1
  141:     travelData.countryCode = line2[linePos:linePos + COUNTRY_CODE_LENGTH]
- 142:     linePos += COUNTRY_CODE_LENGTH
+ 142:     linePos -= COUNTRY_CODE_LENGTH
  143:     travelData.birthday = line2[linePos:linePos + DATE_LENGTH]
  144:     validateDate(travelData.birthday)
  145:     linePos += DATE_LENGTH
  146:     travelData.birthdayCheck = line2[linePos:linePos + 1]
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [#  64] ASR MRTD: 
--------------------------------------------------------------------------------
  141:     travelData.countryCode = line2[linePos:linePos + COUNTRY_CODE_LENGTH]
  142:     linePos += COUNTRY_CODE_LENGTH
  143:     travelData.birthday = line2[linePos:linePos + DATE_LENGTH]
  144:     validateDate(travelData.birthday)
- 145:     linePos += DATE_LENGTH
+ 145:     linePos -= DATE_LENGTH
  146:     travelData.birthdayCheck = line2[linePos:linePos + 1]
  147:     linePos += 1
  148:     travelData.sex = line2[linePos:linePos + SEX_LENGTH]
  149:     linePos += 1
--------------------------------------------------------------------------------
[0.00201 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [#  65] ASR MRTD: 
--------------------------------------------------------------------------------
  143:     travelData.birthday = line2[linePos:linePos + DATE_LENGTH]
  144:     validateDate(travelData.birthday)
  145:     linePos += DATE_LENGTH
  146:     travelData.birthdayCheck = line2[linePos:linePos + 1]
- 147:     linePos += 1
+ 147:     linePos -= 1
  148:     travelData.sex = line2[linePos:linePos + SEX_LENGTH]
  149:     linePos += 1
  150:     travelData.expirationDate = line2[linePos:linePos + DATE_LENGTH]
  151:     validateDate(travelData.expirationDate)
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [#  66] ASR MRTD: 
--------------------------------------------------------------------------------
  145:     linePos += DATE_LENGTH
  146:     travelData.birthdayCheck = line2[linePos:linePos + 1]
  147:     linePos += 1
  148:     travelData.sex = line2[linePos:linePos + SEX_LENGTH]
- 149:     linePos += 1
+ 149:     linePos -= 1
  150:     travelData.expirationDate = line2[linePos:linePos + DATE_LENGTH]
  151:     validateDate(travelData.expirationDate)
  152:     linePos += DATE_LENGTH
  153:     travelData.expirationCheck = line2[linePos:linePos + 1]
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [#  67] ASR MRTD: 
--------------------------------------------------------------------------------
  148:     travelData.sex = line2[linePos:linePos + SEX_LENGTH]
  149:     linePos += 1
  150:     travelData.expirationDate = line2[linePos:linePos + DATE_LENGTH]
  151:     validateDate(travelData.expirationDate)
- 152:     linePos += DATE_LENGTH
+ 152:     linePos -= DATE_LENGTH
  153:     travelData.expirationCheck = line2[linePos:linePos + 1]
  154:     linePos += 1
  155:     travelData.personalNo = line2[linePos:len(line2) - 1]
  156:     linePos = len(line2) - 1
--------------------------------------------------------------------------------
[0.00205 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [#  68] ASR MRTD: 
--------------------------------------------------------------------------------
  150:     travelData.expirationDate = line2[linePos:linePos + DATE_LENGTH]
  151:     validateDate(travelData.expirationDate)
  152:     linePos += DATE_LENGTH
  153:     travelData.expirationCheck = line2[linePos:linePos + 1]
- 154:     linePos += 1
+ 154:     linePos -= 1
  155:     travelData.personalNo = line2[linePos:len(line2) - 1]
  156:     linePos = len(line2) - 1
  157:     travelData.personalNoCheck = line2[linePos]
  158:     linePos += 1
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [#  69] ASR MRTD: 
--------------------------------------------------------------------------------
  154:     linePos += 1
  155:     travelData.personalNo = line2[linePos:len(line2) - 1]
  156:     linePos = len(line2) - 1
  157:     travelData.personalNoCheck = line2[linePos]
- 158:     linePos += 1
+ 158:     linePos -= 1
  159:     return travelData
  160: 
  161: 
  162: 
--------------------------------------------------------------------------------
[0.00302 s] survived
   - [#  70] ASR MRTD: 
--------------------------------------------------------------------------------
  171:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
  172:     if len(line1) > LINE_LENGTH:
  173:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
  174:     while len(line1) < LINE_LENGTH:
- 175:         line1 += '<'
+ 175:         line1 -= '<'
  176:     
  177:     
  178:     line2 = ((((((((data.passportNo + str(calculateCheck(data.passportNo))) + data.countryCode) + data.birthday) + str(calculateCheck(data.birthday))) + data.sex) + data.expirationDate) + str(calculateCheck(data.expirationDate))) + data.personalNo) + str(calculateCheck(data.personalNo))
  179:     
--------------------------------------------------------------------------------
[0.00300 s] incompetent
   - [#  71] COD MRTD: 
--------------------------------------------------------------------------------
  107:     linePos += 2
  108:     travelData.issuingCountry = line1[linePos:linePos + 3]
  109:     linePos += 3
  110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 111:         if ((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z')):
  112:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  113:         currentString += line1[linePos]
  114:         linePos += 1
  115:     travelData.lastName = currentString
--------------------------------------------------------------------------------
[0.00101 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [#  72] COD MRTD: 
--------------------------------------------------------------------------------
  115:     travelData.lastName = currentString
  116:     linePos += 2
  117:     currentString = ''
  118:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 119:         if ((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z')):
  120:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  121:         currentString += line1[linePos]
  122:         linePos += 1
  123:     travelData.firstName = currentString
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [#  73] COD MRTD: 
--------------------------------------------------------------------------------
  123:     travelData.firstName = currentString
  124:     linePos += 1
  125:     currentString = ''
  126:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 127:         if ((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z')):
  128:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  129:         currentString += line1[linePos]
  130:         linePos += 1
  131:     travelData.middleName = currentString
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [#  74] COI MRTD: 
--------------------------------------------------------------------------------
   62:     try:
   63:         int(i)
   64:         return int(i)
   65:     except ValueError:
-  66:         if (str(i) >= 'A' and str(i) <= 'Z'):
+  66:         if not ((str(i) >= 'A' and str(i) <= 'Z')):
   67:             return int(ord(str(i)) - 55)
   68:         elif (str(i) >= 'a' and str(i) <= 'z'):
   69:             return int(ord(str(i)) - 87)
   70:         else:
--------------------------------------------------------------------------------
[0.00103 s] killed by testCalculateCheck (MRTDtest_v2.TestMRTD)
   - [#  75] COI MRTD: 
--------------------------------------------------------------------------------
   64:         return int(i)
   65:     except ValueError:
   66:         if (str(i) >= 'A' and str(i) <= 'Z'):
   67:             return int(ord(str(i)) - 55)
-  68:         elif (str(i) >= 'a' and str(i) <= 'z'):
+  68:         elif not ((str(i) >= 'a' and str(i) <= 'z')):
   69:             return int(ord(str(i)) - 87)
   70:         else:
   71:             return 0
   72: 
--------------------------------------------------------------------------------
[0.00000 s] killed by testCalculateCheck (MRTDtest_v2.TestMRTD)
   - [#  76] COI MRTD: 
--------------------------------------------------------------------------------
   82:     return total % 10
   83: 
   84: def validateDate(date):
   85:     for char in date:
-  86:         if (char != '<' and (char < '0' or char > '9')):
+  86:         if not ((char != '<' and (char < '0' or char > '9'))):
   87:             raise Exception(('Invalid character ' + char) + ' in date')
   88: 
   89: 
   90: 
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [#  77] COI MRTD: 
--------------------------------------------------------------------------------
   96: 
   97: 
   98: def decodeMRZ():
   99:     (line1, line2) = scanMRZ()
- 100:     if (len(line1) != LINE_LENGTH or len(line2) != LINE_LENGTH):
+ 100:     if not ((len(line1) != LINE_LENGTH or len(line2) != LINE_LENGTH)):
  101:         raise Exception(('Lines must both be ' + str(LINE_LENGTH)) + ' characters.')
  102:     travelData = TravelData()
  103:     linePos = 0
  104:     
--------------------------------------------------------------------------------
[0.00099 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [#  78] COI MRTD: 
--------------------------------------------------------------------------------
  106:     travelData.docType = line1[linePos:linePos + 1]
  107:     linePos += 2
  108:     travelData.issuingCountry = line1[linePos:linePos + 3]
  109:     linePos += 3
- 110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
+ 110:     while not ((linePos < LINE_LENGTH and line1[linePos] != '<')):
  111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  112:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  113:         currentString += line1[linePos]
  114:         linePos += 1
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [#  79] COI MRTD: 
--------------------------------------------------------------------------------
  107:     linePos += 2
  108:     travelData.issuingCountry = line1[linePos:linePos + 3]
  109:     linePos += 3
  110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 111:         if not ((not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))))):
  112:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  113:         currentString += line1[linePos]
  114:         linePos += 1
  115:     travelData.lastName = currentString
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [#  80] COI MRTD: 
--------------------------------------------------------------------------------
  114:         linePos += 1
  115:     travelData.lastName = currentString
  116:     linePos += 2
  117:     currentString = ''
- 118:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
+ 118:     while not ((linePos < LINE_LENGTH and line1[linePos] != '<')):
  119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  120:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  121:         currentString += line1[linePos]
  122:         linePos += 1
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [#  81] COI MRTD: 
--------------------------------------------------------------------------------
  115:     travelData.lastName = currentString
  116:     linePos += 2
  117:     currentString = ''
  118:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 119:         if not ((not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))))):
  120:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  121:         currentString += line1[linePos]
  122:         linePos += 1
  123:     travelData.firstName = currentString
--------------------------------------------------------------------------------
[0.00099 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [#  82] COI MRTD: 
--------------------------------------------------------------------------------
  122:         linePos += 1
  123:     travelData.firstName = currentString
  124:     linePos += 1
  125:     currentString = ''
- 126:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
+ 126:     while not ((linePos < LINE_LENGTH and line1[linePos] != '<')):
  127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  128:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  129:         currentString += line1[linePos]
  130:         linePos += 1
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [#  83] COI MRTD: 
--------------------------------------------------------------------------------
  123:     travelData.firstName = currentString
  124:     linePos += 1
  125:     currentString = ''
  126:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 127:         if not ((not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))))):
  128:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  129:         currentString += line1[linePos]
  130:         linePos += 1
  131:     travelData.middleName = currentString
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [#  84] COI MRTD: 
--------------------------------------------------------------------------------
  168: def encodeMRZ(personalNo):
  169:     data = getTravelDataFromDB(personalNo)
  170:     
  171:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
- 172:     if len(line1) > LINE_LENGTH:
+ 172:     if not (len(line1) > LINE_LENGTH):
  173:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
  174:     while len(line1) < LINE_LENGTH:
  175:         line1 += '<'
  176:     
--------------------------------------------------------------------------------
[0.00306 s] killed by testEncodeMRZ (MRTDtest_v2.TestMRTD)
   - [#  85] COI MRTD: 
--------------------------------------------------------------------------------
  170:     
  171:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
  172:     if len(line1) > LINE_LENGTH:
  173:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
- 174:     while len(line1) < LINE_LENGTH:
+ 174:     while not (len(line1) < LINE_LENGTH):
  175:         line1 += '<'
  176:     
  177:     
  178:     line2 = ((((((((data.passportNo + str(calculateCheck(data.passportNo))) + data.countryCode) + data.birthday) + str(calculateCheck(data.birthday))) + data.sex) + data.expirationDate) + str(calculateCheck(data.expirationDate))) + data.personalNo) + str(calculateCheck(data.personalNo))
--------------------------------------------------------------------------------
[0.00400 s] killed by testEncodeMRZ (MRTDtest_v2.TestMRTD)
   - [#  86] COI MRTD: 
--------------------------------------------------------------------------------
  176:     
  177:     
  178:     line2 = ((((((((data.passportNo + str(calculateCheck(data.passportNo))) + data.countryCode) + data.birthday) + str(calculateCheck(data.birthday))) + data.sex) + data.expirationDate) + str(calculateCheck(data.expirationDate))) + data.personalNo) + str(calculateCheck(data.personalNo))
  179:     
- 180:     if len(line2) != LINE_LENGTH:
+ 180:     if not (len(line2) != LINE_LENGTH):
  181:         raise Exception(('Second line is not ' + str(LINE_LENGTH)) + ' characters.')
  182:     return (line1, line2)
  183: 
  184: 
--------------------------------------------------------------------------------
[0.00307 s] killed by testEncodeMRZ (MRTDtest_v2.TestMRTD)
   - [#  87] COI MRTD: 
--------------------------------------------------------------------------------
  185: 
  186: def checkMismatches(travelData):
  187:     
  188:     errors = TravelDataError()
- 189:     if int(travelData.passportCheck) != calculateCheck(travelData.passportNo):
+ 189:     if not (int(travelData.passportCheck) != calculateCheck(travelData.passportNo)):
  190:         errors.passportError = True
  191:     else:
  192:         errors.passportError = False
  193:     
--------------------------------------------------------------------------------
[0.00093 s] killed by testCheckMismatches (MRTDtest_v2.TestMRTD)
   - [#  88] COI MRTD: 
--------------------------------------------------------------------------------
  190:         errors.passportError = True
  191:     else:
  192:         errors.passportError = False
  193:     
- 194:     if int(travelData.birthdayCheck) != calculateCheck(travelData.birthday):
+ 194:     if not (int(travelData.birthdayCheck) != calculateCheck(travelData.birthday)):
  195:         errors.birthdayError = True
  196:     else:
  197:         errors.birthdayError = False
  198:     
--------------------------------------------------------------------------------
[0.00093 s] killed by testCheckMismatches (MRTDtest_v2.TestMRTD)
   - [#  89] COI MRTD: 
--------------------------------------------------------------------------------
  195:         errors.birthdayError = True
  196:     else:
  197:         errors.birthdayError = False
  198:     
- 199:     if int(travelData.expirationCheck) != calculateCheck(travelData.expirationDate):
+ 199:     if not (int(travelData.expirationCheck) != calculateCheck(travelData.expirationDate)):
  200:         errors.expirationError = True
  201:     else:
  202:         errors.expirationError = False
  203:     
--------------------------------------------------------------------------------
[0.00000 s] killed by testCheckMismatches (MRTDtest_v2.TestMRTD)
   - [#  90] COI MRTD: 
--------------------------------------------------------------------------------
  200:         errors.expirationError = True
  201:     else:
  202:         errors.expirationError = False
  203:     
- 204:     if int(travelData.personalNoCheck) != calculateCheck(travelData.personalNo):
+ 204:     if not (int(travelData.personalNoCheck) != calculateCheck(travelData.personalNo)):
  205:         errors.personalError = True
  206:     else:
  207:         errors.personalError = False
  208:     return errors
--------------------------------------------------------------------------------
[0.00099 s] killed by testCheckMismatches (MRTDtest_v2.TestMRTD)
   - [#  91] CRP MRTD: 
--------------------------------------------------------------------------------
-   1: PASSPORT_LENGTH = 9
+   1: PASSPORT_LENGTH = 10
    2: COUNTRY_CODE_LENGTH = 3
    3: DATE_LENGTH = 6
    4: SEX_LENGTH = 1
    5: LINE_LENGTH = 44
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [#  92] CRP MRTD: 
--------------------------------------------------------------------------------
    1: PASSPORT_LENGTH = 9
-   2: COUNTRY_CODE_LENGTH = 3
+   2: COUNTRY_CODE_LENGTH = 4
    3: DATE_LENGTH = 6
    4: SEX_LENGTH = 1
    5: LINE_LENGTH = 44
    6: 
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [#  93] CRP MRTD: 
--------------------------------------------------------------------------------
    1: PASSPORT_LENGTH = 9
    2: COUNTRY_CODE_LENGTH = 3
-   3: DATE_LENGTH = 6
+   3: DATE_LENGTH = 7
    4: SEX_LENGTH = 1
    5: LINE_LENGTH = 44
    6: 
    7: class TravelData:
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [#  94] CRP MRTD: 
--------------------------------------------------------------------------------
    1: PASSPORT_LENGTH = 9
    2: COUNTRY_CODE_LENGTH = 3
    3: DATE_LENGTH = 6
-   4: SEX_LENGTH = 1
+   4: SEX_LENGTH = 2
    5: LINE_LENGTH = 44
    6: 
    7: class TravelData:
    8:     
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [#  95] CRP MRTD: 
--------------------------------------------------------------------------------
    1: PASSPORT_LENGTH = 9
    2: COUNTRY_CODE_LENGTH = 3
    3: DATE_LENGTH = 6
    4: SEX_LENGTH = 1
-   5: LINE_LENGTH = 44
+   5: LINE_LENGTH = 45
    6: 
    7: class TravelData:
    8:     
    9:     
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [#  96] CRP MRTD: 
--------------------------------------------------------------------------------
   21:     
   22:     
   23:     
   24:     
-  25:     def __init__(self, dT='', iC='', lN='', fN='', mN='', passN='', pC='', cC='', b='', bC='', s='', eD='', eC='', perN='', perC=''):
+  25:     def __init__(self, dT='mutpy', iC='', lN='', fN='', mN='', passN='', pC='', cC='', b='', bC='', s='', eD='', eC='', perN='', perC=''):
   26:         self.docType = dT
   27:         self.issuingCountry = iC
   28:         self.lastName = lN
   29:         self.firstName = fN
--------------------------------------------------------------------------------
[0.00400 s] killed by testInitTravelData (MRTDtest_v2.TestMRTD)
   - [#  97] CRP MRTD: 
--------------------------------------------------------------------------------
   21:     
   22:     
   23:     
   24:     
-  25:     def __init__(self, dT='', iC='', lN='', fN='', mN='', passN='', pC='', cC='', b='', bC='', s='', eD='', eC='', perN='', perC=''):
+  25:     def __init__(self, dT='', iC='mutpy', lN='', fN='', mN='', passN='', pC='', cC='', b='', bC='', s='', eD='', eC='', perN='', perC=''):
   26:         self.docType = dT
   27:         self.issuingCountry = iC
   28:         self.lastName = lN
   29:         self.firstName = fN
--------------------------------------------------------------------------------
[0.00400 s] killed by testInitTravelData (MRTDtest_v2.TestMRTD)
   - [#  98] CRP MRTD: 
--------------------------------------------------------------------------------
   21:     
   22:     
   23:     
   24:     
-  25:     def __init__(self, dT='', iC='', lN='', fN='', mN='', passN='', pC='', cC='', b='', bC='', s='', eD='', eC='', perN='', perC=''):
+  25:     def __init__(self, dT='', iC='', lN='mutpy', fN='', mN='', passN='', pC='', cC='', b='', bC='', s='', eD='', eC='', perN='', perC=''):
   26:         self.docType = dT
   27:         self.issuingCountry = iC
   28:         self.lastName = lN
   29:         self.firstName = fN
--------------------------------------------------------------------------------
[0.00300 s] killed by testInitTravelData (MRTDtest_v2.TestMRTD)
   - [#  99] CRP MRTD: 
--------------------------------------------------------------------------------
   21:     
   22:     
   23:     
   24:     
-  25:     def __init__(self, dT='', iC='', lN='', fN='', mN='', passN='', pC='', cC='', b='', bC='', s='', eD='', eC='', perN='', perC=''):
+  25:     def __init__(self, dT='', iC='', lN='', fN='mutpy', mN='', passN='', pC='', cC='', b='', bC='', s='', eD='', eC='', perN='', perC=''):
   26:         self.docType = dT
   27:         self.issuingCountry = iC
   28:         self.lastName = lN
   29:         self.firstName = fN
--------------------------------------------------------------------------------
[0.00302 s] killed by testInitTravelData (MRTDtest_v2.TestMRTD)
   - [# 100] CRP MRTD: 
--------------------------------------------------------------------------------
   21:     
   22:     
   23:     
   24:     
-  25:     def __init__(self, dT='', iC='', lN='', fN='', mN='', passN='', pC='', cC='', b='', bC='', s='', eD='', eC='', perN='', perC=''):
+  25:     def __init__(self, dT='', iC='', lN='', fN='', mN='mutpy', passN='', pC='', cC='', b='', bC='', s='', eD='', eC='', perN='', perC=''):
   26:         self.docType = dT
   27:         self.issuingCountry = iC
   28:         self.lastName = lN
   29:         self.firstName = fN
--------------------------------------------------------------------------------
[0.00400 s] killed by testInitTravelData (MRTDtest_v2.TestMRTD)
   - [# 101] CRP MRTD: 
--------------------------------------------------------------------------------
   21:     
   22:     
   23:     
   24:     
-  25:     def __init__(self, dT='', iC='', lN='', fN='', mN='', passN='', pC='', cC='', b='', bC='', s='', eD='', eC='', perN='', perC=''):
+  25:     def __init__(self, dT='', iC='', lN='', fN='', mN='', passN='mutpy', pC='', cC='', b='', bC='', s='', eD='', eC='', perN='', perC=''):
   26:         self.docType = dT
   27:         self.issuingCountry = iC
   28:         self.lastName = lN
   29:         self.firstName = fN
--------------------------------------------------------------------------------
[0.00305 s] killed by testInitTravelData (MRTDtest_v2.TestMRTD)
   - [# 102] CRP MRTD: 
--------------------------------------------------------------------------------
   21:     
   22:     
   23:     
   24:     
-  25:     def __init__(self, dT='', iC='', lN='', fN='', mN='', passN='', pC='', cC='', b='', bC='', s='', eD='', eC='', perN='', perC=''):
+  25:     def __init__(self, dT='', iC='', lN='', fN='', mN='', passN='', pC='mutpy', cC='', b='', bC='', s='', eD='', eC='', perN='', perC=''):
   26:         self.docType = dT
   27:         self.issuingCountry = iC
   28:         self.lastName = lN
   29:         self.firstName = fN
--------------------------------------------------------------------------------
[0.00300 s] killed by testInitTravelData (MRTDtest_v2.TestMRTD)
   - [# 103] CRP MRTD: 
--------------------------------------------------------------------------------
   21:     
   22:     
   23:     
   24:     
-  25:     def __init__(self, dT='', iC='', lN='', fN='', mN='', passN='', pC='', cC='', b='', bC='', s='', eD='', eC='', perN='', perC=''):
+  25:     def __init__(self, dT='', iC='', lN='', fN='', mN='', passN='', pC='', cC='mutpy', b='', bC='', s='', eD='', eC='', perN='', perC=''):
   26:         self.docType = dT
   27:         self.issuingCountry = iC
   28:         self.lastName = lN
   29:         self.firstName = fN
--------------------------------------------------------------------------------
[0.00300 s] killed by testInitTravelData (MRTDtest_v2.TestMRTD)
   - [# 104] CRP MRTD: 
--------------------------------------------------------------------------------
   21:     
   22:     
   23:     
   24:     
-  25:     def __init__(self, dT='', iC='', lN='', fN='', mN='', passN='', pC='', cC='', b='', bC='', s='', eD='', eC='', perN='', perC=''):
+  25:     def __init__(self, dT='', iC='', lN='', fN='', mN='', passN='', pC='', cC='', b='mutpy', bC='', s='', eD='', eC='', perN='', perC=''):
   26:         self.docType = dT
   27:         self.issuingCountry = iC
   28:         self.lastName = lN
   29:         self.firstName = fN
--------------------------------------------------------------------------------
[0.00299 s] killed by testInitTravelData (MRTDtest_v2.TestMRTD)
   - [# 105] CRP MRTD: 
--------------------------------------------------------------------------------
   21:     
   22:     
   23:     
   24:     
-  25:     def __init__(self, dT='', iC='', lN='', fN='', mN='', passN='', pC='', cC='', b='', bC='', s='', eD='', eC='', perN='', perC=''):
+  25:     def __init__(self, dT='', iC='', lN='', fN='', mN='', passN='', pC='', cC='', b='', bC='mutpy', s='', eD='', eC='', perN='', perC=''):
   26:         self.docType = dT
   27:         self.issuingCountry = iC
   28:         self.lastName = lN
   29:         self.firstName = fN
--------------------------------------------------------------------------------
[0.00300 s] killed by testInitTravelData (MRTDtest_v2.TestMRTD)
   - [# 106] CRP MRTD: 
--------------------------------------------------------------------------------
   21:     
   22:     
   23:     
   24:     
-  25:     def __init__(self, dT='', iC='', lN='', fN='', mN='', passN='', pC='', cC='', b='', bC='', s='', eD='', eC='', perN='', perC=''):
+  25:     def __init__(self, dT='', iC='', lN='', fN='', mN='', passN='', pC='', cC='', b='', bC='', s='mutpy', eD='', eC='', perN='', perC=''):
   26:         self.docType = dT
   27:         self.issuingCountry = iC
   28:         self.lastName = lN
   29:         self.firstName = fN
--------------------------------------------------------------------------------
[0.00400 s] killed by testInitTravelData (MRTDtest_v2.TestMRTD)
   - [# 107] CRP MRTD: 
--------------------------------------------------------------------------------
   21:     
   22:     
   23:     
   24:     
-  25:     def __init__(self, dT='', iC='', lN='', fN='', mN='', passN='', pC='', cC='', b='', bC='', s='', eD='', eC='', perN='', perC=''):
+  25:     def __init__(self, dT='', iC='', lN='', fN='', mN='', passN='', pC='', cC='', b='', bC='', s='', eD='mutpy', eC='', perN='', perC=''):
   26:         self.docType = dT
   27:         self.issuingCountry = iC
   28:         self.lastName = lN
   29:         self.firstName = fN
--------------------------------------------------------------------------------
[0.00414 s] killed by testInitTravelData (MRTDtest_v2.TestMRTD)
   - [# 108] CRP MRTD: 
--------------------------------------------------------------------------------
   21:     
   22:     
   23:     
   24:     
-  25:     def __init__(self, dT='', iC='', lN='', fN='', mN='', passN='', pC='', cC='', b='', bC='', s='', eD='', eC='', perN='', perC=''):
+  25:     def __init__(self, dT='', iC='', lN='', fN='', mN='', passN='', pC='', cC='', b='', bC='', s='', eD='', eC='mutpy', perN='', perC=''):
   26:         self.docType = dT
   27:         self.issuingCountry = iC
   28:         self.lastName = lN
   29:         self.firstName = fN
--------------------------------------------------------------------------------
[0.00300 s] killed by testInitTravelData (MRTDtest_v2.TestMRTD)
   - [# 109] CRP MRTD: 
--------------------------------------------------------------------------------
   21:     
   22:     
   23:     
   24:     
-  25:     def __init__(self, dT='', iC='', lN='', fN='', mN='', passN='', pC='', cC='', b='', bC='', s='', eD='', eC='', perN='', perC=''):
+  25:     def __init__(self, dT='', iC='', lN='', fN='', mN='', passN='', pC='', cC='', b='', bC='', s='', eD='', eC='', perN='mutpy', perC=''):
   26:         self.docType = dT
   27:         self.issuingCountry = iC
   28:         self.lastName = lN
   29:         self.firstName = fN
--------------------------------------------------------------------------------
[0.00300 s] killed by testInitTravelData (MRTDtest_v2.TestMRTD)
   - [# 110] CRP MRTD: 
--------------------------------------------------------------------------------
   21:     
   22:     
   23:     
   24:     
-  25:     def __init__(self, dT='', iC='', lN='', fN='', mN='', passN='', pC='', cC='', b='', bC='', s='', eD='', eC='', perN='', perC=''):
+  25:     def __init__(self, dT='', iC='', lN='', fN='', mN='', passN='', pC='', cC='', b='', bC='', s='', eD='', eC='', perN='', perC='mutpy'):
   26:         self.docType = dT
   27:         self.issuingCountry = iC
   28:         self.lastName = lN
   29:         self.firstName = fN
--------------------------------------------------------------------------------
[0.00317 s] killed by testInitTravelData (MRTDtest_v2.TestMRTD)
   - [# 111] CRP MRTD: 
--------------------------------------------------------------------------------
   62:     try:
   63:         int(i)
   64:         return int(i)
   65:     except ValueError:
-  66:         if (str(i) >= 'A' and str(i) <= 'Z'):
+  66:         if (str(i) >= 'mutpy' and str(i) <= 'Z'):
   67:             return int(ord(str(i)) - 55)
   68:         elif (str(i) >= 'a' and str(i) <= 'z'):
   69:             return int(ord(str(i)) - 87)
   70:         else:
--------------------------------------------------------------------------------
[0.00098 s] killed by testCalculateCheck (MRTDtest_v2.TestMRTD)
   - [# 112] CRP MRTD: 
--------------------------------------------------------------------------------
   62:     try:
   63:         int(i)
   64:         return int(i)
   65:     except ValueError:
-  66:         if (str(i) >= 'A' and str(i) <= 'Z'):
+  66:         if (str(i) >= '' and str(i) <= 'Z'):
   67:             return int(ord(str(i)) - 55)
   68:         elif (str(i) >= 'a' and str(i) <= 'z'):
   69:             return int(ord(str(i)) - 87)
   70:         else:
--------------------------------------------------------------------------------
[0.00000 s] killed by testCalculateCheck (MRTDtest_v2.TestMRTD)
   - [# 113] CRP MRTD: 
--------------------------------------------------------------------------------
   62:     try:
   63:         int(i)
   64:         return int(i)
   65:     except ValueError:
-  66:         if (str(i) >= 'A' and str(i) <= 'Z'):
+  66:         if (str(i) >= 'A' and str(i) <= 'mutpy'):
   67:             return int(ord(str(i)) - 55)
   68:         elif (str(i) >= 'a' and str(i) <= 'z'):
   69:             return int(ord(str(i)) - 87)
   70:         else:
--------------------------------------------------------------------------------
[0.00100 s] killed by testCalculateCheck (MRTDtest_v2.TestMRTD)
   - [# 114] CRP MRTD: 
--------------------------------------------------------------------------------
   62:     try:
   63:         int(i)
   64:         return int(i)
   65:     except ValueError:
-  66:         if (str(i) >= 'A' and str(i) <= 'Z'):
+  66:         if (str(i) >= 'A' and str(i) <= ''):
   67:             return int(ord(str(i)) - 55)
   68:         elif (str(i) >= 'a' and str(i) <= 'z'):
   69:             return int(ord(str(i)) - 87)
   70:         else:
--------------------------------------------------------------------------------
[0.00100 s] killed by testCalculateCheck (MRTDtest_v2.TestMRTD)
   - [# 115] CRP MRTD: 
--------------------------------------------------------------------------------
   63:         int(i)
   64:         return int(i)
   65:     except ValueError:
   66:         if (str(i) >= 'A' and str(i) <= 'Z'):
-  67:             return int(ord(str(i)) - 55)
+  67:             return int(ord(str(i)) - 56)
   68:         elif (str(i) >= 'a' and str(i) <= 'z'):
   69:             return int(ord(str(i)) - 87)
   70:         else:
   71:             return 0
--------------------------------------------------------------------------------
[0.00000 s] killed by testCalculateCheck (MRTDtest_v2.TestMRTD)
   - [# 116] CRP MRTD: 
--------------------------------------------------------------------------------
   64:         return int(i)
   65:     except ValueError:
   66:         if (str(i) >= 'A' and str(i) <= 'Z'):
   67:             return int(ord(str(i)) - 55)
-  68:         elif (str(i) >= 'a' and str(i) <= 'z'):
+  68:         elif (str(i) >= 'mutpy' and str(i) <= 'z'):
   69:             return int(ord(str(i)) - 87)
   70:         else:
   71:             return 0
   72: 
--------------------------------------------------------------------------------
[0.00299 s] killed by testGetNumericalValue (MRTDtest_v2.TestMRTD)
   - [# 117] CRP MRTD: 
--------------------------------------------------------------------------------
   64:         return int(i)
   65:     except ValueError:
   66:         if (str(i) >= 'A' and str(i) <= 'Z'):
   67:             return int(ord(str(i)) - 55)
-  68:         elif (str(i) >= 'a' and str(i) <= 'z'):
+  68:         elif (str(i) >= '' and str(i) <= 'z'):
   69:             return int(ord(str(i)) - 87)
   70:         else:
   71:             return 0
   72: 
--------------------------------------------------------------------------------
[0.00000 s] killed by testCalculateCheck (MRTDtest_v2.TestMRTD)
   - [# 118] CRP MRTD: 
--------------------------------------------------------------------------------
   64:         return int(i)
   65:     except ValueError:
   66:         if (str(i) >= 'A' and str(i) <= 'Z'):
   67:             return int(ord(str(i)) - 55)
-  68:         elif (str(i) >= 'a' and str(i) <= 'z'):
+  68:         elif (str(i) >= 'a' and str(i) <= 'mutpy'):
   69:             return int(ord(str(i)) - 87)
   70:         else:
   71:             return 0
   72: 
--------------------------------------------------------------------------------
[0.00000 s] killed by testCalculateCheck (MRTDtest_v2.TestMRTD)
   - [# 119] CRP MRTD: 
--------------------------------------------------------------------------------
   64:         return int(i)
   65:     except ValueError:
   66:         if (str(i) >= 'A' and str(i) <= 'Z'):
   67:             return int(ord(str(i)) - 55)
-  68:         elif (str(i) >= 'a' and str(i) <= 'z'):
+  68:         elif (str(i) >= 'a' and str(i) <= ''):
   69:             return int(ord(str(i)) - 87)
   70:         else:
   71:             return 0
   72: 
--------------------------------------------------------------------------------
[0.00099 s] killed by testCalculateCheck (MRTDtest_v2.TestMRTD)
   - [# 120] CRP MRTD: 
--------------------------------------------------------------------------------
   65:     except ValueError:
   66:         if (str(i) >= 'A' and str(i) <= 'Z'):
   67:             return int(ord(str(i)) - 55)
   68:         elif (str(i) >= 'a' and str(i) <= 'z'):
-  69:             return int(ord(str(i)) - 87)
+  69:             return int(ord(str(i)) - 88)
   70:         else:
   71:             return 0
   72: 
   73: def calculateCheck(lst):
--------------------------------------------------------------------------------
[0.00420 s] killed by testGetNumericalValue (MRTDtest_v2.TestMRTD)
   - [# 121] CRP MRTD: 
--------------------------------------------------------------------------------
   67:             return int(ord(str(i)) - 55)
   68:         elif (str(i) >= 'a' and str(i) <= 'z'):
   69:             return int(ord(str(i)) - 87)
   70:         else:
-  71:             return 0
+  71:             return 1
   72: 
   73: def calculateCheck(lst):
   74:     weights = [7, 3, 1]
   75:     weightIdx = 0
--------------------------------------------------------------------------------
[0.00100 s] killed by testCalculateCheck (MRTDtest_v2.TestMRTD)
   - [# 122] CRP MRTD: 
--------------------------------------------------------------------------------
   70:         else:
   71:             return 0
   72: 
   73: def calculateCheck(lst):
-  74:     weights = [7, 3, 1]
+  74:     weights = [8, 3, 1]
   75:     weightIdx = 0
   76:     total = 0
   77:     
   78:     for i in lst:
--------------------------------------------------------------------------------
[0.00000 s] killed by testCalculateCheck (MRTDtest_v2.TestMRTD)
   - [# 123] CRP MRTD: 
--------------------------------------------------------------------------------
   70:         else:
   71:             return 0
   72: 
   73: def calculateCheck(lst):
-  74:     weights = [7, 3, 1]
+  74:     weights = [7, 4, 1]
   75:     weightIdx = 0
   76:     total = 0
   77:     
   78:     for i in lst:
--------------------------------------------------------------------------------
[0.00100 s] killed by testCalculateCheck (MRTDtest_v2.TestMRTD)
   - [# 124] CRP MRTD: 
--------------------------------------------------------------------------------
   70:         else:
   71:             return 0
   72: 
   73: def calculateCheck(lst):
-  74:     weights = [7, 3, 1]
+  74:     weights = [7, 3, 2]
   75:     weightIdx = 0
   76:     total = 0
   77:     
   78:     for i in lst:
--------------------------------------------------------------------------------
[0.00100 s] killed by testCalculateCheck (MRTDtest_v2.TestMRTD)
   - [# 125] CRP MRTD: 
--------------------------------------------------------------------------------
   71:             return 0
   72: 
   73: def calculateCheck(lst):
   74:     weights = [7, 3, 1]
-  75:     weightIdx = 0
+  75:     weightIdx = 1
   76:     total = 0
   77:     
   78:     for i in lst:
   79:         numVal = getNumericalValue(i)
--------------------------------------------------------------------------------
[0.00000 s] killed by testCalculateCheck (MRTDtest_v2.TestMRTD)
   - [# 126] CRP MRTD: 
--------------------------------------------------------------------------------
   72: 
   73: def calculateCheck(lst):
   74:     weights = [7, 3, 1]
   75:     weightIdx = 0
-  76:     total = 0
+  76:     total = 1
   77:     
   78:     for i in lst:
   79:         numVal = getNumericalValue(i)
   80:         total += numVal * weights[weightIdx]
--------------------------------------------------------------------------------
[0.00099 s] killed by testCalculateCheck (MRTDtest_v2.TestMRTD)
   - [# 127] CRP MRTD: 
--------------------------------------------------------------------------------
   77:     
   78:     for i in lst:
   79:         numVal = getNumericalValue(i)
   80:         total += numVal * weights[weightIdx]
-  81:         weightIdx = (weightIdx + 1) % len(weights)
+  81:         weightIdx = (weightIdx + 2) % len(weights)
   82:     return total % 10
   83: 
   84: def validateDate(date):
   85:     for char in date:
--------------------------------------------------------------------------------
[0.00101 s] killed by testCalculateCheck (MRTDtest_v2.TestMRTD)
   - [# 128] CRP MRTD: 
--------------------------------------------------------------------------------
   78:     for i in lst:
   79:         numVal = getNumericalValue(i)
   80:         total += numVal * weights[weightIdx]
   81:         weightIdx = (weightIdx + 1) % len(weights)
-  82:     return total % 10
+  82:     return total % 11
   83: 
   84: def validateDate(date):
   85:     for char in date:
   86:         if (char != '<' and (char < '0' or char > '9')):
--------------------------------------------------------------------------------
[0.00000 s] killed by testCalculateCheck (MRTDtest_v2.TestMRTD)
   - [# 129] CRP MRTD: 
--------------------------------------------------------------------------------
   82:     return total % 10
   83: 
   84: def validateDate(date):
   85:     for char in date:
-  86:         if (char != '<' and (char < '0' or char > '9')):
+  86:         if (char != 'mutpy' and (char < '0' or char > '9')):
   87:             raise Exception(('Invalid character ' + char) + ' in date')
   88: 
   89: 
   90: 
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ10 (MRTDtest_v2.TestMRTD)
   - [# 130] CRP MRTD: 
--------------------------------------------------------------------------------
   82:     return total % 10
   83: 
   84: def validateDate(date):
   85:     for char in date:
-  86:         if (char != '<' and (char < '0' or char > '9')):
+  86:         if (char != '' and (char < '0' or char > '9')):
   87:             raise Exception(('Invalid character ' + char) + ' in date')
   88: 
   89: 
   90: 
--------------------------------------------------------------------------------
[0.00101 s] killed by testDecodeMRZ10 (MRTDtest_v2.TestMRTD)
   - [# 131] CRP MRTD: 
--------------------------------------------------------------------------------
   82:     return total % 10
   83: 
   84: def validateDate(date):
   85:     for char in date:
-  86:         if (char != '<' and (char < '0' or char > '9')):
+  86:         if (char != '<' and (char < 'mutpy' or char > '9')):
   87:             raise Exception(('Invalid character ' + char) + ' in date')
   88: 
   89: 
   90: 
--------------------------------------------------------------------------------
[0.00201 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 132] CRP MRTD: 
--------------------------------------------------------------------------------
   82:     return total % 10
   83: 
   84: def validateDate(date):
   85:     for char in date:
-  86:         if (char != '<' and (char < '0' or char > '9')):
+  86:         if (char != '<' and (char < '' or char > '9')):
   87:             raise Exception(('Invalid character ' + char) + ' in date')
   88: 
   89: 
   90: 
--------------------------------------------------------------------------------
[0.00263 s] killed by testDecodeMRZ9 (MRTDtest_v2.TestMRTD)
   - [# 133] CRP MRTD: 
--------------------------------------------------------------------------------
   82:     return total % 10
   83: 
   84: def validateDate(date):
   85:     for char in date:
-  86:         if (char != '<' and (char < '0' or char > '9')):
+  86:         if (char != '<' and (char < '0' or char > 'mutpy')):
   87:             raise Exception(('Invalid character ' + char) + ' in date')
   88: 
   89: 
   90: 
--------------------------------------------------------------------------------
[0.00202 s] killed by testDecodeMRZ11 (MRTDtest_v2.TestMRTD)
   - [# 134] CRP MRTD: 
--------------------------------------------------------------------------------
   82:     return total % 10
   83: 
   84: def validateDate(date):
   85:     for char in date:
-  86:         if (char != '<' and (char < '0' or char > '9')):
+  86:         if (char != '<' and (char < '0' or char > '')):
   87:             raise Exception(('Invalid character ' + char) + ' in date')
   88: 
   89: 
   90: 
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 135] CRP MRTD: 
--------------------------------------------------------------------------------
   83: 
   84: def validateDate(date):
   85:     for char in date:
   86:         if (char != '<' and (char < '0' or char > '9')):
-  87:             raise Exception(('Invalid character ' + char) + ' in date')
+  87:             raise Exception(('mutpy' + char) + ' in date')
   88: 
   89: 
   90: 
   91: def scanMRZ():
--------------------------------------------------------------------------------
[0.00348 s] survived
   - [# 136] CRP MRTD: 
--------------------------------------------------------------------------------
   83: 
   84: def validateDate(date):
   85:     for char in date:
   86:         if (char != '<' and (char < '0' or char > '9')):
-  87:             raise Exception(('Invalid character ' + char) + ' in date')
+  87:             raise Exception(('' + char) + ' in date')
   88: 
   89: 
   90: 
   91: def scanMRZ():
--------------------------------------------------------------------------------
[0.00281 s] survived
   - [# 137] CRP MRTD: 
--------------------------------------------------------------------------------
   83: 
   84: def validateDate(date):
   85:     for char in date:
   86:         if (char != '<' and (char < '0' or char > '9')):
-  87:             raise Exception(('Invalid character ' + char) + ' in date')
+  87:             raise Exception(('Invalid character ' + char) + 'mutpy')
   88: 
   89: 
   90: 
   91: def scanMRZ():
--------------------------------------------------------------------------------
[0.00306 s] survived
   - [# 138] CRP MRTD: 
--------------------------------------------------------------------------------
   83: 
   84: def validateDate(date):
   85:     for char in date:
   86:         if (char != '<' and (char < '0' or char > '9')):
-  87:             raise Exception(('Invalid character ' + char) + ' in date')
+  87:             raise Exception(('Invalid character ' + char) + '')
   88: 
   89: 
   90: 
   91: def scanMRZ():
--------------------------------------------------------------------------------
[0.00300 s] survived
   - [# 139] CRP MRTD: 
--------------------------------------------------------------------------------
   97: 
   98: def decodeMRZ():
   99:     (line1, line2) = scanMRZ()
  100:     if (len(line1) != LINE_LENGTH or len(line2) != LINE_LENGTH):
- 101:         raise Exception(('Lines must both be ' + str(LINE_LENGTH)) + ' characters.')
+ 101:         raise Exception(('mutpy' + str(LINE_LENGTH)) + ' characters.')
  102:     travelData = TravelData()
  103:     linePos = 0
  104:     
  105:     currentString = ''
--------------------------------------------------------------------------------
[0.00200 s] survived
   - [# 140] CRP MRTD: 
--------------------------------------------------------------------------------
   97: 
   98: def decodeMRZ():
   99:     (line1, line2) = scanMRZ()
  100:     if (len(line1) != LINE_LENGTH or len(line2) != LINE_LENGTH):
- 101:         raise Exception(('Lines must both be ' + str(LINE_LENGTH)) + ' characters.')
+ 101:         raise Exception(('' + str(LINE_LENGTH)) + ' characters.')
  102:     travelData = TravelData()
  103:     linePos = 0
  104:     
  105:     currentString = ''
--------------------------------------------------------------------------------
[0.00813 s] survived
   - [# 141] CRP MRTD: 
--------------------------------------------------------------------------------
   97: 
   98: def decodeMRZ():
   99:     (line1, line2) = scanMRZ()
  100:     if (len(line1) != LINE_LENGTH or len(line2) != LINE_LENGTH):
- 101:         raise Exception(('Lines must both be ' + str(LINE_LENGTH)) + ' characters.')
+ 101:         raise Exception(('Lines must both be ' + str(LINE_LENGTH)) + 'mutpy')
  102:     travelData = TravelData()
  103:     linePos = 0
  104:     
  105:     currentString = ''
--------------------------------------------------------------------------------
[0.00300 s] survived
   - [# 142] CRP MRTD: 
--------------------------------------------------------------------------------
   97: 
   98: def decodeMRZ():
   99:     (line1, line2) = scanMRZ()
  100:     if (len(line1) != LINE_LENGTH or len(line2) != LINE_LENGTH):
- 101:         raise Exception(('Lines must both be ' + str(LINE_LENGTH)) + ' characters.')
+ 101:         raise Exception(('Lines must both be ' + str(LINE_LENGTH)) + '')
  102:     travelData = TravelData()
  103:     linePos = 0
  104:     
  105:     currentString = ''
--------------------------------------------------------------------------------
[0.00300 s] survived
   - [# 143] CRP MRTD: 
--------------------------------------------------------------------------------
   99:     (line1, line2) = scanMRZ()
  100:     if (len(line1) != LINE_LENGTH or len(line2) != LINE_LENGTH):
  101:         raise Exception(('Lines must both be ' + str(LINE_LENGTH)) + ' characters.')
  102:     travelData = TravelData()
- 103:     linePos = 0
+ 103:     linePos = 1
  104:     
  105:     currentString = ''
  106:     travelData.docType = line1[linePos:linePos + 1]
  107:     linePos += 2
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 144] CRP MRTD: 
--------------------------------------------------------------------------------
  101:         raise Exception(('Lines must both be ' + str(LINE_LENGTH)) + ' characters.')
  102:     travelData = TravelData()
  103:     linePos = 0
  104:     
- 105:     currentString = ''
+ 105:     currentString = 'mutpy'
  106:     travelData.docType = line1[linePos:linePos + 1]
  107:     linePos += 2
  108:     travelData.issuingCountry = line1[linePos:linePos + 3]
  109:     linePos += 3
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 145] CRP MRTD: 
--------------------------------------------------------------------------------
  102:     travelData = TravelData()
  103:     linePos = 0
  104:     
  105:     currentString = ''
- 106:     travelData.docType = line1[linePos:linePos + 1]
+ 106:     travelData.docType = line1[linePos:linePos + 2]
  107:     linePos += 2
  108:     travelData.issuingCountry = line1[linePos:linePos + 3]
  109:     linePos += 3
  110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 146] CRP MRTD: 
--------------------------------------------------------------------------------
  103:     linePos = 0
  104:     
  105:     currentString = ''
  106:     travelData.docType = line1[linePos:linePos + 1]
- 107:     linePos += 2
+ 107:     linePos += 3
  108:     travelData.issuingCountry = line1[linePos:linePos + 3]
  109:     linePos += 3
  110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
  111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
--------------------------------------------------------------------------------
[0.00112 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 147] CRP MRTD: 
--------------------------------------------------------------------------------
  104:     
  105:     currentString = ''
  106:     travelData.docType = line1[linePos:linePos + 1]
  107:     linePos += 2
- 108:     travelData.issuingCountry = line1[linePos:linePos + 3]
+ 108:     travelData.issuingCountry = line1[linePos:linePos + 4]
  109:     linePos += 3
  110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
  111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  112:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
--------------------------------------------------------------------------------
[0.00000 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 148] CRP MRTD: 
--------------------------------------------------------------------------------
  105:     currentString = ''
  106:     travelData.docType = line1[linePos:linePos + 1]
  107:     linePos += 2
  108:     travelData.issuingCountry = line1[linePos:linePos + 3]
- 109:     linePos += 3
+ 109:     linePos += 4
  110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
  111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  112:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  113:         currentString += line1[linePos]
--------------------------------------------------------------------------------
[0.00300 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 149] CRP MRTD: 
--------------------------------------------------------------------------------
  106:     travelData.docType = line1[linePos:linePos + 1]
  107:     linePos += 2
  108:     travelData.issuingCountry = line1[linePos:linePos + 3]
  109:     linePos += 3
- 110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
+ 110:     while (linePos < LINE_LENGTH and line1[linePos] != 'mutpy'):
  111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  112:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  113:         currentString += line1[linePos]
  114:         linePos += 1
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 150] CRP MRTD: 
--------------------------------------------------------------------------------
  106:     travelData.docType = line1[linePos:linePos + 1]
  107:     linePos += 2
  108:     travelData.issuingCountry = line1[linePos:linePos + 3]
  109:     linePos += 3
- 110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
+ 110:     while (linePos < LINE_LENGTH and line1[linePos] != ''):
  111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  112:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  113:         currentString += line1[linePos]
  114:         linePos += 1
--------------------------------------------------------------------------------
[0.00099 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 151] CRP MRTD: 
--------------------------------------------------------------------------------
  107:     linePos += 2
  108:     travelData.issuingCountry = line1[linePos:linePos + 3]
  109:     linePos += 3
  110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 111:         if not (((line1[linePos] >= 'mutpy' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  112:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  113:         currentString += line1[linePos]
  114:         linePos += 1
  115:     travelData.lastName = currentString
--------------------------------------------------------------------------------
[0.00193 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 152] CRP MRTD: 
--------------------------------------------------------------------------------
  107:     linePos += 2
  108:     travelData.issuingCountry = line1[linePos:linePos + 3]
  109:     linePos += 3
  110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 111:         if not (((line1[linePos] >= '' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  112:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  113:         currentString += line1[linePos]
  114:         linePos += 1
  115:     travelData.lastName = currentString
--------------------------------------------------------------------------------
[0.00207 s] killed by testDecodeMRZ6 (MRTDtest_v2.TestMRTD)
   - [# 153] CRP MRTD: 
--------------------------------------------------------------------------------
  107:     linePos += 2
  108:     travelData.issuingCountry = line1[linePos:linePos + 3]
  109:     linePos += 3
  110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'mutpy') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  112:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  113:         currentString += line1[linePos]
  114:         linePos += 1
  115:     travelData.lastName = currentString
--------------------------------------------------------------------------------
[0.00300 s] survived
   - [# 154] CRP MRTD: 
--------------------------------------------------------------------------------
  107:     linePos += 2
  108:     travelData.issuingCountry = line1[linePos:linePos + 3]
  109:     linePos += 3
  110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= '') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  112:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  113:         currentString += line1[linePos]
  114:         linePos += 1
  115:     travelData.lastName = currentString
--------------------------------------------------------------------------------
[0.00101 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 155] CRP MRTD: 
--------------------------------------------------------------------------------
  107:     linePos += 2
  108:     travelData.issuingCountry = line1[linePos:linePos + 3]
  109:     linePos += 3
  110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'mutpy' and line1[linePos] <= 'z'))):
  112:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  113:         currentString += line1[linePos]
  114:         linePos += 1
  115:     travelData.lastName = currentString
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ13 (MRTDtest_v2.TestMRTD)
   - [# 156] CRP MRTD: 
--------------------------------------------------------------------------------
  107:     linePos += 2
  108:     travelData.issuingCountry = line1[linePos:linePos + 3]
  109:     linePos += 3
  110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= '' and line1[linePos] <= 'z'))):
  112:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  113:         currentString += line1[linePos]
  114:         linePos += 1
  115:     travelData.lastName = currentString
--------------------------------------------------------------------------------
[0.00300 s] killed by testDecodeMRZ6 (MRTDtest_v2.TestMRTD)
   - [# 157] CRP MRTD: 
--------------------------------------------------------------------------------
  107:     linePos += 2
  108:     travelData.issuingCountry = line1[linePos:linePos + 3]
  109:     linePos += 3
  110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'mutpy'))):
  112:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  113:         currentString += line1[linePos]
  114:         linePos += 1
  115:     travelData.lastName = currentString
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ13 (MRTDtest_v2.TestMRTD)
   - [# 158] CRP MRTD: 
--------------------------------------------------------------------------------
  107:     linePos += 2
  108:     travelData.issuingCountry = line1[linePos:linePos + 3]
  109:     linePos += 3
  110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= ''))):
  112:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  113:         currentString += line1[linePos]
  114:         linePos += 1
  115:     travelData.lastName = currentString
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ13 (MRTDtest_v2.TestMRTD)
   - [# 159] CRP MRTD: 
--------------------------------------------------------------------------------
  108:     travelData.issuingCountry = line1[linePos:linePos + 3]
  109:     linePos += 3
  110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
  111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
- 112:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
+ 112:             raise Exception(('mutpy' + line1[linePos]) + ' in last name')
  113:         currentString += line1[linePos]
  114:         linePos += 1
  115:     travelData.lastName = currentString
  116:     linePos += 2
--------------------------------------------------------------------------------
[0.00300 s] survived
   - [# 160] CRP MRTD: 
--------------------------------------------------------------------------------
  108:     travelData.issuingCountry = line1[linePos:linePos + 3]
  109:     linePos += 3
  110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
  111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
- 112:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
+ 112:             raise Exception(('' + line1[linePos]) + ' in last name')
  113:         currentString += line1[linePos]
  114:         linePos += 1
  115:     travelData.lastName = currentString
  116:     linePos += 2
--------------------------------------------------------------------------------
[0.00400 s] survived
   - [# 161] CRP MRTD: 
--------------------------------------------------------------------------------
  108:     travelData.issuingCountry = line1[linePos:linePos + 3]
  109:     linePos += 3
  110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
  111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
- 112:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
+ 112:             raise Exception(('Invalid character ' + line1[linePos]) + 'mutpy')
  113:         currentString += line1[linePos]
  114:         linePos += 1
  115:     travelData.lastName = currentString
  116:     linePos += 2
--------------------------------------------------------------------------------
[0.00401 s] survived
   - [# 162] CRP MRTD: 
--------------------------------------------------------------------------------
  108:     travelData.issuingCountry = line1[linePos:linePos + 3]
  109:     linePos += 3
  110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
  111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
- 112:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
+ 112:             raise Exception(('Invalid character ' + line1[linePos]) + '')
  113:         currentString += line1[linePos]
  114:         linePos += 1
  115:     travelData.lastName = currentString
  116:     linePos += 2
--------------------------------------------------------------------------------
[0.00300 s] survived
   - [# 163] CRP MRTD: 
--------------------------------------------------------------------------------
  110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
  111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  112:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  113:         currentString += line1[linePos]
- 114:         linePos += 1
+ 114:         linePos += 2
  115:     travelData.lastName = currentString
  116:     linePos += 2
  117:     currentString = ''
  118:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 164] CRP MRTD: 
--------------------------------------------------------------------------------
  112:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  113:         currentString += line1[linePos]
  114:         linePos += 1
  115:     travelData.lastName = currentString
- 116:     linePos += 2
+ 116:     linePos += 3
  117:     currentString = ''
  118:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
  119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  120:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
--------------------------------------------------------------------------------
[0.00099 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 165] CRP MRTD: 
--------------------------------------------------------------------------------
  113:         currentString += line1[linePos]
  114:         linePos += 1
  115:     travelData.lastName = currentString
  116:     linePos += 2
- 117:     currentString = ''
+ 117:     currentString = 'mutpy'
  118:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
  119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  120:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  121:         currentString += line1[linePos]
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 166] CRP MRTD: 
--------------------------------------------------------------------------------
  114:         linePos += 1
  115:     travelData.lastName = currentString
  116:     linePos += 2
  117:     currentString = ''
- 118:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
+ 118:     while (linePos < LINE_LENGTH and line1[linePos] != 'mutpy'):
  119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  120:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  121:         currentString += line1[linePos]
  122:         linePos += 1
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 167] CRP MRTD: 
--------------------------------------------------------------------------------
  114:         linePos += 1
  115:     travelData.lastName = currentString
  116:     linePos += 2
  117:     currentString = ''
- 118:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
+ 118:     while (linePos < LINE_LENGTH and line1[linePos] != ''):
  119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  120:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  121:         currentString += line1[linePos]
  122:         linePos += 1
--------------------------------------------------------------------------------
[0.00165 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 168] CRP MRTD: 
--------------------------------------------------------------------------------
  115:     travelData.lastName = currentString
  116:     linePos += 2
  117:     currentString = ''
  118:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 119:         if not (((line1[linePos] >= 'mutpy' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  120:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  121:         currentString += line1[linePos]
  122:         linePos += 1
  123:     travelData.firstName = currentString
--------------------------------------------------------------------------------
[0.00127 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 169] CRP MRTD: 
--------------------------------------------------------------------------------
  115:     travelData.lastName = currentString
  116:     linePos += 2
  117:     currentString = ''
  118:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 119:         if not (((line1[linePos] >= '' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  120:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  121:         currentString += line1[linePos]
  122:         linePos += 1
  123:     travelData.firstName = currentString
--------------------------------------------------------------------------------
[0.00199 s] killed by testDecodeMRZ7 (MRTDtest_v2.TestMRTD)
   - [# 170] CRP MRTD: 
--------------------------------------------------------------------------------
  115:     travelData.lastName = currentString
  116:     linePos += 2
  117:     currentString = ''
  118:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'mutpy') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  120:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  121:         currentString += line1[linePos]
  122:         linePos += 1
  123:     travelData.firstName = currentString
--------------------------------------------------------------------------------
[0.00300 s] survived
   - [# 171] CRP MRTD: 
--------------------------------------------------------------------------------
  115:     travelData.lastName = currentString
  116:     linePos += 2
  117:     currentString = ''
  118:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= '') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  120:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  121:         currentString += line1[linePos]
  122:         linePos += 1
  123:     travelData.firstName = currentString
--------------------------------------------------------------------------------
[0.00101 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 172] CRP MRTD: 
--------------------------------------------------------------------------------
  115:     travelData.lastName = currentString
  116:     linePos += 2
  117:     currentString = ''
  118:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'mutpy' and line1[linePos] <= 'z'))):
  120:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  121:         currentString += line1[linePos]
  122:         linePos += 1
  123:     travelData.firstName = currentString
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ13 (MRTDtest_v2.TestMRTD)
   - [# 173] CRP MRTD: 
--------------------------------------------------------------------------------
  115:     travelData.lastName = currentString
  116:     linePos += 2
  117:     currentString = ''
  118:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= '' and line1[linePos] <= 'z'))):
  120:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  121:         currentString += line1[linePos]
  122:         linePos += 1
  123:     travelData.firstName = currentString
--------------------------------------------------------------------------------
[0.00300 s] killed by testDecodeMRZ7 (MRTDtest_v2.TestMRTD)
   - [# 174] CRP MRTD: 
--------------------------------------------------------------------------------
  115:     travelData.lastName = currentString
  116:     linePos += 2
  117:     currentString = ''
  118:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'mutpy'))):
  120:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  121:         currentString += line1[linePos]
  122:         linePos += 1
  123:     travelData.firstName = currentString
--------------------------------------------------------------------------------
[0.00199 s] killed by testDecodeMRZ13 (MRTDtest_v2.TestMRTD)
   - [# 175] CRP MRTD: 
--------------------------------------------------------------------------------
  115:     travelData.lastName = currentString
  116:     linePos += 2
  117:     currentString = ''
  118:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= ''))):
  120:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  121:         currentString += line1[linePos]
  122:         linePos += 1
  123:     travelData.firstName = currentString
--------------------------------------------------------------------------------
[0.00199 s] killed by testDecodeMRZ13 (MRTDtest_v2.TestMRTD)
   - [# 176] CRP MRTD: 
--------------------------------------------------------------------------------
  116:     linePos += 2
  117:     currentString = ''
  118:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
  119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
- 120:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
+ 120:             raise Exception(('mutpy' + line1[linePos]) + ' in first name')
  121:         currentString += line1[linePos]
  122:         linePos += 1
  123:     travelData.firstName = currentString
  124:     linePos += 1
--------------------------------------------------------------------------------
[0.00613 s] survived
   - [# 177] CRP MRTD: 
--------------------------------------------------------------------------------
  116:     linePos += 2
  117:     currentString = ''
  118:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
  119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
- 120:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
+ 120:             raise Exception(('' + line1[linePos]) + ' in first name')
  121:         currentString += line1[linePos]
  122:         linePos += 1
  123:     travelData.firstName = currentString
  124:     linePos += 1
--------------------------------------------------------------------------------
[0.00300 s] survived
   - [# 178] CRP MRTD: 
--------------------------------------------------------------------------------
  116:     linePos += 2
  117:     currentString = ''
  118:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
  119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
- 120:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
+ 120:             raise Exception(('Invalid character ' + line1[linePos]) + 'mutpy')
  121:         currentString += line1[linePos]
  122:         linePos += 1
  123:     travelData.firstName = currentString
  124:     linePos += 1
--------------------------------------------------------------------------------
[0.00351 s] survived
   - [# 179] CRP MRTD: 
--------------------------------------------------------------------------------
  116:     linePos += 2
  117:     currentString = ''
  118:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
  119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
- 120:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
+ 120:             raise Exception(('Invalid character ' + line1[linePos]) + '')
  121:         currentString += line1[linePos]
  122:         linePos += 1
  123:     travelData.firstName = currentString
  124:     linePos += 1
--------------------------------------------------------------------------------
[0.00384 s] survived
   - [# 180] CRP MRTD: 
--------------------------------------------------------------------------------
  118:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
  119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  120:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  121:         currentString += line1[linePos]
- 122:         linePos += 1
+ 122:         linePos += 2
  123:     travelData.firstName = currentString
  124:     linePos += 1
  125:     currentString = ''
  126:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
--------------------------------------------------------------------------------
[0.00150 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 181] CRP MRTD: 
--------------------------------------------------------------------------------
  120:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  121:         currentString += line1[linePos]
  122:         linePos += 1
  123:     travelData.firstName = currentString
- 124:     linePos += 1
+ 124:     linePos += 2
  125:     currentString = ''
  126:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
  127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  128:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 182] CRP MRTD: 
--------------------------------------------------------------------------------
  121:         currentString += line1[linePos]
  122:         linePos += 1
  123:     travelData.firstName = currentString
  124:     linePos += 1
- 125:     currentString = ''
+ 125:     currentString = 'mutpy'
  126:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
  127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  128:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  129:         currentString += line1[linePos]
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 183] CRP MRTD: 
--------------------------------------------------------------------------------
  122:         linePos += 1
  123:     travelData.firstName = currentString
  124:     linePos += 1
  125:     currentString = ''
- 126:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
+ 126:     while (linePos < LINE_LENGTH and line1[linePos] != 'mutpy'):
  127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  128:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  129:         currentString += line1[linePos]
  130:         linePos += 1
--------------------------------------------------------------------------------
[0.00202 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 184] CRP MRTD: 
--------------------------------------------------------------------------------
  122:         linePos += 1
  123:     travelData.firstName = currentString
  124:     linePos += 1
  125:     currentString = ''
- 126:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
+ 126:     while (linePos < LINE_LENGTH and line1[linePos] != ''):
  127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  128:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  129:         currentString += line1[linePos]
  130:         linePos += 1
--------------------------------------------------------------------------------
[0.00099 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 185] CRP MRTD: 
--------------------------------------------------------------------------------
  123:     travelData.firstName = currentString
  124:     linePos += 1
  125:     currentString = ''
  126:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 127:         if not (((line1[linePos] >= 'mutpy' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  128:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  129:         currentString += line1[linePos]
  130:         linePos += 1
  131:     travelData.middleName = currentString
--------------------------------------------------------------------------------
[0.00198 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 186] CRP MRTD: 
--------------------------------------------------------------------------------
  123:     travelData.firstName = currentString
  124:     linePos += 1
  125:     currentString = ''
  126:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 127:         if not (((line1[linePos] >= '' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  128:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  129:         currentString += line1[linePos]
  130:         linePos += 1
  131:     travelData.middleName = currentString
--------------------------------------------------------------------------------
[0.00300 s] killed by testDecodeMRZ8 (MRTDtest_v2.TestMRTD)
   - [# 187] CRP MRTD: 
--------------------------------------------------------------------------------
  123:     travelData.firstName = currentString
  124:     linePos += 1
  125:     currentString = ''
  126:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'mutpy') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  128:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  129:         currentString += line1[linePos]
  130:         linePos += 1
  131:     travelData.middleName = currentString
--------------------------------------------------------------------------------
[0.00701 s] survived
   - [# 188] CRP MRTD: 
--------------------------------------------------------------------------------
  123:     travelData.firstName = currentString
  124:     linePos += 1
  125:     currentString = ''
  126:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= '') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  128:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  129:         currentString += line1[linePos]
  130:         linePos += 1
  131:     travelData.middleName = currentString
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 189] CRP MRTD: 
--------------------------------------------------------------------------------
  123:     travelData.firstName = currentString
  124:     linePos += 1
  125:     currentString = ''
  126:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'mutpy' and line1[linePos] <= 'z'))):
  128:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  129:         currentString += line1[linePos]
  130:         linePos += 1
  131:     travelData.middleName = currentString
--------------------------------------------------------------------------------
[0.00299 s] killed by testDecodeMRZ13 (MRTDtest_v2.TestMRTD)
   - [# 190] CRP MRTD: 
--------------------------------------------------------------------------------
  123:     travelData.firstName = currentString
  124:     linePos += 1
  125:     currentString = ''
  126:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= '' and line1[linePos] <= 'z'))):
  128:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  129:         currentString += line1[linePos]
  130:         linePos += 1
  131:     travelData.middleName = currentString
--------------------------------------------------------------------------------
[0.00300 s] killed by testDecodeMRZ8 (MRTDtest_v2.TestMRTD)
   - [# 191] CRP MRTD: 
--------------------------------------------------------------------------------
  123:     travelData.firstName = currentString
  124:     linePos += 1
  125:     currentString = ''
  126:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'mutpy'))):
  128:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  129:         currentString += line1[linePos]
  130:         linePos += 1
  131:     travelData.middleName = currentString
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ13 (MRTDtest_v2.TestMRTD)
   - [# 192] CRP MRTD: 
--------------------------------------------------------------------------------
  123:     travelData.firstName = currentString
  124:     linePos += 1
  125:     currentString = ''
  126:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= ''))):
  128:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  129:         currentString += line1[linePos]
  130:         linePos += 1
  131:     travelData.middleName = currentString
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ13 (MRTDtest_v2.TestMRTD)
   - [# 193] CRP MRTD: 
--------------------------------------------------------------------------------
  124:     linePos += 1
  125:     currentString = ''
  126:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
  127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
- 128:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
+ 128:             raise Exception(('mutpy' + line1[linePos]) + ' in middle name')
  129:         currentString += line1[linePos]
  130:         linePos += 1
  131:     travelData.middleName = currentString
  132:     currentString = ''
--------------------------------------------------------------------------------
[0.00400 s] survived
   - [# 194] CRP MRTD: 
--------------------------------------------------------------------------------
  124:     linePos += 1
  125:     currentString = ''
  126:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
  127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
- 128:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
+ 128:             raise Exception(('' + line1[linePos]) + ' in middle name')
  129:         currentString += line1[linePos]
  130:         linePos += 1
  131:     travelData.middleName = currentString
  132:     currentString = ''
--------------------------------------------------------------------------------
[0.00399 s] survived
   - [# 195] CRP MRTD: 
--------------------------------------------------------------------------------
  124:     linePos += 1
  125:     currentString = ''
  126:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
  127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
- 128:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
+ 128:             raise Exception(('Invalid character ' + line1[linePos]) + 'mutpy')
  129:         currentString += line1[linePos]
  130:         linePos += 1
  131:     travelData.middleName = currentString
  132:     currentString = ''
--------------------------------------------------------------------------------
[0.00300 s] survived
   - [# 196] CRP MRTD: 
--------------------------------------------------------------------------------
  124:     linePos += 1
  125:     currentString = ''
  126:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
  127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
- 128:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
+ 128:             raise Exception(('Invalid character ' + line1[linePos]) + '')
  129:         currentString += line1[linePos]
  130:         linePos += 1
  131:     travelData.middleName = currentString
  132:     currentString = ''
--------------------------------------------------------------------------------
[0.00398 s] survived
   - [# 197] CRP MRTD: 
--------------------------------------------------------------------------------
  126:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
  127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  128:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  129:         currentString += line1[linePos]
- 130:         linePos += 1
+ 130:         linePos += 2
  131:     travelData.middleName = currentString
  132:     currentString = ''
  133:     
  134:     
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 198] CRP MRTD: 
--------------------------------------------------------------------------------
  128:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  129:         currentString += line1[linePos]
  130:         linePos += 1
  131:     travelData.middleName = currentString
- 132:     currentString = ''
+ 132:     currentString = 'mutpy'
  133:     
  134:     
  135:     
  136:     linePos = 0
--------------------------------------------------------------------------------
[0.00400 s] survived
   - [# 199] CRP MRTD: 
--------------------------------------------------------------------------------
  132:     currentString = ''
  133:     
  134:     
  135:     
- 136:     linePos = 0
+ 136:     linePos = 1
  137:     travelData.passportNo = line2[linePos:PASSPORT_LENGTH]
  138:     linePos += PASSPORT_LENGTH
  139:     travelData.passportCheck = line2[linePos:linePos + 1]
  140:     linePos += 1
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 200] CRP MRTD: 
--------------------------------------------------------------------------------
  135:     
  136:     linePos = 0
  137:     travelData.passportNo = line2[linePos:PASSPORT_LENGTH]
  138:     linePos += PASSPORT_LENGTH
- 139:     travelData.passportCheck = line2[linePos:linePos + 1]
+ 139:     travelData.passportCheck = line2[linePos:linePos + 2]
  140:     linePos += 1
  141:     travelData.countryCode = line2[linePos:linePos + COUNTRY_CODE_LENGTH]
  142:     linePos += COUNTRY_CODE_LENGTH
  143:     travelData.birthday = line2[linePos:linePos + DATE_LENGTH]
--------------------------------------------------------------------------------
[0.00201 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 201] CRP MRTD: 
--------------------------------------------------------------------------------
  136:     linePos = 0
  137:     travelData.passportNo = line2[linePos:PASSPORT_LENGTH]
  138:     linePos += PASSPORT_LENGTH
  139:     travelData.passportCheck = line2[linePos:linePos + 1]
- 140:     linePos += 1
+ 140:     linePos += 2
  141:     travelData.countryCode = line2[linePos:linePos + COUNTRY_CODE_LENGTH]
  142:     linePos += COUNTRY_CODE_LENGTH
  143:     travelData.birthday = line2[linePos:linePos + DATE_LENGTH]
  144:     validateDate(travelData.birthday)
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 202] CRP MRTD: 
--------------------------------------------------------------------------------
  142:     linePos += COUNTRY_CODE_LENGTH
  143:     travelData.birthday = line2[linePos:linePos + DATE_LENGTH]
  144:     validateDate(travelData.birthday)
  145:     linePos += DATE_LENGTH
- 146:     travelData.birthdayCheck = line2[linePos:linePos + 1]
+ 146:     travelData.birthdayCheck = line2[linePos:linePos + 2]
  147:     linePos += 1
  148:     travelData.sex = line2[linePos:linePos + SEX_LENGTH]
  149:     linePos += 1
  150:     travelData.expirationDate = line2[linePos:linePos + DATE_LENGTH]
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 203] CRP MRTD: 
--------------------------------------------------------------------------------
  143:     travelData.birthday = line2[linePos:linePos + DATE_LENGTH]
  144:     validateDate(travelData.birthday)
  145:     linePos += DATE_LENGTH
  146:     travelData.birthdayCheck = line2[linePos:linePos + 1]
- 147:     linePos += 1
+ 147:     linePos += 2
  148:     travelData.sex = line2[linePos:linePos + SEX_LENGTH]
  149:     linePos += 1
  150:     travelData.expirationDate = line2[linePos:linePos + DATE_LENGTH]
  151:     validateDate(travelData.expirationDate)
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 204] CRP MRTD: 
--------------------------------------------------------------------------------
  145:     linePos += DATE_LENGTH
  146:     travelData.birthdayCheck = line2[linePos:linePos + 1]
  147:     linePos += 1
  148:     travelData.sex = line2[linePos:linePos + SEX_LENGTH]
- 149:     linePos += 1
+ 149:     linePos += 2
  150:     travelData.expirationDate = line2[linePos:linePos + DATE_LENGTH]
  151:     validateDate(travelData.expirationDate)
  152:     linePos += DATE_LENGTH
  153:     travelData.expirationCheck = line2[linePos:linePos + 1]
--------------------------------------------------------------------------------
[0.00099 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 205] CRP MRTD: 
--------------------------------------------------------------------------------
  149:     linePos += 1
  150:     travelData.expirationDate = line2[linePos:linePos + DATE_LENGTH]
  151:     validateDate(travelData.expirationDate)
  152:     linePos += DATE_LENGTH
- 153:     travelData.expirationCheck = line2[linePos:linePos + 1]
+ 153:     travelData.expirationCheck = line2[linePos:linePos + 2]
  154:     linePos += 1
  155:     travelData.personalNo = line2[linePos:len(line2) - 1]
  156:     linePos = len(line2) - 1
  157:     travelData.personalNoCheck = line2[linePos]
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 206] CRP MRTD: 
--------------------------------------------------------------------------------
  150:     travelData.expirationDate = line2[linePos:linePos + DATE_LENGTH]
  151:     validateDate(travelData.expirationDate)
  152:     linePos += DATE_LENGTH
  153:     travelData.expirationCheck = line2[linePos:linePos + 1]
- 154:     linePos += 1
+ 154:     linePos += 2
  155:     travelData.personalNo = line2[linePos:len(line2) - 1]
  156:     linePos = len(line2) - 1
  157:     travelData.personalNoCheck = line2[linePos]
  158:     linePos += 1
--------------------------------------------------------------------------------
[0.00101 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 207] CRP MRTD: 
--------------------------------------------------------------------------------
  151:     validateDate(travelData.expirationDate)
  152:     linePos += DATE_LENGTH
  153:     travelData.expirationCheck = line2[linePos:linePos + 1]
  154:     linePos += 1
- 155:     travelData.personalNo = line2[linePos:len(line2) - 1]
+ 155:     travelData.personalNo = line2[linePos:len(line2) - 2]
  156:     linePos = len(line2) - 1
  157:     travelData.personalNoCheck = line2[linePos]
  158:     linePos += 1
  159:     return travelData
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 208] CRP MRTD: 
--------------------------------------------------------------------------------
  152:     linePos += DATE_LENGTH
  153:     travelData.expirationCheck = line2[linePos:linePos + 1]
  154:     linePos += 1
  155:     travelData.personalNo = line2[linePos:len(line2) - 1]
- 156:     linePos = len(line2) - 1
+ 156:     linePos = len(line2) - 2
  157:     travelData.personalNoCheck = line2[linePos]
  158:     linePos += 1
  159:     return travelData
  160: 
--------------------------------------------------------------------------------
[0.00134 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 209] CRP MRTD: 
--------------------------------------------------------------------------------
  154:     linePos += 1
  155:     travelData.personalNo = line2[linePos:len(line2) - 1]
  156:     linePos = len(line2) - 1
  157:     travelData.personalNoCheck = line2[linePos]
- 158:     linePos += 1
+ 158:     linePos += 2
  159:     return travelData
  160: 
  161: 
  162: 
--------------------------------------------------------------------------------
[0.00621 s] survived
   - [# 210] CRP MRTD: 
--------------------------------------------------------------------------------
  167: 
  168: def encodeMRZ(personalNo):
  169:     data = getTravelDataFromDB(personalNo)
  170:     
- 171:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
+ 171:     line1 = ((((((data.docType + 'mutpy') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
  172:     if len(line1) > LINE_LENGTH:
  173:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
  174:     while len(line1) < LINE_LENGTH:
  175:         line1 += '<'
--------------------------------------------------------------------------------
[0.00421 s] killed by testEncodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 211] CRP MRTD: 
--------------------------------------------------------------------------------
  167: 
  168: def encodeMRZ(personalNo):
  169:     data = getTravelDataFromDB(personalNo)
  170:     
- 171:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
+ 171:     line1 = ((((((data.docType + '') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
  172:     if len(line1) > LINE_LENGTH:
  173:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
  174:     while len(line1) < LINE_LENGTH:
  175:         line1 += '<'
--------------------------------------------------------------------------------
[0.00300 s] killed by testEncodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 212] CRP MRTD: 
--------------------------------------------------------------------------------
  167: 
  168: def encodeMRZ(personalNo):
  169:     data = getTravelDataFromDB(personalNo)
  170:     
- 171:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
+ 171:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + 'mutpy') + data.firstName) + '<') + data.middleName
  172:     if len(line1) > LINE_LENGTH:
  173:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
  174:     while len(line1) < LINE_LENGTH:
  175:         line1 += '<'
--------------------------------------------------------------------------------
[0.00300 s] killed by testEncodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 213] CRP MRTD: 
--------------------------------------------------------------------------------
  167: 
  168: def encodeMRZ(personalNo):
  169:     data = getTravelDataFromDB(personalNo)
  170:     
- 171:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
+ 171:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '') + data.firstName) + '<') + data.middleName
  172:     if len(line1) > LINE_LENGTH:
  173:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
  174:     while len(line1) < LINE_LENGTH:
  175:         line1 += '<'
--------------------------------------------------------------------------------
[0.00306 s] killed by testEncodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 214] CRP MRTD: 
--------------------------------------------------------------------------------
  167: 
  168: def encodeMRZ(personalNo):
  169:     data = getTravelDataFromDB(personalNo)
  170:     
- 171:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
+ 171:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + 'mutpy') + data.middleName
  172:     if len(line1) > LINE_LENGTH:
  173:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
  174:     while len(line1) < LINE_LENGTH:
  175:         line1 += '<'
--------------------------------------------------------------------------------
[0.00400 s] killed by testEncodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 215] CRP MRTD: 
--------------------------------------------------------------------------------
  167: 
  168: def encodeMRZ(personalNo):
  169:     data = getTravelDataFromDB(personalNo)
  170:     
- 171:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
+ 171:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '') + data.middleName
  172:     if len(line1) > LINE_LENGTH:
  173:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
  174:     while len(line1) < LINE_LENGTH:
  175:         line1 += '<'
--------------------------------------------------------------------------------
[0.00424 s] killed by testEncodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 216] CRP MRTD: 
--------------------------------------------------------------------------------
  169:     data = getTravelDataFromDB(personalNo)
  170:     
  171:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
  172:     if len(line1) > LINE_LENGTH:
- 173:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
+ 173:         raise Exception(('mutpy' + str(LINE_LENGTH)) + ' characters.')
  174:     while len(line1) < LINE_LENGTH:
  175:         line1 += '<'
  176:     
  177:     
--------------------------------------------------------------------------------
[0.00596 s] survived
   - [# 217] CRP MRTD: 
--------------------------------------------------------------------------------
  169:     data = getTravelDataFromDB(personalNo)
  170:     
  171:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
  172:     if len(line1) > LINE_LENGTH:
- 173:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
+ 173:         raise Exception(('' + str(LINE_LENGTH)) + ' characters.')
  174:     while len(line1) < LINE_LENGTH:
  175:         line1 += '<'
  176:     
  177:     
--------------------------------------------------------------------------------
[0.00509 s] survived
   - [# 218] CRP MRTD: 
--------------------------------------------------------------------------------
  169:     data = getTravelDataFromDB(personalNo)
  170:     
  171:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
  172:     if len(line1) > LINE_LENGTH:
- 173:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
+ 173:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + 'mutpy')
  174:     while len(line1) < LINE_LENGTH:
  175:         line1 += '<'
  176:     
  177:     
--------------------------------------------------------------------------------
[0.00499 s] survived
   - [# 219] CRP MRTD: 
--------------------------------------------------------------------------------
  169:     data = getTravelDataFromDB(personalNo)
  170:     
  171:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
  172:     if len(line1) > LINE_LENGTH:
- 173:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
+ 173:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + '')
  174:     while len(line1) < LINE_LENGTH:
  175:         line1 += '<'
  176:     
  177:     
--------------------------------------------------------------------------------
[0.00400 s] survived
   - [# 220] CRP MRTD: 
--------------------------------------------------------------------------------
  171:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
  172:     if len(line1) > LINE_LENGTH:
  173:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
  174:     while len(line1) < LINE_LENGTH:
- 175:         line1 += '<'
+ 175:         line1 += 'mutpy'
  176:     
  177:     
  178:     line2 = ((((((((data.passportNo + str(calculateCheck(data.passportNo))) + data.countryCode) + data.birthday) + str(calculateCheck(data.birthday))) + data.sex) + data.expirationDate) + str(calculateCheck(data.expirationDate))) + data.personalNo) + str(calculateCheck(data.personalNo))
  179:     
--------------------------------------------------------------------------------
[0.00400 s] killed by testEncodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 221] CRP MRTD: 
--------------------------------------------------------------------------------
  171:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
  172:     if len(line1) > LINE_LENGTH:
  173:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
  174:     while len(line1) < LINE_LENGTH:
- 175:         line1 += '<'
+ 175:         line1 += ''
  176:     
  177:     
  178:     line2 = ((((((((data.passportNo + str(calculateCheck(data.passportNo))) + data.countryCode) + data.birthday) + str(calculateCheck(data.birthday))) + data.sex) + data.expirationDate) + str(calculateCheck(data.expirationDate))) + data.personalNo) + str(calculateCheck(data.personalNo))
  179:     
--------------------------------------------------------------------------------
[5.02691 s] timeout
   - [# 222] CRP MRTD: 
--------------------------------------------------------------------------------
  177:     
  178:     line2 = ((((((((data.passportNo + str(calculateCheck(data.passportNo))) + data.countryCode) + data.birthday) + str(calculateCheck(data.birthday))) + data.sex) + data.expirationDate) + str(calculateCheck(data.expirationDate))) + data.personalNo) + str(calculateCheck(data.personalNo))
  179:     
  180:     if len(line2) != LINE_LENGTH:
- 181:         raise Exception(('Second line is not ' + str(LINE_LENGTH)) + ' characters.')
+ 181:         raise Exception(('mutpy' + str(LINE_LENGTH)) + ' characters.')
  182:     return (line1, line2)
  183: 
  184: 
  185: 
--------------------------------------------------------------------------------
[0.00401 s] survived
   - [# 223] CRP MRTD: 
--------------------------------------------------------------------------------
  177:     
  178:     line2 = ((((((((data.passportNo + str(calculateCheck(data.passportNo))) + data.countryCode) + data.birthday) + str(calculateCheck(data.birthday))) + data.sex) + data.expirationDate) + str(calculateCheck(data.expirationDate))) + data.personalNo) + str(calculateCheck(data.personalNo))
  179:     
  180:     if len(line2) != LINE_LENGTH:
- 181:         raise Exception(('Second line is not ' + str(LINE_LENGTH)) + ' characters.')
+ 181:         raise Exception(('' + str(LINE_LENGTH)) + ' characters.')
  182:     return (line1, line2)
  183: 
  184: 
  185: 
--------------------------------------------------------------------------------
[0.00499 s] survived
   - [# 224] CRP MRTD: 
--------------------------------------------------------------------------------
  177:     
  178:     line2 = ((((((((data.passportNo + str(calculateCheck(data.passportNo))) + data.countryCode) + data.birthday) + str(calculateCheck(data.birthday))) + data.sex) + data.expirationDate) + str(calculateCheck(data.expirationDate))) + data.personalNo) + str(calculateCheck(data.personalNo))
  179:     
  180:     if len(line2) != LINE_LENGTH:
- 181:         raise Exception(('Second line is not ' + str(LINE_LENGTH)) + ' characters.')
+ 181:         raise Exception(('Second line is not ' + str(LINE_LENGTH)) + 'mutpy')
  182:     return (line1, line2)
  183: 
  184: 
  185: 
--------------------------------------------------------------------------------
[0.00400 s] survived
   - [# 225] CRP MRTD: 
--------------------------------------------------------------------------------
  177:     
  178:     line2 = ((((((((data.passportNo + str(calculateCheck(data.passportNo))) + data.countryCode) + data.birthday) + str(calculateCheck(data.birthday))) + data.sex) + data.expirationDate) + str(calculateCheck(data.expirationDate))) + data.personalNo) + str(calculateCheck(data.personalNo))
  179:     
  180:     if len(line2) != LINE_LENGTH:
- 181:         raise Exception(('Second line is not ' + str(LINE_LENGTH)) + ' characters.')
+ 181:         raise Exception(('Second line is not ' + str(LINE_LENGTH)) + '')
  182:     return (line1, line2)
  183: 
  184: 
  185: 
--------------------------------------------------------------------------------
[0.00299 s] survived
   - [# 226] EHD MRTD: 
--------------------------------------------------------------------------------
   62:     try:
   63:         int(i)
   64:         return int(i)
   65:     except ValueError:
-  66:         if (str(i) >= 'A' and str(i) <= 'Z'):
-  67:             return int(ord(str(i)) - 55)
-  68:         elif (str(i) >= 'a' and str(i) <= 'z'):
-  69:             return int(ord(str(i)) - 87)
-  70:         else:
-  71:             return 0
+  66:         raise
+  67: 
+  68: 
+  69: 
+  70: 
+  71: 
   72: 
   73: def calculateCheck(lst):
   74:     weights = [7, 3, 1]
   75:     weightIdx = 0
--------------------------------------------------------------------------------
[0.00100 s] killed by testCalculateCheck (MRTDtest_v2.TestMRTD)
   - [# 227] EXS MRTD: 
--------------------------------------------------------------------------------
   62:     try:
   63:         int(i)
   64:         return int(i)
   65:     except ValueError:
-  66:         if (str(i) >= 'A' and str(i) <= 'Z'):
-  67:             return int(ord(str(i)) - 55)
-  68:         elif (str(i) >= 'a' and str(i) <= 'z'):
-  69:             return int(ord(str(i)) - 87)
-  70:         else:
-  71:             return 0
+  66:         pass
+  67: 
+  68: 
+  69: 
+  70: 
+  71: 
   72: 
   73: def calculateCheck(lst):
   74:     weights = [7, 3, 1]
   75:     weightIdx = 0
--------------------------------------------------------------------------------
[0.00300 s] incompetent
   - [# 228] LCR MRTD: 
--------------------------------------------------------------------------------
   62:     try:
   63:         int(i)
   64:         return int(i)
   65:     except ValueError:
-  66:         if (str(i) >= 'A' and str(i) <= 'Z'):
+  66:         if (str(i) >= 'A' or str(i) <= 'Z'):
   67:             return int(ord(str(i)) - 55)
   68:         elif (str(i) >= 'a' and str(i) <= 'z'):
   69:             return int(ord(str(i)) - 87)
   70:         else:
--------------------------------------------------------------------------------
[0.00206 s] killed by testCalculateCheck (MRTDtest_v2.TestMRTD)
   - [# 229] LCR MRTD: 
--------------------------------------------------------------------------------
   64:         return int(i)
   65:     except ValueError:
   66:         if (str(i) >= 'A' and str(i) <= 'Z'):
   67:             return int(ord(str(i)) - 55)
-  68:         elif (str(i) >= 'a' and str(i) <= 'z'):
+  68:         elif (str(i) >= 'a' or str(i) <= 'z'):
   69:             return int(ord(str(i)) - 87)
   70:         else:
   71:             return 0
   72: 
--------------------------------------------------------------------------------
[0.00100 s] killed by testCalculateCheck (MRTDtest_v2.TestMRTD)
   - [# 230] LCR MRTD: 
--------------------------------------------------------------------------------
   82:     return total % 10
   83: 
   84: def validateDate(date):
   85:     for char in date:
-  86:         if (char != '<' and (char < '0' or char > '9')):
+  86:         if (char != '<' or (char < '0' or char > '9')):
   87:             raise Exception(('Invalid character ' + char) + ' in date')
   88: 
   89: 
   90: 
--------------------------------------------------------------------------------
[0.00207 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 231] LCR MRTD: 
--------------------------------------------------------------------------------
   82:     return total % 10
   83: 
   84: def validateDate(date):
   85:     for char in date:
-  86:         if (char != '<' and (char < '0' or char > '9')):
+  86:         if (char != '<' and (char < '0' and char > '9')):
   87:             raise Exception(('Invalid character ' + char) + ' in date')
   88: 
   89: 
   90: 
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ11 (MRTDtest_v2.TestMRTD)
   - [# 232] LCR MRTD: 
--------------------------------------------------------------------------------
   96: 
   97: 
   98: def decodeMRZ():
   99:     (line1, line2) = scanMRZ()
- 100:     if (len(line1) != LINE_LENGTH or len(line2) != LINE_LENGTH):
+ 100:     if (len(line1) != LINE_LENGTH and len(line2) != LINE_LENGTH):
  101:         raise Exception(('Lines must both be ' + str(LINE_LENGTH)) + ' characters.')
  102:     travelData = TravelData()
  103:     linePos = 0
  104:     
--------------------------------------------------------------------------------
[0.00350 s] survived
   - [# 233] LCR MRTD: 
--------------------------------------------------------------------------------
  106:     travelData.docType = line1[linePos:linePos + 1]
  107:     linePos += 2
  108:     travelData.issuingCountry = line1[linePos:linePos + 3]
  109:     linePos += 3
- 110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
+ 110:     while (linePos < LINE_LENGTH or line1[linePos] != '<'):
  111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  112:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  113:         currentString += line1[linePos]
  114:         linePos += 1
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 234] LCR MRTD: 
--------------------------------------------------------------------------------
  107:     linePos += 2
  108:     travelData.issuingCountry = line1[linePos:linePos + 3]
  109:     linePos += 3
  110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') and (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  112:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  113:         currentString += line1[linePos]
  114:         linePos += 1
  115:     travelData.lastName = currentString
--------------------------------------------------------------------------------
[0.00106 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 235] LCR MRTD: 
--------------------------------------------------------------------------------
  107:     linePos += 2
  108:     travelData.issuingCountry = line1[linePos:linePos + 3]
  109:     linePos += 3
  110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 111:         if not (((line1[linePos] >= 'A' or line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  112:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  113:         currentString += line1[linePos]
  114:         linePos += 1
  115:     travelData.lastName = currentString
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ6 (MRTDtest_v2.TestMRTD)
   - [# 236] LCR MRTD: 
--------------------------------------------------------------------------------
  107:     linePos += 2
  108:     travelData.issuingCountry = line1[linePos:linePos + 3]
  109:     linePos += 3
  110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' or line1[linePos] <= 'z'))):
  112:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  113:         currentString += line1[linePos]
  114:         linePos += 1
  115:     travelData.lastName = currentString
--------------------------------------------------------------------------------
[0.00210 s] killed by testDecodeMRZ6 (MRTDtest_v2.TestMRTD)
   - [# 237] LCR MRTD: 
--------------------------------------------------------------------------------
  114:         linePos += 1
  115:     travelData.lastName = currentString
  116:     linePos += 2
  117:     currentString = ''
- 118:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
+ 118:     while (linePos < LINE_LENGTH or line1[linePos] != '<'):
  119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  120:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  121:         currentString += line1[linePos]
  122:         linePos += 1
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 238] LCR MRTD: 
--------------------------------------------------------------------------------
  115:     travelData.lastName = currentString
  116:     linePos += 2
  117:     currentString = ''
  118:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') and (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  120:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  121:         currentString += line1[linePos]
  122:         linePos += 1
  123:     travelData.firstName = currentString
--------------------------------------------------------------------------------
[0.00202 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 239] LCR MRTD: 
--------------------------------------------------------------------------------
  115:     travelData.lastName = currentString
  116:     linePos += 2
  117:     currentString = ''
  118:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 119:         if not (((line1[linePos] >= 'A' or line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  120:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  121:         currentString += line1[linePos]
  122:         linePos += 1
  123:     travelData.firstName = currentString
--------------------------------------------------------------------------------
[0.00400 s] killed by testDecodeMRZ7 (MRTDtest_v2.TestMRTD)
   - [# 240] LCR MRTD: 
--------------------------------------------------------------------------------
  115:     travelData.lastName = currentString
  116:     linePos += 2
  117:     currentString = ''
  118:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' or line1[linePos] <= 'z'))):
  120:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  121:         currentString += line1[linePos]
  122:         linePos += 1
  123:     travelData.firstName = currentString
--------------------------------------------------------------------------------
[0.00258 s] killed by testDecodeMRZ7 (MRTDtest_v2.TestMRTD)
   - [# 241] LCR MRTD: 
--------------------------------------------------------------------------------
  122:         linePos += 1
  123:     travelData.firstName = currentString
  124:     linePos += 1
  125:     currentString = ''
- 126:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
+ 126:     while (linePos < LINE_LENGTH or line1[linePos] != '<'):
  127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  128:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  129:         currentString += line1[linePos]
  130:         linePos += 1
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 242] LCR MRTD: 
--------------------------------------------------------------------------------
  123:     travelData.firstName = currentString
  124:     linePos += 1
  125:     currentString = ''
  126:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') and (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  128:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  129:         currentString += line1[linePos]
  130:         linePos += 1
  131:     travelData.middleName = currentString
--------------------------------------------------------------------------------
[0.00208 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 243] LCR MRTD: 
--------------------------------------------------------------------------------
  123:     travelData.firstName = currentString
  124:     linePos += 1
  125:     currentString = ''
  126:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 127:         if not (((line1[linePos] >= 'A' or line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  128:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  129:         currentString += line1[linePos]
  130:         linePos += 1
  131:     travelData.middleName = currentString
--------------------------------------------------------------------------------
[0.00400 s] killed by testDecodeMRZ8 (MRTDtest_v2.TestMRTD)
   - [# 244] LCR MRTD: 
--------------------------------------------------------------------------------
  123:     travelData.firstName = currentString
  124:     linePos += 1
  125:     currentString = ''
  126:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' or line1[linePos] <= 'z'))):
  128:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  129:         currentString += line1[linePos]
  130:         linePos += 1
  131:     travelData.middleName = currentString
--------------------------------------------------------------------------------
[0.00408 s] killed by testDecodeMRZ8 (MRTDtest_v2.TestMRTD)
   - [# 245] ROR MRTD: 
--------------------------------------------------------------------------------
   62:     try:
   63:         int(i)
   64:         return int(i)
   65:     except ValueError:
-  66:         if (str(i) >= 'A' and str(i) <= 'Z'):
+  66:         if (str(i) <= 'A' and str(i) <= 'Z'):
   67:             return int(ord(str(i)) - 55)
   68:         elif (str(i) >= 'a' and str(i) <= 'z'):
   69:             return int(ord(str(i)) - 87)
   70:         else:
--------------------------------------------------------------------------------
[0.00000 s] killed by testCalculateCheck (MRTDtest_v2.TestMRTD)
   - [# 246] ROR MRTD: 
--------------------------------------------------------------------------------
   62:     try:
   63:         int(i)
   64:         return int(i)
   65:     except ValueError:
-  66:         if (str(i) >= 'A' and str(i) <= 'Z'):
+  66:         if (str(i) > 'A' and str(i) <= 'Z'):
   67:             return int(ord(str(i)) - 55)
   68:         elif (str(i) >= 'a' and str(i) <= 'z'):
   69:             return int(ord(str(i)) - 87)
   70:         else:
--------------------------------------------------------------------------------
[0.00300 s] killed by testGetNumericalValue (MRTDtest_v2.TestMRTD)
   - [# 247] ROR MRTD: 
--------------------------------------------------------------------------------
   62:     try:
   63:         int(i)
   64:         return int(i)
   65:     except ValueError:
-  66:         if (str(i) >= 'A' and str(i) <= 'Z'):
+  66:         if (str(i) >= 'A' and str(i) >= 'Z'):
   67:             return int(ord(str(i)) - 55)
   68:         elif (str(i) >= 'a' and str(i) <= 'z'):
   69:             return int(ord(str(i)) - 87)
   70:         else:
--------------------------------------------------------------------------------
[0.00100 s] killed by testCalculateCheck (MRTDtest_v2.TestMRTD)
   - [# 248] ROR MRTD: 
--------------------------------------------------------------------------------
   62:     try:
   63:         int(i)
   64:         return int(i)
   65:     except ValueError:
-  66:         if (str(i) >= 'A' and str(i) <= 'Z'):
+  66:         if (str(i) >= 'A' and str(i) < 'Z'):
   67:             return int(ord(str(i)) - 55)
   68:         elif (str(i) >= 'a' and str(i) <= 'z'):
   69:             return int(ord(str(i)) - 87)
   70:         else:
--------------------------------------------------------------------------------
[0.00100 s] killed by testCalculateCheck (MRTDtest_v2.TestMRTD)
   - [# 249] ROR MRTD: 
--------------------------------------------------------------------------------
   64:         return int(i)
   65:     except ValueError:
   66:         if (str(i) >= 'A' and str(i) <= 'Z'):
   67:             return int(ord(str(i)) - 55)
-  68:         elif (str(i) >= 'a' and str(i) <= 'z'):
+  68:         elif (str(i) <= 'a' and str(i) <= 'z'):
   69:             return int(ord(str(i)) - 87)
   70:         else:
   71:             return 0
   72: 
--------------------------------------------------------------------------------
[0.00000 s] killed by testCalculateCheck (MRTDtest_v2.TestMRTD)
   - [# 250] ROR MRTD: 
--------------------------------------------------------------------------------
   64:         return int(i)
   65:     except ValueError:
   66:         if (str(i) >= 'A' and str(i) <= 'Z'):
   67:             return int(ord(str(i)) - 55)
-  68:         elif (str(i) >= 'a' and str(i) <= 'z'):
+  68:         elif (str(i) > 'a' and str(i) <= 'z'):
   69:             return int(ord(str(i)) - 87)
   70:         else:
   71:             return 0
   72: 
--------------------------------------------------------------------------------
[0.00415 s] killed by testGetNumericalValue (MRTDtest_v2.TestMRTD)
   - [# 251] ROR MRTD: 
--------------------------------------------------------------------------------
   64:         return int(i)
   65:     except ValueError:
   66:         if (str(i) >= 'A' and str(i) <= 'Z'):
   67:             return int(ord(str(i)) - 55)
-  68:         elif (str(i) >= 'a' and str(i) <= 'z'):
+  68:         elif (str(i) >= 'a' and str(i) >= 'z'):
   69:             return int(ord(str(i)) - 87)
   70:         else:
   71:             return 0
   72: 
--------------------------------------------------------------------------------
[0.00301 s] killed by testGetNumericalValue (MRTDtest_v2.TestMRTD)
   - [# 252] ROR MRTD: 
--------------------------------------------------------------------------------
   64:         return int(i)
   65:     except ValueError:
   66:         if (str(i) >= 'A' and str(i) <= 'Z'):
   67:             return int(ord(str(i)) - 55)
-  68:         elif (str(i) >= 'a' and str(i) <= 'z'):
+  68:         elif (str(i) >= 'a' and str(i) < 'z'):
   69:             return int(ord(str(i)) - 87)
   70:         else:
   71:             return 0
   72: 
--------------------------------------------------------------------------------
[0.00099 s] killed by testCalculateCheck (MRTDtest_v2.TestMRTD)
   - [# 253] ROR MRTD: 
--------------------------------------------------------------------------------
   82:     return total % 10
   83: 
   84: def validateDate(date):
   85:     for char in date:
-  86:         if (char != '<' and (char < '0' or char > '9')):
+  86:         if (char == '<' and (char < '0' or char > '9')):
   87:             raise Exception(('Invalid character ' + char) + ' in date')
   88: 
   89: 
   90: 
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ10 (MRTDtest_v2.TestMRTD)
   - [# 254] ROR MRTD: 
--------------------------------------------------------------------------------
   82:     return total % 10
   83: 
   84: def validateDate(date):
   85:     for char in date:
-  86:         if (char != '<' and (char < '0' or char > '9')):
+  86:         if (char != '<' and (char > '0' or char > '9')):
   87:             raise Exception(('Invalid character ' + char) + ' in date')
   88: 
   89: 
   90: 
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 255] ROR MRTD: 
--------------------------------------------------------------------------------
   82:     return total % 10
   83: 
   84: def validateDate(date):
   85:     for char in date:
-  86:         if (char != '<' and (char < '0' or char > '9')):
+  86:         if (char != '<' and (char <= '0' or char > '9')):
   87:             raise Exception(('Invalid character ' + char) + ' in date')
   88: 
   89: 
   90: 
--------------------------------------------------------------------------------
[0.00201 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 256] ROR MRTD: 
--------------------------------------------------------------------------------
   82:     return total % 10
   83: 
   84: def validateDate(date):
   85:     for char in date:
-  86:         if (char != '<' and (char < '0' or char > '9')):
+  86:         if (char != '<' and (char < '0' or char < '9')):
   87:             raise Exception(('Invalid character ' + char) + ' in date')
   88: 
   89: 
   90: 
--------------------------------------------------------------------------------
[0.00099 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 257] ROR MRTD: 
--------------------------------------------------------------------------------
   82:     return total % 10
   83: 
   84: def validateDate(date):
   85:     for char in date:
-  86:         if (char != '<' and (char < '0' or char > '9')):
+  86:         if (char != '<' and (char < '0' or char >= '9')):
   87:             raise Exception(('Invalid character ' + char) + ' in date')
   88: 
   89: 
   90: 
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ2 (MRTDtest_v2.TestMRTD)
   - [# 258] ROR MRTD: 
--------------------------------------------------------------------------------
   96: 
   97: 
   98: def decodeMRZ():
   99:     (line1, line2) = scanMRZ()
- 100:     if (len(line1) != LINE_LENGTH or len(line2) != LINE_LENGTH):
+ 100:     if (len(line1) == LINE_LENGTH or len(line2) != LINE_LENGTH):
  101:         raise Exception(('Lines must both be ' + str(LINE_LENGTH)) + ' characters.')
  102:     travelData = TravelData()
  103:     linePos = 0
  104:     
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 259] ROR MRTD: 
--------------------------------------------------------------------------------
   96: 
   97: 
   98: def decodeMRZ():
   99:     (line1, line2) = scanMRZ()
- 100:     if (len(line1) != LINE_LENGTH or len(line2) != LINE_LENGTH):
+ 100:     if (len(line1) != LINE_LENGTH or len(line2) == LINE_LENGTH):
  101:         raise Exception(('Lines must both be ' + str(LINE_LENGTH)) + ' characters.')
  102:     travelData = TravelData()
  103:     linePos = 0
  104:     
--------------------------------------------------------------------------------
[0.00209 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 260] ROR MRTD: 
--------------------------------------------------------------------------------
  106:     travelData.docType = line1[linePos:linePos + 1]
  107:     linePos += 2
  108:     travelData.issuingCountry = line1[linePos:linePos + 3]
  109:     linePos += 3
- 110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
+ 110:     while (linePos > LINE_LENGTH and line1[linePos] != '<'):
  111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  112:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  113:         currentString += line1[linePos]
  114:         linePos += 1
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 261] ROR MRTD: 
--------------------------------------------------------------------------------
  106:     travelData.docType = line1[linePos:linePos + 1]
  107:     linePos += 2
  108:     travelData.issuingCountry = line1[linePos:linePos + 3]
  109:     linePos += 3
- 110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
+ 110:     while (linePos <= LINE_LENGTH and line1[linePos] != '<'):
  111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  112:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  113:         currentString += line1[linePos]
  114:         linePos += 1
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ14 (MRTDtest_v2.TestMRTD)
   - [# 262] ROR MRTD: 
--------------------------------------------------------------------------------
  106:     travelData.docType = line1[linePos:linePos + 1]
  107:     linePos += 2
  108:     travelData.issuingCountry = line1[linePos:linePos + 3]
  109:     linePos += 3
- 110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
+ 110:     while (linePos < LINE_LENGTH and line1[linePos] == '<'):
  111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  112:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  113:         currentString += line1[linePos]
  114:         linePos += 1
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 263] ROR MRTD: 
--------------------------------------------------------------------------------
  107:     linePos += 2
  108:     travelData.issuingCountry = line1[linePos:linePos + 3]
  109:     linePos += 3
  110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 111:         if not (((line1[linePos] <= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  112:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  113:         currentString += line1[linePos]
  114:         linePos += 1
  115:     travelData.lastName = currentString
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 264] ROR MRTD: 
--------------------------------------------------------------------------------
  107:     linePos += 2
  108:     travelData.issuingCountry = line1[linePos:linePos + 3]
  109:     linePos += 3
  110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 111:         if not (((line1[linePos] > 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  112:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  113:         currentString += line1[linePos]
  114:         linePos += 1
  115:     travelData.lastName = currentString
--------------------------------------------------------------------------------
[0.00212 s] killed by testDecodeMRZ13 (MRTDtest_v2.TestMRTD)
   - [# 265] ROR MRTD: 
--------------------------------------------------------------------------------
  107:     linePos += 2
  108:     travelData.issuingCountry = line1[linePos:linePos + 3]
  109:     linePos += 3
  110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 111:         if not (((line1[linePos] >= 'A' and line1[linePos] >= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  112:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  113:         currentString += line1[linePos]
  114:         linePos += 1
  115:     travelData.lastName = currentString
--------------------------------------------------------------------------------
[0.00099 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 266] ROR MRTD: 
--------------------------------------------------------------------------------
  107:     linePos += 2
  108:     travelData.issuingCountry = line1[linePos:linePos + 3]
  109:     linePos += 3
  110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 111:         if not (((line1[linePos] >= 'A' and line1[linePos] < 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  112:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  113:         currentString += line1[linePos]
  114:         linePos += 1
  115:     travelData.lastName = currentString
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ13 (MRTDtest_v2.TestMRTD)
   - [# 267] ROR MRTD: 
--------------------------------------------------------------------------------
  107:     linePos += 2
  108:     travelData.issuingCountry = line1[linePos:linePos + 3]
  109:     linePos += 3
  110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] <= 'a' and line1[linePos] <= 'z'))):
  112:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  113:         currentString += line1[linePos]
  114:         linePos += 1
  115:     travelData.lastName = currentString
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ13 (MRTDtest_v2.TestMRTD)
   - [# 268] ROR MRTD: 
--------------------------------------------------------------------------------
  107:     linePos += 2
  108:     travelData.issuingCountry = line1[linePos:linePos + 3]
  109:     linePos += 3
  110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] > 'a' and line1[linePos] <= 'z'))):
  112:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  113:         currentString += line1[linePos]
  114:         linePos += 1
  115:     travelData.lastName = currentString
--------------------------------------------------------------------------------
[0.00194 s] killed by testDecodeMRZ13 (MRTDtest_v2.TestMRTD)
   - [# 269] ROR MRTD: 
--------------------------------------------------------------------------------
  107:     linePos += 2
  108:     travelData.issuingCountry = line1[linePos:linePos + 3]
  109:     linePos += 3
  110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] >= 'z'))):
  112:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  113:         currentString += line1[linePos]
  114:         linePos += 1
  115:     travelData.lastName = currentString
--------------------------------------------------------------------------------
[0.00204 s] killed by testDecodeMRZ13 (MRTDtest_v2.TestMRTD)
   - [# 270] ROR MRTD: 
--------------------------------------------------------------------------------
  107:     linePos += 2
  108:     travelData.issuingCountry = line1[linePos:linePos + 3]
  109:     linePos += 3
  110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] < 'z'))):
  112:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  113:         currentString += line1[linePos]
  114:         linePos += 1
  115:     travelData.lastName = currentString
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ13 (MRTDtest_v2.TestMRTD)
   - [# 271] ROR MRTD: 
--------------------------------------------------------------------------------
  114:         linePos += 1
  115:     travelData.lastName = currentString
  116:     linePos += 2
  117:     currentString = ''
- 118:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
+ 118:     while (linePos > LINE_LENGTH and line1[linePos] != '<'):
  119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  120:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  121:         currentString += line1[linePos]
  122:         linePos += 1
--------------------------------------------------------------------------------
[0.00099 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 272] ROR MRTD: 
--------------------------------------------------------------------------------
  114:         linePos += 1
  115:     travelData.lastName = currentString
  116:     linePos += 2
  117:     currentString = ''
- 118:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
+ 118:     while (linePos <= LINE_LENGTH and line1[linePos] != '<'):
  119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  120:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  121:         currentString += line1[linePos]
  122:         linePos += 1
--------------------------------------------------------------------------------
[0.00716 s] killed by testDecodeMRZ15 (MRTDtest_v2.TestMRTD)
   - [# 273] ROR MRTD: 
--------------------------------------------------------------------------------
  114:         linePos += 1
  115:     travelData.lastName = currentString
  116:     linePos += 2
  117:     currentString = ''
- 118:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
+ 118:     while (linePos < LINE_LENGTH and line1[linePos] == '<'):
  119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  120:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  121:         currentString += line1[linePos]
  122:         linePos += 1
--------------------------------------------------------------------------------
[0.00215 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 274] ROR MRTD: 
--------------------------------------------------------------------------------
  115:     travelData.lastName = currentString
  116:     linePos += 2
  117:     currentString = ''
  118:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 119:         if not (((line1[linePos] <= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  120:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  121:         currentString += line1[linePos]
  122:         linePos += 1
  123:     travelData.firstName = currentString
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 275] ROR MRTD: 
--------------------------------------------------------------------------------
  115:     travelData.lastName = currentString
  116:     linePos += 2
  117:     currentString = ''
  118:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 119:         if not (((line1[linePos] > 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  120:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  121:         currentString += line1[linePos]
  122:         linePos += 1
  123:     travelData.firstName = currentString
--------------------------------------------------------------------------------
[0.00207 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 276] ROR MRTD: 
--------------------------------------------------------------------------------
  115:     travelData.lastName = currentString
  116:     linePos += 2
  117:     currentString = ''
  118:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 119:         if not (((line1[linePos] >= 'A' and line1[linePos] >= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  120:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  121:         currentString += line1[linePos]
  122:         linePos += 1
  123:     travelData.firstName = currentString
--------------------------------------------------------------------------------
[0.00107 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 277] ROR MRTD: 
--------------------------------------------------------------------------------
  115:     travelData.lastName = currentString
  116:     linePos += 2
  117:     currentString = ''
  118:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 119:         if not (((line1[linePos] >= 'A' and line1[linePos] < 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  120:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  121:         currentString += line1[linePos]
  122:         linePos += 1
  123:     travelData.firstName = currentString
--------------------------------------------------------------------------------
[0.00199 s] killed by testDecodeMRZ13 (MRTDtest_v2.TestMRTD)
   - [# 278] ROR MRTD: 
--------------------------------------------------------------------------------
  115:     travelData.lastName = currentString
  116:     linePos += 2
  117:     currentString = ''
  118:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] <= 'a' and line1[linePos] <= 'z'))):
  120:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  121:         currentString += line1[linePos]
  122:         linePos += 1
  123:     travelData.firstName = currentString
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ13 (MRTDtest_v2.TestMRTD)
   - [# 279] ROR MRTD: 
--------------------------------------------------------------------------------
  115:     travelData.lastName = currentString
  116:     linePos += 2
  117:     currentString = ''
  118:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] > 'a' and line1[linePos] <= 'z'))):
  120:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  121:         currentString += line1[linePos]
  122:         linePos += 1
  123:     travelData.firstName = currentString
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ13 (MRTDtest_v2.TestMRTD)
   - [# 280] ROR MRTD: 
--------------------------------------------------------------------------------
  115:     travelData.lastName = currentString
  116:     linePos += 2
  117:     currentString = ''
  118:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] >= 'z'))):
  120:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  121:         currentString += line1[linePos]
  122:         linePos += 1
  123:     travelData.firstName = currentString
--------------------------------------------------------------------------------
[0.00195 s] killed by testDecodeMRZ13 (MRTDtest_v2.TestMRTD)
   - [# 281] ROR MRTD: 
--------------------------------------------------------------------------------
  115:     travelData.lastName = currentString
  116:     linePos += 2
  117:     currentString = ''
  118:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 119:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] < 'z'))):
  120:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  121:         currentString += line1[linePos]
  122:         linePos += 1
  123:     travelData.firstName = currentString
--------------------------------------------------------------------------------
[0.00250 s] killed by testDecodeMRZ13 (MRTDtest_v2.TestMRTD)
   - [# 282] ROR MRTD: 
--------------------------------------------------------------------------------
  122:         linePos += 1
  123:     travelData.firstName = currentString
  124:     linePos += 1
  125:     currentString = ''
- 126:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
+ 126:     while (linePos > LINE_LENGTH and line1[linePos] != '<'):
  127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  128:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  129:         currentString += line1[linePos]
  130:         linePos += 1
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 283] ROR MRTD: 
--------------------------------------------------------------------------------
  122:         linePos += 1
  123:     travelData.firstName = currentString
  124:     linePos += 1
  125:     currentString = ''
- 126:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
+ 126:     while (linePos <= LINE_LENGTH and line1[linePos] != '<'):
  127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  128:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  129:         currentString += line1[linePos]
  130:         linePos += 1
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ13 (MRTDtest_v2.TestMRTD)
   - [# 284] ROR MRTD: 
--------------------------------------------------------------------------------
  122:         linePos += 1
  123:     travelData.firstName = currentString
  124:     linePos += 1
  125:     currentString = ''
- 126:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
+ 126:     while (linePos < LINE_LENGTH and line1[linePos] == '<'):
  127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  128:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  129:         currentString += line1[linePos]
  130:         linePos += 1
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 285] ROR MRTD: 
--------------------------------------------------------------------------------
  123:     travelData.firstName = currentString
  124:     linePos += 1
  125:     currentString = ''
  126:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 127:         if not (((line1[linePos] <= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  128:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  129:         currentString += line1[linePos]
  130:         linePos += 1
  131:     travelData.middleName = currentString
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 286] ROR MRTD: 
--------------------------------------------------------------------------------
  123:     travelData.firstName = currentString
  124:     linePos += 1
  125:     currentString = ''
  126:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 127:         if not (((line1[linePos] > 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  128:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  129:         currentString += line1[linePos]
  130:         linePos += 1
  131:     travelData.middleName = currentString
--------------------------------------------------------------------------------
[0.00099 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 287] ROR MRTD: 
--------------------------------------------------------------------------------
  123:     travelData.firstName = currentString
  124:     linePos += 1
  125:     currentString = ''
  126:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 127:         if not (((line1[linePos] >= 'A' and line1[linePos] >= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  128:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  129:         currentString += line1[linePos]
  130:         linePos += 1
  131:     travelData.middleName = currentString
--------------------------------------------------------------------------------
[0.00099 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 288] ROR MRTD: 
--------------------------------------------------------------------------------
  123:     travelData.firstName = currentString
  124:     linePos += 1
  125:     currentString = ''
  126:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 127:         if not (((line1[linePos] >= 'A' and line1[linePos] < 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  128:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  129:         currentString += line1[linePos]
  130:         linePos += 1
  131:     travelData.middleName = currentString
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ13 (MRTDtest_v2.TestMRTD)
   - [# 289] ROR MRTD: 
--------------------------------------------------------------------------------
  123:     travelData.firstName = currentString
  124:     linePos += 1
  125:     currentString = ''
  126:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] <= 'a' and line1[linePos] <= 'z'))):
  128:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  129:         currentString += line1[linePos]
  130:         linePos += 1
  131:     travelData.middleName = currentString
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ13 (MRTDtest_v2.TestMRTD)
   - [# 290] ROR MRTD: 
--------------------------------------------------------------------------------
  123:     travelData.firstName = currentString
  124:     linePos += 1
  125:     currentString = ''
  126:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] > 'a' and line1[linePos] <= 'z'))):
  128:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  129:         currentString += line1[linePos]
  130:         linePos += 1
  131:     travelData.middleName = currentString
--------------------------------------------------------------------------------
[0.00301 s] killed by testDecodeMRZ13 (MRTDtest_v2.TestMRTD)
   - [# 291] ROR MRTD: 
--------------------------------------------------------------------------------
  123:     travelData.firstName = currentString
  124:     linePos += 1
  125:     currentString = ''
  126:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] >= 'z'))):
  128:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  129:         currentString += line1[linePos]
  130:         linePos += 1
  131:     travelData.middleName = currentString
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ13 (MRTDtest_v2.TestMRTD)
   - [# 292] ROR MRTD: 
--------------------------------------------------------------------------------
  123:     travelData.firstName = currentString
  124:     linePos += 1
  125:     currentString = ''
  126:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
- 127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
+ 127:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] < 'z'))):
  128:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  129:         currentString += line1[linePos]
  130:         linePos += 1
  131:     travelData.middleName = currentString
--------------------------------------------------------------------------------
[0.00197 s] killed by testDecodeMRZ13 (MRTDtest_v2.TestMRTD)
   - [# 293] ROR MRTD: 
--------------------------------------------------------------------------------
  168: def encodeMRZ(personalNo):
  169:     data = getTravelDataFromDB(personalNo)
  170:     
  171:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
- 172:     if len(line1) > LINE_LENGTH:
+ 172:     if len(line1) < LINE_LENGTH:
  173:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
  174:     while len(line1) < LINE_LENGTH:
  175:         line1 += '<'
  176:     
--------------------------------------------------------------------------------
[0.00400 s] killed by testEncodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 294] ROR MRTD: 
--------------------------------------------------------------------------------
  168: def encodeMRZ(personalNo):
  169:     data = getTravelDataFromDB(personalNo)
  170:     
  171:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
- 172:     if len(line1) > LINE_LENGTH:
+ 172:     if len(line1) >= LINE_LENGTH:
  173:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
  174:     while len(line1) < LINE_LENGTH:
  175:         line1 += '<'
  176:     
--------------------------------------------------------------------------------
[0.00374 s] killed by testEncodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 295] ROR MRTD: 
--------------------------------------------------------------------------------
  170:     
  171:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
  172:     if len(line1) > LINE_LENGTH:
  173:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
- 174:     while len(line1) < LINE_LENGTH:
+ 174:     while len(line1) > LINE_LENGTH:
  175:         line1 += '<'
  176:     
  177:     
  178:     line2 = ((((((((data.passportNo + str(calculateCheck(data.passportNo))) + data.countryCode) + data.birthday) + str(calculateCheck(data.birthday))) + data.sex) + data.expirationDate) + str(calculateCheck(data.expirationDate))) + data.personalNo) + str(calculateCheck(data.personalNo))
--------------------------------------------------------------------------------
[0.00300 s] killed by testEncodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 296] ROR MRTD: 
--------------------------------------------------------------------------------
  170:     
  171:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
  172:     if len(line1) > LINE_LENGTH:
  173:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
- 174:     while len(line1) < LINE_LENGTH:
+ 174:     while len(line1) <= LINE_LENGTH:
  175:         line1 += '<'
  176:     
  177:     
  178:     line2 = ((((((((data.passportNo + str(calculateCheck(data.passportNo))) + data.countryCode) + data.birthday) + str(calculateCheck(data.birthday))) + data.sex) + data.expirationDate) + str(calculateCheck(data.expirationDate))) + data.personalNo) + str(calculateCheck(data.personalNo))
--------------------------------------------------------------------------------
[0.00300 s] killed by testEncodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 297] ROR MRTD: 
--------------------------------------------------------------------------------
  176:     
  177:     
  178:     line2 = ((((((((data.passportNo + str(calculateCheck(data.passportNo))) + data.countryCode) + data.birthday) + str(calculateCheck(data.birthday))) + data.sex) + data.expirationDate) + str(calculateCheck(data.expirationDate))) + data.personalNo) + str(calculateCheck(data.personalNo))
  179:     
- 180:     if len(line2) != LINE_LENGTH:
+ 180:     if len(line2) == LINE_LENGTH:
  181:         raise Exception(('Second line is not ' + str(LINE_LENGTH)) + ' characters.')
  182:     return (line1, line2)
  183: 
  184: 
--------------------------------------------------------------------------------
[0.00300 s] killed by testEncodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 298] ROR MRTD: 
--------------------------------------------------------------------------------
  185: 
  186: def checkMismatches(travelData):
  187:     
  188:     errors = TravelDataError()
- 189:     if int(travelData.passportCheck) != calculateCheck(travelData.passportNo):
+ 189:     if int(travelData.passportCheck) == calculateCheck(travelData.passportNo):
  190:         errors.passportError = True
  191:     else:
  192:         errors.passportError = False
  193:     
--------------------------------------------------------------------------------
[0.00000 s] killed by testCheckMismatches (MRTDtest_v2.TestMRTD)
   - [# 299] ROR MRTD: 
--------------------------------------------------------------------------------
  190:         errors.passportError = True
  191:     else:
  192:         errors.passportError = False
  193:     
- 194:     if int(travelData.birthdayCheck) != calculateCheck(travelData.birthday):
+ 194:     if int(travelData.birthdayCheck) == calculateCheck(travelData.birthday):
  195:         errors.birthdayError = True
  196:     else:
  197:         errors.birthdayError = False
  198:     
--------------------------------------------------------------------------------
[0.00123 s] killed by testCheckMismatches (MRTDtest_v2.TestMRTD)
   - [# 300] ROR MRTD: 
--------------------------------------------------------------------------------
  195:         errors.birthdayError = True
  196:     else:
  197:         errors.birthdayError = False
  198:     
- 199:     if int(travelData.expirationCheck) != calculateCheck(travelData.expirationDate):
+ 199:     if int(travelData.expirationCheck) == calculateCheck(travelData.expirationDate):
  200:         errors.expirationError = True
  201:     else:
  202:         errors.expirationError = False
  203:     
--------------------------------------------------------------------------------
[0.00000 s] killed by testCheckMismatches (MRTDtest_v2.TestMRTD)
   - [# 301] ROR MRTD: 
--------------------------------------------------------------------------------
  200:         errors.expirationError = True
  201:     else:
  202:         errors.expirationError = False
  203:     
- 204:     if int(travelData.personalNoCheck) != calculateCheck(travelData.personalNo):
+ 204:     if int(travelData.personalNoCheck) == calculateCheck(travelData.personalNo):
  205:         errors.personalError = True
  206:     else:
  207:         errors.personalError = False
  208:     return errors
--------------------------------------------------------------------------------
[0.00100 s] killed by testCheckMismatches (MRTDtest_v2.TestMRTD)
   - [# 302] SIR MRTD: 
--------------------------------------------------------------------------------
  102:     travelData = TravelData()
  103:     linePos = 0
  104:     
  105:     currentString = ''
- 106:     travelData.docType = line1[linePos:linePos + 1]
+ 106:     travelData.docType = line1[:linePos + 1]
  107:     linePos += 2
  108:     travelData.issuingCountry = line1[linePos:linePos + 3]
  109:     linePos += 3
  110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
--------------------------------------------------------------------------------
[0.00300 s] survived
   - [# 303] SIR MRTD: 
--------------------------------------------------------------------------------
  102:     travelData = TravelData()
  103:     linePos = 0
  104:     
  105:     currentString = ''
- 106:     travelData.docType = line1[linePos:linePos + 1]
+ 106:     travelData.docType = line1[linePos:]
  107:     linePos += 2
  108:     travelData.issuingCountry = line1[linePos:linePos + 3]
  109:     linePos += 3
  110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
--------------------------------------------------------------------------------
[0.00093 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 304] SIR MRTD: 
--------------------------------------------------------------------------------
  104:     
  105:     currentString = ''
  106:     travelData.docType = line1[linePos:linePos + 1]
  107:     linePos += 2
- 108:     travelData.issuingCountry = line1[linePos:linePos + 3]
+ 108:     travelData.issuingCountry = line1[:linePos + 3]
  109:     linePos += 3
  110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
  111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  112:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 305] SIR MRTD: 
--------------------------------------------------------------------------------
  104:     
  105:     currentString = ''
  106:     travelData.docType = line1[linePos:linePos + 1]
  107:     linePos += 2
- 108:     travelData.issuingCountry = line1[linePos:linePos + 3]
+ 108:     travelData.issuingCountry = line1[linePos:]
  109:     linePos += 3
  110:     while (linePos < LINE_LENGTH and line1[linePos] != '<'):
  111:         if not (((line1[linePos] >= 'A' and line1[linePos] <= 'Z') or (line1[linePos] >= 'a' and line1[linePos] <= 'z'))):
  112:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
--------------------------------------------------------------------------------
[0.00101 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 306] SIR MRTD: 
--------------------------------------------------------------------------------
  133:     
  134:     
  135:     
  136:     linePos = 0
- 137:     travelData.passportNo = line2[linePos:PASSPORT_LENGTH]
+ 137:     travelData.passportNo = line2[:PASSPORT_LENGTH]
  138:     linePos += PASSPORT_LENGTH
  139:     travelData.passportCheck = line2[linePos:linePos + 1]
  140:     linePos += 1
  141:     travelData.countryCode = line2[linePos:linePos + COUNTRY_CODE_LENGTH]
--------------------------------------------------------------------------------
[0.00400 s] survived
   - [# 307] SIR MRTD: 
--------------------------------------------------------------------------------
  133:     
  134:     
  135:     
  136:     linePos = 0
- 137:     travelData.passportNo = line2[linePos:PASSPORT_LENGTH]
+ 137:     travelData.passportNo = line2[linePos:]
  138:     linePos += PASSPORT_LENGTH
  139:     travelData.passportCheck = line2[linePos:linePos + 1]
  140:     linePos += 1
  141:     travelData.countryCode = line2[linePos:linePos + COUNTRY_CODE_LENGTH]
--------------------------------------------------------------------------------
[0.00099 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 308] SIR MRTD: 
--------------------------------------------------------------------------------
  135:     
  136:     linePos = 0
  137:     travelData.passportNo = line2[linePos:PASSPORT_LENGTH]
  138:     linePos += PASSPORT_LENGTH
- 139:     travelData.passportCheck = line2[linePos:linePos + 1]
+ 139:     travelData.passportCheck = line2[:linePos + 1]
  140:     linePos += 1
  141:     travelData.countryCode = line2[linePos:linePos + COUNTRY_CODE_LENGTH]
  142:     linePos += COUNTRY_CODE_LENGTH
  143:     travelData.birthday = line2[linePos:linePos + DATE_LENGTH]
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 309] SIR MRTD: 
--------------------------------------------------------------------------------
  135:     
  136:     linePos = 0
  137:     travelData.passportNo = line2[linePos:PASSPORT_LENGTH]
  138:     linePos += PASSPORT_LENGTH
- 139:     travelData.passportCheck = line2[linePos:linePos + 1]
+ 139:     travelData.passportCheck = line2[linePos:]
  140:     linePos += 1
  141:     travelData.countryCode = line2[linePos:linePos + COUNTRY_CODE_LENGTH]
  142:     linePos += COUNTRY_CODE_LENGTH
  143:     travelData.birthday = line2[linePos:linePos + DATE_LENGTH]
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 310] SIR MRTD: 
--------------------------------------------------------------------------------
  137:     travelData.passportNo = line2[linePos:PASSPORT_LENGTH]
  138:     linePos += PASSPORT_LENGTH
  139:     travelData.passportCheck = line2[linePos:linePos + 1]
  140:     linePos += 1
- 141:     travelData.countryCode = line2[linePos:linePos + COUNTRY_CODE_LENGTH]
+ 141:     travelData.countryCode = line2[:linePos + COUNTRY_CODE_LENGTH]
  142:     linePos += COUNTRY_CODE_LENGTH
  143:     travelData.birthday = line2[linePos:linePos + DATE_LENGTH]
  144:     validateDate(travelData.birthday)
  145:     linePos += DATE_LENGTH
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 311] SIR MRTD: 
--------------------------------------------------------------------------------
  137:     travelData.passportNo = line2[linePos:PASSPORT_LENGTH]
  138:     linePos += PASSPORT_LENGTH
  139:     travelData.passportCheck = line2[linePos:linePos + 1]
  140:     linePos += 1
- 141:     travelData.countryCode = line2[linePos:linePos + COUNTRY_CODE_LENGTH]
+ 141:     travelData.countryCode = line2[linePos:]
  142:     linePos += COUNTRY_CODE_LENGTH
  143:     travelData.birthday = line2[linePos:linePos + DATE_LENGTH]
  144:     validateDate(travelData.birthday)
  145:     linePos += DATE_LENGTH
--------------------------------------------------------------------------------
[0.00099 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 312] SIR MRTD: 
--------------------------------------------------------------------------------
  139:     travelData.passportCheck = line2[linePos:linePos + 1]
  140:     linePos += 1
  141:     travelData.countryCode = line2[linePos:linePos + COUNTRY_CODE_LENGTH]
  142:     linePos += COUNTRY_CODE_LENGTH
- 143:     travelData.birthday = line2[linePos:linePos + DATE_LENGTH]
+ 143:     travelData.birthday = line2[:linePos + DATE_LENGTH]
  144:     validateDate(travelData.birthday)
  145:     linePos += DATE_LENGTH
  146:     travelData.birthdayCheck = line2[linePos:linePos + 1]
  147:     linePos += 1
--------------------------------------------------------------------------------
[0.00098 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 313] SIR MRTD: 
--------------------------------------------------------------------------------
  139:     travelData.passportCheck = line2[linePos:linePos + 1]
  140:     linePos += 1
  141:     travelData.countryCode = line2[linePos:linePos + COUNTRY_CODE_LENGTH]
  142:     linePos += COUNTRY_CODE_LENGTH
- 143:     travelData.birthday = line2[linePos:linePos + DATE_LENGTH]
+ 143:     travelData.birthday = line2[linePos:]
  144:     validateDate(travelData.birthday)
  145:     linePos += DATE_LENGTH
  146:     travelData.birthdayCheck = line2[linePos:linePos + 1]
  147:     linePos += 1
--------------------------------------------------------------------------------
[0.00301 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 314] SIR MRTD: 
--------------------------------------------------------------------------------
  142:     linePos += COUNTRY_CODE_LENGTH
  143:     travelData.birthday = line2[linePos:linePos + DATE_LENGTH]
  144:     validateDate(travelData.birthday)
  145:     linePos += DATE_LENGTH
- 146:     travelData.birthdayCheck = line2[linePos:linePos + 1]
+ 146:     travelData.birthdayCheck = line2[:linePos + 1]
  147:     linePos += 1
  148:     travelData.sex = line2[linePos:linePos + SEX_LENGTH]
  149:     linePos += 1
  150:     travelData.expirationDate = line2[linePos:linePos + DATE_LENGTH]
--------------------------------------------------------------------------------
[0.00099 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 315] SIR MRTD: 
--------------------------------------------------------------------------------
  142:     linePos += COUNTRY_CODE_LENGTH
  143:     travelData.birthday = line2[linePos:linePos + DATE_LENGTH]
  144:     validateDate(travelData.birthday)
  145:     linePos += DATE_LENGTH
- 146:     travelData.birthdayCheck = line2[linePos:linePos + 1]
+ 146:     travelData.birthdayCheck = line2[linePos:]
  147:     linePos += 1
  148:     travelData.sex = line2[linePos:linePos + SEX_LENGTH]
  149:     linePos += 1
  150:     travelData.expirationDate = line2[linePos:linePos + DATE_LENGTH]
--------------------------------------------------------------------------------
[0.00101 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 316] SIR MRTD: 
--------------------------------------------------------------------------------
  144:     validateDate(travelData.birthday)
  145:     linePos += DATE_LENGTH
  146:     travelData.birthdayCheck = line2[linePos:linePos + 1]
  147:     linePos += 1
- 148:     travelData.sex = line2[linePos:linePos + SEX_LENGTH]
+ 148:     travelData.sex = line2[:linePos + SEX_LENGTH]
  149:     linePos += 1
  150:     travelData.expirationDate = line2[linePos:linePos + DATE_LENGTH]
  151:     validateDate(travelData.expirationDate)
  152:     linePos += DATE_LENGTH
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 317] SIR MRTD: 
--------------------------------------------------------------------------------
  144:     validateDate(travelData.birthday)
  145:     linePos += DATE_LENGTH
  146:     travelData.birthdayCheck = line2[linePos:linePos + 1]
  147:     linePos += 1
- 148:     travelData.sex = line2[linePos:linePos + SEX_LENGTH]
+ 148:     travelData.sex = line2[linePos:]
  149:     linePos += 1
  150:     travelData.expirationDate = line2[linePos:linePos + DATE_LENGTH]
  151:     validateDate(travelData.expirationDate)
  152:     linePos += DATE_LENGTH
--------------------------------------------------------------------------------
[0.00112 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 318] SIR MRTD: 
--------------------------------------------------------------------------------
  146:     travelData.birthdayCheck = line2[linePos:linePos + 1]
  147:     linePos += 1
  148:     travelData.sex = line2[linePos:linePos + SEX_LENGTH]
  149:     linePos += 1
- 150:     travelData.expirationDate = line2[linePos:linePos + DATE_LENGTH]
+ 150:     travelData.expirationDate = line2[:linePos + DATE_LENGTH]
  151:     validateDate(travelData.expirationDate)
  152:     linePos += DATE_LENGTH
  153:     travelData.expirationCheck = line2[linePos:linePos + 1]
  154:     linePos += 1
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 319] SIR MRTD: 
--------------------------------------------------------------------------------
  146:     travelData.birthdayCheck = line2[linePos:linePos + 1]
  147:     linePos += 1
  148:     travelData.sex = line2[linePos:linePos + SEX_LENGTH]
  149:     linePos += 1
- 150:     travelData.expirationDate = line2[linePos:linePos + DATE_LENGTH]
+ 150:     travelData.expirationDate = line2[linePos:]
  151:     validateDate(travelData.expirationDate)
  152:     linePos += DATE_LENGTH
  153:     travelData.expirationCheck = line2[linePos:linePos + 1]
  154:     linePos += 1
--------------------------------------------------------------------------------
[0.00108 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 320] SIR MRTD: 
--------------------------------------------------------------------------------
  149:     linePos += 1
  150:     travelData.expirationDate = line2[linePos:linePos + DATE_LENGTH]
  151:     validateDate(travelData.expirationDate)
  152:     linePos += DATE_LENGTH
- 153:     travelData.expirationCheck = line2[linePos:linePos + 1]
+ 153:     travelData.expirationCheck = line2[:linePos + 1]
  154:     linePos += 1
  155:     travelData.personalNo = line2[linePos:len(line2) - 1]
  156:     linePos = len(line2) - 1
  157:     travelData.personalNoCheck = line2[linePos]
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 321] SIR MRTD: 
--------------------------------------------------------------------------------
  149:     linePos += 1
  150:     travelData.expirationDate = line2[linePos:linePos + DATE_LENGTH]
  151:     validateDate(travelData.expirationDate)
  152:     linePos += DATE_LENGTH
- 153:     travelData.expirationCheck = line2[linePos:linePos + 1]
+ 153:     travelData.expirationCheck = line2[linePos:]
  154:     linePos += 1
  155:     travelData.personalNo = line2[linePos:len(line2) - 1]
  156:     linePos = len(line2) - 1
  157:     travelData.personalNoCheck = line2[linePos]
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 322] SIR MRTD: 
--------------------------------------------------------------------------------
  151:     validateDate(travelData.expirationDate)
  152:     linePos += DATE_LENGTH
  153:     travelData.expirationCheck = line2[linePos:linePos + 1]
  154:     linePos += 1
- 155:     travelData.personalNo = line2[linePos:len(line2) - 1]
+ 155:     travelData.personalNo = line2[:len(line2) - 1]
  156:     linePos = len(line2) - 1
  157:     travelData.personalNoCheck = line2[linePos]
  158:     linePos += 1
  159:     return travelData
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
   - [# 323] SIR MRTD: 
--------------------------------------------------------------------------------
  151:     validateDate(travelData.expirationDate)
  152:     linePos += DATE_LENGTH
  153:     travelData.expirationCheck = line2[linePos:linePos + 1]
  154:     linePos += 1
- 155:     travelData.personalNo = line2[linePos:len(line2) - 1]
+ 155:     travelData.personalNo = line2[linePos:]
  156:     linePos = len(line2) - 1
  157:     travelData.personalNoCheck = line2[linePos]
  158:     linePos += 1
  159:     return travelData
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest_v2.TestMRTD)
[*] Mutation score [35.19238 s]: 83.1%
   - all: 323
   - killed: 250 (77.4%)
   - survived: 51 (15.8%)
   - incompetent: 21 (6.5%)
   - timeout: 1 (0.3%)
