[*] Start mutation process:
   - targets: MRTD
   - tests: MRTDtest
[*] 16 tests passed:
   - MRTDtest [0.00210 s]
[*] Start mutants generation and execution:
   - [#   1] AOR MRTD: 
--------------------------------------------------------------------------------
   95:         int(i)
   96:         return int(i)
   97:     except ValueError:
   98:         if (str(i) >= 'A' and str(i) <= 'Z'):
-  99:             return int(ord(str(i)) - 55)
+  99:             return int(ord(str(i)) + 55)
  100:         else:
  101:             return 0
  102: 
  103: def calculateCheck(lst):
--------------------------------------------------------------------------------
[0.00299 s] killed by testGetNumericalValue (MRTDtest.TestMRTD)
   - [#   2] AOR MRTD: 
--------------------------------------------------------------------------------
  106:     total = 0
  107:     
  108:     for i in lst:
  109:         numVal = getNumericalValue(i)
- 110:         total += numVal * weights[weightIdx]
+ 110:         total += numVal / weights[weightIdx]
  111:         weightIdx = (weightIdx + 1) % len(weights)
  112:     return total % 10
  113: 
  114: def validateDate(date):
--------------------------------------------------------------------------------
[0.00103 s] killed by testCalculateCheck (MRTDtest.TestMRTD)
   - [#   3] AOR MRTD: 
--------------------------------------------------------------------------------
  106:     total = 0
  107:     
  108:     for i in lst:
  109:         numVal = getNumericalValue(i)
- 110:         total += numVal * weights[weightIdx]
+ 110:         total += numVal // weights[weightIdx]
  111:         weightIdx = (weightIdx + 1) % len(weights)
  112:     return total % 10
  113: 
  114: def validateDate(date):
--------------------------------------------------------------------------------
[0.00107 s] killed by testCalculateCheck (MRTDtest.TestMRTD)
   - [#   4] AOR MRTD: 
--------------------------------------------------------------------------------
  106:     total = 0
  107:     
  108:     for i in lst:
  109:         numVal = getNumericalValue(i)
- 110:         total += numVal * weights[weightIdx]
+ 110:         total += numVal ** weights[weightIdx]
  111:         weightIdx = (weightIdx + 1) % len(weights)
  112:     return total % 10
  113: 
  114: def validateDate(date):
--------------------------------------------------------------------------------
[0.00100 s] killed by testCalculateCheck (MRTDtest.TestMRTD)
   - [#   5] AOR MRTD: 
--------------------------------------------------------------------------------
  107:     
  108:     for i in lst:
  109:         numVal = getNumericalValue(i)
  110:         total += numVal * weights[weightIdx]
- 111:         weightIdx = (weightIdx + 1) % len(weights)
+ 111:         weightIdx = (weightIdx - 1) % len(weights)
  112:     return total % 10
  113: 
  114: def validateDate(date):
  115:     for char in date:
--------------------------------------------------------------------------------
[0.00099 s] killed by testCalculateCheck (MRTDtest.TestMRTD)
   - [#   6] AOR MRTD: 
--------------------------------------------------------------------------------
  107:     
  108:     for i in lst:
  109:         numVal = getNumericalValue(i)
  110:         total += numVal * weights[weightIdx]
- 111:         weightIdx = (weightIdx + 1) % len(weights)
+ 111:         weightIdx = (weightIdx + 1) * len(weights)
  112:     return total % 10
  113: 
  114: def validateDate(date):
  115:     for char in date:
--------------------------------------------------------------------------------
[0.00101 s] killed by testCalculateCheck (MRTDtest.TestMRTD)
   - [#   7] AOR MRTD: 
--------------------------------------------------------------------------------
  108:     for i in lst:
  109:         numVal = getNumericalValue(i)
  110:         total += numVal * weights[weightIdx]
  111:         weightIdx = (weightIdx + 1) % len(weights)
- 112:     return total % 10
+ 112:     return total * 10
  113: 
  114: def validateDate(date):
  115:     for char in date:
  116:         if (char != '<' and (char < '0' or char > '9')):
--------------------------------------------------------------------------------
[0.00000 s] killed by testCalculateCheck (MRTDtest.TestMRTD)
   - [#   8] AOR MRTD: 
--------------------------------------------------------------------------------
  113: 
  114: def validateDate(date):
  115:     for char in date:
  116:         if (char != '<' and (char < '0' or char > '9')):
- 117:             raise Exception(('Invalid character ' + char) + ' in date')
+ 117:             raise Exception(('Invalid character ' - char) + ' in date')
  118: 
  119: 
  120: 
  121: def scanMRZ():
--------------------------------------------------------------------------------
[0.00201 s] survived
   - [#   9] AOR MRTD: 
--------------------------------------------------------------------------------
  113: 
  114: def validateDate(date):
  115:     for char in date:
  116:         if (char != '<' and (char < '0' or char > '9')):
- 117:             raise Exception(('Invalid character ' + char) + ' in date')
+ 117:             raise Exception(('Invalid character ' + char) - ' in date')
  118: 
  119: 
  120: 
  121: def scanMRZ():
--------------------------------------------------------------------------------
[0.00201 s] survived
   - [#  10] AOR MRTD: 
--------------------------------------------------------------------------------
  127: 
  128: def decodeMRZ():
  129:     (line1, line2) = scanMRZ()
  130:     if (len(line1) != LINE_LENGTH or len(line2) != LINE_LENGTH):
- 131:         raise Exception(('Lines must both be ' + str(LINE_LENGTH)) + ' characters.')
+ 131:         raise Exception(('Lines must both be ' - str(LINE_LENGTH)) + ' characters.')
  132:     travelData = TravelData()
  133:     linePos = 0
  134:     
  135:     currentString = ''
--------------------------------------------------------------------------------
[0.00300 s] survived
   - [#  11] AOR MRTD: 
--------------------------------------------------------------------------------
  127: 
  128: def decodeMRZ():
  129:     (line1, line2) = scanMRZ()
  130:     if (len(line1) != LINE_LENGTH or len(line2) != LINE_LENGTH):
- 131:         raise Exception(('Lines must both be ' + str(LINE_LENGTH)) + ' characters.')
+ 131:         raise Exception(('Lines must both be ' + str(LINE_LENGTH)) - ' characters.')
  132:     travelData = TravelData()
  133:     linePos = 0
  134:     
  135:     currentString = ''
--------------------------------------------------------------------------------
[0.00200 s] survived
   - [#  12] AOR MRTD: 
--------------------------------------------------------------------------------
  132:     travelData = TravelData()
  133:     linePos = 0
  134:     
  135:     currentString = ''
- 136:     travelData.docType = line1[linePos:linePos + 1]
+ 136:     travelData.docType = line1[linePos:linePos - 1]
  137:     linePos += 2
  138:     travelData.issuingCountry = line1[linePos:linePos + 3]
  139:     linePos += 3
  140:     while line1[linePos] != '<':
--------------------------------------------------------------------------------
[0.00199 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [#  13] AOR MRTD: 
--------------------------------------------------------------------------------
  134:     
  135:     currentString = ''
  136:     travelData.docType = line1[linePos:linePos + 1]
  137:     linePos += 2
- 138:     travelData.issuingCountry = line1[linePos:linePos + 3]
+ 138:     travelData.issuingCountry = line1[linePos:linePos - 3]
  139:     linePos += 3
  140:     while line1[linePos] != '<':
  141:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
  142:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [#  14] AOR MRTD: 
--------------------------------------------------------------------------------
  138:     travelData.issuingCountry = line1[linePos:linePos + 3]
  139:     linePos += 3
  140:     while line1[linePos] != '<':
  141:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
- 142:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
+ 142:             raise Exception(('Invalid character ' - line1[linePos]) + ' in last name')
  143:         currentString += line1[linePos]
  144:         linePos += 1
  145:     travelData.lastName = currentString
  146:     linePos += 2
--------------------------------------------------------------------------------
[0.00200 s] survived
   - [#  15] AOR MRTD: 
--------------------------------------------------------------------------------
  138:     travelData.issuingCountry = line1[linePos:linePos + 3]
  139:     linePos += 3
  140:     while line1[linePos] != '<':
  141:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
- 142:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
+ 142:             raise Exception(('Invalid character ' + line1[linePos]) - ' in last name')
  143:         currentString += line1[linePos]
  144:         linePos += 1
  145:     travelData.lastName = currentString
  146:     linePos += 2
--------------------------------------------------------------------------------
[0.00306 s] survived
   - [#  16] AOR MRTD: 
--------------------------------------------------------------------------------
  146:     linePos += 2
  147:     currentString = ''
  148:     while line1[linePos] != '<':
  149:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
- 150:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
+ 150:             raise Exception(('Invalid character ' - line1[linePos]) + ' in first name')
  151:         currentString += line1[linePos]
  152:         linePos += 1
  153:     travelData.firstName = currentString
  154:     linePos += 1
--------------------------------------------------------------------------------
[0.00200 s] survived
   - [#  17] AOR MRTD: 
--------------------------------------------------------------------------------
  146:     linePos += 2
  147:     currentString = ''
  148:     while line1[linePos] != '<':
  149:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
- 150:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
+ 150:             raise Exception(('Invalid character ' + line1[linePos]) - ' in first name')
  151:         currentString += line1[linePos]
  152:         linePos += 1
  153:     travelData.firstName = currentString
  154:     linePos += 1
--------------------------------------------------------------------------------
[0.00367 s] survived
   - [#  18] AOR MRTD: 
--------------------------------------------------------------------------------
  154:     linePos += 1
  155:     currentString = ''
  156:     while line1[linePos] != '<':
  157:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
- 158:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
+ 158:             raise Exception(('Invalid character ' - line1[linePos]) + ' in middle name')
  159:         currentString += line1[linePos]
  160:         linePos += 1
  161:     travelData.middleName = currentString
  162:     currentString = ''
--------------------------------------------------------------------------------
[0.00200 s] survived
   - [#  19] AOR MRTD: 
--------------------------------------------------------------------------------
  154:     linePos += 1
  155:     currentString = ''
  156:     while line1[linePos] != '<':
  157:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
- 158:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
+ 158:             raise Exception(('Invalid character ' + line1[linePos]) - ' in middle name')
  159:         currentString += line1[linePos]
  160:         linePos += 1
  161:     travelData.middleName = currentString
  162:     currentString = ''
--------------------------------------------------------------------------------
[0.00199 s] survived
   - [#  20] AOR MRTD: 
--------------------------------------------------------------------------------
  165:     
  166:     linePos = 0
  167:     travelData.passportNo = line2[linePos:PASSPORT_LENGTH]
  168:     linePos += PASSPORT_LENGTH
- 169:     travelData.passportCheck = line2[linePos:linePos + 1]
+ 169:     travelData.passportCheck = line2[linePos:linePos - 1]
  170:     linePos += 1
  171:     travelData.countryCode = line2[linePos:linePos + COUNTRY_CODE_LENGTH]
  172:     linePos += COUNTRY_CODE_LENGTH
  173:     travelData.birthday = line2[linePos:linePos + DATE_LENGTH]
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [#  21] AOR MRTD: 
--------------------------------------------------------------------------------
  167:     travelData.passportNo = line2[linePos:PASSPORT_LENGTH]
  168:     linePos += PASSPORT_LENGTH
  169:     travelData.passportCheck = line2[linePos:linePos + 1]
  170:     linePos += 1
- 171:     travelData.countryCode = line2[linePos:linePos + COUNTRY_CODE_LENGTH]
+ 171:     travelData.countryCode = line2[linePos:linePos - COUNTRY_CODE_LENGTH]
  172:     linePos += COUNTRY_CODE_LENGTH
  173:     travelData.birthday = line2[linePos:linePos + DATE_LENGTH]
  174:     validateDate(travelData.birthday)
  175:     linePos += DATE_LENGTH
--------------------------------------------------------------------------------
[0.00099 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [#  22] AOR MRTD: 
--------------------------------------------------------------------------------
  169:     travelData.passportCheck = line2[linePos:linePos + 1]
  170:     linePos += 1
  171:     travelData.countryCode = line2[linePos:linePos + COUNTRY_CODE_LENGTH]
  172:     linePos += COUNTRY_CODE_LENGTH
- 173:     travelData.birthday = line2[linePos:linePos + DATE_LENGTH]
+ 173:     travelData.birthday = line2[linePos:linePos - DATE_LENGTH]
  174:     validateDate(travelData.birthday)
  175:     linePos += DATE_LENGTH
  176:     travelData.birthdayCheck = line2[linePos:linePos + 1]
  177:     linePos += 1
--------------------------------------------------------------------------------
[0.00101 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [#  23] AOR MRTD: 
--------------------------------------------------------------------------------
  172:     linePos += COUNTRY_CODE_LENGTH
  173:     travelData.birthday = line2[linePos:linePos + DATE_LENGTH]
  174:     validateDate(travelData.birthday)
  175:     linePos += DATE_LENGTH
- 176:     travelData.birthdayCheck = line2[linePos:linePos + 1]
+ 176:     travelData.birthdayCheck = line2[linePos:linePos - 1]
  177:     linePos += 1
  178:     travelData.sex = line2[linePos:linePos + SEX_LENGTH]
  179:     linePos += 1
  180:     travelData.expirationDate = line2[linePos:linePos + DATE_LENGTH]
--------------------------------------------------------------------------------
[0.00108 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [#  24] AOR MRTD: 
--------------------------------------------------------------------------------
  174:     validateDate(travelData.birthday)
  175:     linePos += DATE_LENGTH
  176:     travelData.birthdayCheck = line2[linePos:linePos + 1]
  177:     linePos += 1
- 178:     travelData.sex = line2[linePos:linePos + SEX_LENGTH]
+ 178:     travelData.sex = line2[linePos:linePos - SEX_LENGTH]
  179:     linePos += 1
  180:     travelData.expirationDate = line2[linePos:linePos + DATE_LENGTH]
  181:     validateDate(travelData.expirationDate)
  182:     linePos += DATE_LENGTH
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [#  25] AOR MRTD: 
--------------------------------------------------------------------------------
  176:     travelData.birthdayCheck = line2[linePos:linePos + 1]
  177:     linePos += 1
  178:     travelData.sex = line2[linePos:linePos + SEX_LENGTH]
  179:     linePos += 1
- 180:     travelData.expirationDate = line2[linePos:linePos + DATE_LENGTH]
+ 180:     travelData.expirationDate = line2[linePos:linePos - DATE_LENGTH]
  181:     validateDate(travelData.expirationDate)
  182:     linePos += DATE_LENGTH
  183:     travelData.expirationCheck = line2[linePos:linePos + 1]
  184:     linePos += 1
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [#  26] AOR MRTD: 
--------------------------------------------------------------------------------
  179:     linePos += 1
  180:     travelData.expirationDate = line2[linePos:linePos + DATE_LENGTH]
  181:     validateDate(travelData.expirationDate)
  182:     linePos += DATE_LENGTH
- 183:     travelData.expirationCheck = line2[linePos:linePos + 1]
+ 183:     travelData.expirationCheck = line2[linePos:linePos - 1]
  184:     linePos += 1
  185:     travelData.personalNo = line2[linePos:len(line2) - 1]
  186:     linePos = len(line2) - 1
  187:     travelData.personalNoCheck = line2[linePos]
--------------------------------------------------------------------------------
[0.00101 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [#  27] AOR MRTD: 
--------------------------------------------------------------------------------
  181:     validateDate(travelData.expirationDate)
  182:     linePos += DATE_LENGTH
  183:     travelData.expirationCheck = line2[linePos:linePos + 1]
  184:     linePos += 1
- 185:     travelData.personalNo = line2[linePos:len(line2) - 1]
+ 185:     travelData.personalNo = line2[linePos:len(line2) + 1]
  186:     linePos = len(line2) - 1
  187:     travelData.personalNoCheck = line2[linePos]
  188:     linePos += 1
  189:     return travelData
--------------------------------------------------------------------------------
[0.00101 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [#  28] AOR MRTD: 
--------------------------------------------------------------------------------
  182:     linePos += DATE_LENGTH
  183:     travelData.expirationCheck = line2[linePos:linePos + 1]
  184:     linePos += 1
  185:     travelData.personalNo = line2[linePos:len(line2) - 1]
- 186:     linePos = len(line2) - 1
+ 186:     linePos = len(line2) + 1
  187:     travelData.personalNoCheck = line2[linePos]
  188:     linePos += 1
  189:     return travelData
  190: 
--------------------------------------------------------------------------------
[0.00125 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [#  29] AOR MRTD: 
--------------------------------------------------------------------------------
  197: 
  198: def encodeMRZ(personalNo):
  199:     data = getTravelDataFromDB(personalNo)
  200:     
- 201:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
+ 201:     line1 = ((((((data.docType - '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
  202:     if len(line1) > LINE_LENGTH:
  203:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
  204:     while len(line1) < LINE_LENGTH:
  205:         line1 += '<'
--------------------------------------------------------------------------------
[0.00299 s] incompetent
   - [#  30] AOR MRTD: 
--------------------------------------------------------------------------------
  197: 
  198: def encodeMRZ(personalNo):
  199:     data = getTravelDataFromDB(personalNo)
  200:     
- 201:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
+ 201:     line1 = ((((((data.docType + '<') - data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
  202:     if len(line1) > LINE_LENGTH:
  203:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
  204:     while len(line1) < LINE_LENGTH:
  205:         line1 += '<'
--------------------------------------------------------------------------------
[0.00299 s] incompetent
   - [#  31] AOR MRTD: 
--------------------------------------------------------------------------------
  197: 
  198: def encodeMRZ(personalNo):
  199:     data = getTravelDataFromDB(personalNo)
  200:     
- 201:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
+ 201:     line1 = ((((((data.docType + '<') + data.issuingCountry) - data.lastName) + '<<') + data.firstName) + '<') + data.middleName
  202:     if len(line1) > LINE_LENGTH:
  203:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
  204:     while len(line1) < LINE_LENGTH:
  205:         line1 += '<'
--------------------------------------------------------------------------------
[0.00301 s] incompetent
   - [#  32] AOR MRTD: 
--------------------------------------------------------------------------------
  197: 
  198: def encodeMRZ(personalNo):
  199:     data = getTravelDataFromDB(personalNo)
  200:     
- 201:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
+ 201:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) - '<<') + data.firstName) + '<') + data.middleName
  202:     if len(line1) > LINE_LENGTH:
  203:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
  204:     while len(line1) < LINE_LENGTH:
  205:         line1 += '<'
--------------------------------------------------------------------------------
[0.00200 s] incompetent
   - [#  33] AOR MRTD: 
--------------------------------------------------------------------------------
  197: 
  198: def encodeMRZ(personalNo):
  199:     data = getTravelDataFromDB(personalNo)
  200:     
- 201:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
+ 201:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') - data.firstName) + '<') + data.middleName
  202:     if len(line1) > LINE_LENGTH:
  203:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
  204:     while len(line1) < LINE_LENGTH:
  205:         line1 += '<'
--------------------------------------------------------------------------------
[0.00200 s] incompetent
   - [#  34] AOR MRTD: 
--------------------------------------------------------------------------------
  197: 
  198: def encodeMRZ(personalNo):
  199:     data = getTravelDataFromDB(personalNo)
  200:     
- 201:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
+ 201:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) - '<') + data.middleName
  202:     if len(line1) > LINE_LENGTH:
  203:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
  204:     while len(line1) < LINE_LENGTH:
  205:         line1 += '<'
--------------------------------------------------------------------------------
[0.00307 s] incompetent
   - [#  35] AOR MRTD: 
--------------------------------------------------------------------------------
  197: 
  198: def encodeMRZ(personalNo):
  199:     data = getTravelDataFromDB(personalNo)
  200:     
- 201:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
+ 201:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') - data.middleName
  202:     if len(line1) > LINE_LENGTH:
  203:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
  204:     while len(line1) < LINE_LENGTH:
  205:         line1 += '<'
--------------------------------------------------------------------------------
[0.00207 s] incompetent
   - [#  36] AOR MRTD: 
--------------------------------------------------------------------------------
  199:     data = getTravelDataFromDB(personalNo)
  200:     
  201:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
  202:     if len(line1) > LINE_LENGTH:
- 203:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
+ 203:         raise Exception(('First line is not ' - str(LINE_LENGTH)) + ' characters.')
  204:     while len(line1) < LINE_LENGTH:
  205:         line1 += '<'
  206:     
  207:     
--------------------------------------------------------------------------------
[0.00301 s] survived
   - [#  37] AOR MRTD: 
--------------------------------------------------------------------------------
  199:     data = getTravelDataFromDB(personalNo)
  200:     
  201:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
  202:     if len(line1) > LINE_LENGTH:
- 203:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
+ 203:         raise Exception(('First line is not ' + str(LINE_LENGTH)) - ' characters.')
  204:     while len(line1) < LINE_LENGTH:
  205:         line1 += '<'
  206:     
  207:     
--------------------------------------------------------------------------------
[0.00199 s] survived
   - [#  38] AOR MRTD: 
--------------------------------------------------------------------------------
  204:     while len(line1) < LINE_LENGTH:
  205:         line1 += '<'
  206:     
  207:     
- 208:     line2 = ((((((((data.passportNo + data.passportCheck) + data.countryCode) + data.birthday) + data.birthdayCheck) + data.sex) + data.expirationDate) + data.expirationCheck) + data.personalNo) + data.personalNoCheck
+ 208:     line2 = ((((((((data.passportNo - data.passportCheck) + data.countryCode) + data.birthday) + data.birthdayCheck) + data.sex) + data.expirationDate) + data.expirationCheck) + data.personalNo) + data.personalNoCheck
  209:     
  210:     if len(line2) != LINE_LENGTH:
  211:         raise Exception(('Second line is not ' + str(LINE_LENGTH)) + ' characters.')
  212:     return (line1, line2)
--------------------------------------------------------------------------------
[0.00301 s] incompetent
   - [#  39] AOR MRTD: 
--------------------------------------------------------------------------------
  204:     while len(line1) < LINE_LENGTH:
  205:         line1 += '<'
  206:     
  207:     
- 208:     line2 = ((((((((data.passportNo + data.passportCheck) + data.countryCode) + data.birthday) + data.birthdayCheck) + data.sex) + data.expirationDate) + data.expirationCheck) + data.personalNo) + data.personalNoCheck
+ 208:     line2 = ((((((((data.passportNo + data.passportCheck) - data.countryCode) + data.birthday) + data.birthdayCheck) + data.sex) + data.expirationDate) + data.expirationCheck) + data.personalNo) + data.personalNoCheck
  209:     
  210:     if len(line2) != LINE_LENGTH:
  211:         raise Exception(('Second line is not ' + str(LINE_LENGTH)) + ' characters.')
  212:     return (line1, line2)
--------------------------------------------------------------------------------
[0.00301 s] incompetent
   - [#  40] AOR MRTD: 
--------------------------------------------------------------------------------
  204:     while len(line1) < LINE_LENGTH:
  205:         line1 += '<'
  206:     
  207:     
- 208:     line2 = ((((((((data.passportNo + data.passportCheck) + data.countryCode) + data.birthday) + data.birthdayCheck) + data.sex) + data.expirationDate) + data.expirationCheck) + data.personalNo) + data.personalNoCheck
+ 208:     line2 = ((((((((data.passportNo + data.passportCheck) + data.countryCode) - data.birthday) + data.birthdayCheck) + data.sex) + data.expirationDate) + data.expirationCheck) + data.personalNo) + data.personalNoCheck
  209:     
  210:     if len(line2) != LINE_LENGTH:
  211:         raise Exception(('Second line is not ' + str(LINE_LENGTH)) + ' characters.')
  212:     return (line1, line2)
--------------------------------------------------------------------------------
[0.00300 s] incompetent
   - [#  41] AOR MRTD: 
--------------------------------------------------------------------------------
  204:     while len(line1) < LINE_LENGTH:
  205:         line1 += '<'
  206:     
  207:     
- 208:     line2 = ((((((((data.passportNo + data.passportCheck) + data.countryCode) + data.birthday) + data.birthdayCheck) + data.sex) + data.expirationDate) + data.expirationCheck) + data.personalNo) + data.personalNoCheck
+ 208:     line2 = ((((((((data.passportNo + data.passportCheck) + data.countryCode) + data.birthday) - data.birthdayCheck) + data.sex) + data.expirationDate) + data.expirationCheck) + data.personalNo) + data.personalNoCheck
  209:     
  210:     if len(line2) != LINE_LENGTH:
  211:         raise Exception(('Second line is not ' + str(LINE_LENGTH)) + ' characters.')
  212:     return (line1, line2)
--------------------------------------------------------------------------------
[0.00200 s] incompetent
   - [#  42] AOR MRTD: 
--------------------------------------------------------------------------------
  204:     while len(line1) < LINE_LENGTH:
  205:         line1 += '<'
  206:     
  207:     
- 208:     line2 = ((((((((data.passportNo + data.passportCheck) + data.countryCode) + data.birthday) + data.birthdayCheck) + data.sex) + data.expirationDate) + data.expirationCheck) + data.personalNo) + data.personalNoCheck
+ 208:     line2 = ((((((((data.passportNo + data.passportCheck) + data.countryCode) + data.birthday) + data.birthdayCheck) - data.sex) + data.expirationDate) + data.expirationCheck) + data.personalNo) + data.personalNoCheck
  209:     
  210:     if len(line2) != LINE_LENGTH:
  211:         raise Exception(('Second line is not ' + str(LINE_LENGTH)) + ' characters.')
  212:     return (line1, line2)
--------------------------------------------------------------------------------
[0.00300 s] incompetent
   - [#  43] AOR MRTD: 
--------------------------------------------------------------------------------
  204:     while len(line1) < LINE_LENGTH:
  205:         line1 += '<'
  206:     
  207:     
- 208:     line2 = ((((((((data.passportNo + data.passportCheck) + data.countryCode) + data.birthday) + data.birthdayCheck) + data.sex) + data.expirationDate) + data.expirationCheck) + data.personalNo) + data.personalNoCheck
+ 208:     line2 = ((((((((data.passportNo + data.passportCheck) + data.countryCode) + data.birthday) + data.birthdayCheck) + data.sex) - data.expirationDate) + data.expirationCheck) + data.personalNo) + data.personalNoCheck
  209:     
  210:     if len(line2) != LINE_LENGTH:
  211:         raise Exception(('Second line is not ' + str(LINE_LENGTH)) + ' characters.')
  212:     return (line1, line2)
--------------------------------------------------------------------------------
[0.00200 s] incompetent
   - [#  44] AOR MRTD: 
--------------------------------------------------------------------------------
  204:     while len(line1) < LINE_LENGTH:
  205:         line1 += '<'
  206:     
  207:     
- 208:     line2 = ((((((((data.passportNo + data.passportCheck) + data.countryCode) + data.birthday) + data.birthdayCheck) + data.sex) + data.expirationDate) + data.expirationCheck) + data.personalNo) + data.personalNoCheck
+ 208:     line2 = ((((((((data.passportNo + data.passportCheck) + data.countryCode) + data.birthday) + data.birthdayCheck) + data.sex) + data.expirationDate) - data.expirationCheck) + data.personalNo) + data.personalNoCheck
  209:     
  210:     if len(line2) != LINE_LENGTH:
  211:         raise Exception(('Second line is not ' + str(LINE_LENGTH)) + ' characters.')
  212:     return (line1, line2)
--------------------------------------------------------------------------------
[0.00301 s] incompetent
   - [#  45] AOR MRTD: 
--------------------------------------------------------------------------------
  204:     while len(line1) < LINE_LENGTH:
  205:         line1 += '<'
  206:     
  207:     
- 208:     line2 = ((((((((data.passportNo + data.passportCheck) + data.countryCode) + data.birthday) + data.birthdayCheck) + data.sex) + data.expirationDate) + data.expirationCheck) + data.personalNo) + data.personalNoCheck
+ 208:     line2 = ((((((((data.passportNo + data.passportCheck) + data.countryCode) + data.birthday) + data.birthdayCheck) + data.sex) + data.expirationDate) + data.expirationCheck) - data.personalNo) + data.personalNoCheck
  209:     
  210:     if len(line2) != LINE_LENGTH:
  211:         raise Exception(('Second line is not ' + str(LINE_LENGTH)) + ' characters.')
  212:     return (line1, line2)
--------------------------------------------------------------------------------
[0.00200 s] incompetent
   - [#  46] AOR MRTD: 
--------------------------------------------------------------------------------
  204:     while len(line1) < LINE_LENGTH:
  205:         line1 += '<'
  206:     
  207:     
- 208:     line2 = ((((((((data.passportNo + data.passportCheck) + data.countryCode) + data.birthday) + data.birthdayCheck) + data.sex) + data.expirationDate) + data.expirationCheck) + data.personalNo) + data.personalNoCheck
+ 208:     line2 = ((((((((data.passportNo + data.passportCheck) + data.countryCode) + data.birthday) + data.birthdayCheck) + data.sex) + data.expirationDate) + data.expirationCheck) + data.personalNo) - data.personalNoCheck
  209:     
  210:     if len(line2) != LINE_LENGTH:
  211:         raise Exception(('Second line is not ' + str(LINE_LENGTH)) + ' characters.')
  212:     return (line1, line2)
--------------------------------------------------------------------------------
[0.00207 s] incompetent
   - [#  47] AOR MRTD: 
--------------------------------------------------------------------------------
  207:     
  208:     line2 = ((((((((data.passportNo + data.passportCheck) + data.countryCode) + data.birthday) + data.birthdayCheck) + data.sex) + data.expirationDate) + data.expirationCheck) + data.personalNo) + data.personalNoCheck
  209:     
  210:     if len(line2) != LINE_LENGTH:
- 211:         raise Exception(('Second line is not ' + str(LINE_LENGTH)) + ' characters.')
+ 211:         raise Exception(('Second line is not ' - str(LINE_LENGTH)) + ' characters.')
  212:     return (line1, line2)
  213: 
  214: 
  215: 
--------------------------------------------------------------------------------
[0.00300 s] survived
   - [#  48] AOR MRTD: 
--------------------------------------------------------------------------------
  207:     
  208:     line2 = ((((((((data.passportNo + data.passportCheck) + data.countryCode) + data.birthday) + data.birthdayCheck) + data.sex) + data.expirationDate) + data.expirationCheck) + data.personalNo) + data.personalNoCheck
  209:     
  210:     if len(line2) != LINE_LENGTH:
- 211:         raise Exception(('Second line is not ' + str(LINE_LENGTH)) + ' characters.')
+ 211:         raise Exception(('Second line is not ' + str(LINE_LENGTH)) - ' characters.')
  212:     return (line1, line2)
  213: 
  214: 
  215: 
--------------------------------------------------------------------------------
[0.00299 s] survived
   - [#  49] ASR MRTD: 
--------------------------------------------------------------------------------
  106:     total = 0
  107:     
  108:     for i in lst:
  109:         numVal = getNumericalValue(i)
- 110:         total += numVal * weights[weightIdx]
+ 110:         total -= numVal * weights[weightIdx]
  111:         weightIdx = (weightIdx + 1) % len(weights)
  112:     return total % 10
  113: 
  114: def validateDate(date):
--------------------------------------------------------------------------------
[0.00000 s] killed by testCalculateCheck (MRTDtest.TestMRTD)
   - [#  50] ASR MRTD: 
--------------------------------------------------------------------------------
  133:     linePos = 0
  134:     
  135:     currentString = ''
  136:     travelData.docType = line1[linePos:linePos + 1]
- 137:     linePos += 2
+ 137:     linePos -= 2
  138:     travelData.issuingCountry = line1[linePos:linePos + 3]
  139:     linePos += 3
  140:     while line1[linePos] != '<':
  141:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [#  51] ASR MRTD: 
--------------------------------------------------------------------------------
  135:     currentString = ''
  136:     travelData.docType = line1[linePos:linePos + 1]
  137:     linePos += 2
  138:     travelData.issuingCountry = line1[linePos:linePos + 3]
- 139:     linePos += 3
+ 139:     linePos -= 3
  140:     while line1[linePos] != '<':
  141:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
  142:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  143:         currentString += line1[linePos]
--------------------------------------------------------------------------------
[0.00199 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [#  52] ASR MRTD: 
--------------------------------------------------------------------------------
  139:     linePos += 3
  140:     while line1[linePos] != '<':
  141:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
  142:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
- 143:         currentString += line1[linePos]
+ 143:         currentString -= line1[linePos]
  144:         linePos += 1
  145:     travelData.lastName = currentString
  146:     linePos += 2
  147:     currentString = ''
--------------------------------------------------------------------------------
[0.00306 s] incompetent
   - [#  53] ASR MRTD: 
--------------------------------------------------------------------------------
  140:     while line1[linePos] != '<':
  141:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
  142:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  143:         currentString += line1[linePos]
- 144:         linePos += 1
+ 144:         linePos -= 1
  145:     travelData.lastName = currentString
  146:     linePos += 2
  147:     currentString = ''
  148:     while line1[linePos] != '<':
--------------------------------------------------------------------------------
[0.00099 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [#  54] ASR MRTD: 
--------------------------------------------------------------------------------
  142:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  143:         currentString += line1[linePos]
  144:         linePos += 1
  145:     travelData.lastName = currentString
- 146:     linePos += 2
+ 146:     linePos -= 2
  147:     currentString = ''
  148:     while line1[linePos] != '<':
  149:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
  150:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
--------------------------------------------------------------------------------
[0.00099 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [#  55] ASR MRTD: 
--------------------------------------------------------------------------------
  147:     currentString = ''
  148:     while line1[linePos] != '<':
  149:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
  150:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
- 151:         currentString += line1[linePos]
+ 151:         currentString -= line1[linePos]
  152:         linePos += 1
  153:     travelData.firstName = currentString
  154:     linePos += 1
  155:     currentString = ''
--------------------------------------------------------------------------------
[0.00300 s] incompetent
   - [#  56] ASR MRTD: 
--------------------------------------------------------------------------------
  148:     while line1[linePos] != '<':
  149:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
  150:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  151:         currentString += line1[linePos]
- 152:         linePos += 1
+ 152:         linePos -= 1
  153:     travelData.firstName = currentString
  154:     linePos += 1
  155:     currentString = ''
  156:     while line1[linePos] != '<':
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [#  57] ASR MRTD: 
--------------------------------------------------------------------------------
  150:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  151:         currentString += line1[linePos]
  152:         linePos += 1
  153:     travelData.firstName = currentString
- 154:     linePos += 1
+ 154:     linePos -= 1
  155:     currentString = ''
  156:     while line1[linePos] != '<':
  157:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
  158:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
--------------------------------------------------------------------------------
[0.00132 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [#  58] ASR MRTD: 
--------------------------------------------------------------------------------
  155:     currentString = ''
  156:     while line1[linePos] != '<':
  157:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
  158:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
- 159:         currentString += line1[linePos]
+ 159:         currentString -= line1[linePos]
  160:         linePos += 1
  161:     travelData.middleName = currentString
  162:     currentString = ''
  163:     
--------------------------------------------------------------------------------
[0.00200 s] incompetent
   - [#  59] ASR MRTD: 
--------------------------------------------------------------------------------
  156:     while line1[linePos] != '<':
  157:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
  158:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  159:         currentString += line1[linePos]
- 160:         linePos += 1
+ 160:         linePos -= 1
  161:     travelData.middleName = currentString
  162:     currentString = ''
  163:     
  164:     
--------------------------------------------------------------------------------
[0.00102 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [#  60] ASR MRTD: 
--------------------------------------------------------------------------------
  164:     
  165:     
  166:     linePos = 0
  167:     travelData.passportNo = line2[linePos:PASSPORT_LENGTH]
- 168:     linePos += PASSPORT_LENGTH
+ 168:     linePos -= PASSPORT_LENGTH
  169:     travelData.passportCheck = line2[linePos:linePos + 1]
  170:     linePos += 1
  171:     travelData.countryCode = line2[linePos:linePos + COUNTRY_CODE_LENGTH]
  172:     linePos += COUNTRY_CODE_LENGTH
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [#  61] ASR MRTD: 
--------------------------------------------------------------------------------
  166:     linePos = 0
  167:     travelData.passportNo = line2[linePos:PASSPORT_LENGTH]
  168:     linePos += PASSPORT_LENGTH
  169:     travelData.passportCheck = line2[linePos:linePos + 1]
- 170:     linePos += 1
+ 170:     linePos -= 1
  171:     travelData.countryCode = line2[linePos:linePos + COUNTRY_CODE_LENGTH]
  172:     linePos += COUNTRY_CODE_LENGTH
  173:     travelData.birthday = line2[linePos:linePos + DATE_LENGTH]
  174:     validateDate(travelData.birthday)
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [#  62] ASR MRTD: 
--------------------------------------------------------------------------------
  168:     linePos += PASSPORT_LENGTH
  169:     travelData.passportCheck = line2[linePos:linePos + 1]
  170:     linePos += 1
  171:     travelData.countryCode = line2[linePos:linePos + COUNTRY_CODE_LENGTH]
- 172:     linePos += COUNTRY_CODE_LENGTH
+ 172:     linePos -= COUNTRY_CODE_LENGTH
  173:     travelData.birthday = line2[linePos:linePos + DATE_LENGTH]
  174:     validateDate(travelData.birthday)
  175:     linePos += DATE_LENGTH
  176:     travelData.birthdayCheck = line2[linePos:linePos + 1]
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [#  63] ASR MRTD: 
--------------------------------------------------------------------------------
  171:     travelData.countryCode = line2[linePos:linePos + COUNTRY_CODE_LENGTH]
  172:     linePos += COUNTRY_CODE_LENGTH
  173:     travelData.birthday = line2[linePos:linePos + DATE_LENGTH]
  174:     validateDate(travelData.birthday)
- 175:     linePos += DATE_LENGTH
+ 175:     linePos -= DATE_LENGTH
  176:     travelData.birthdayCheck = line2[linePos:linePos + 1]
  177:     linePos += 1
  178:     travelData.sex = line2[linePos:linePos + SEX_LENGTH]
  179:     linePos += 1
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [#  64] ASR MRTD: 
--------------------------------------------------------------------------------
  173:     travelData.birthday = line2[linePos:linePos + DATE_LENGTH]
  174:     validateDate(travelData.birthday)
  175:     linePos += DATE_LENGTH
  176:     travelData.birthdayCheck = line2[linePos:linePos + 1]
- 177:     linePos += 1
+ 177:     linePos -= 1
  178:     travelData.sex = line2[linePos:linePos + SEX_LENGTH]
  179:     linePos += 1
  180:     travelData.expirationDate = line2[linePos:linePos + DATE_LENGTH]
  181:     validateDate(travelData.expirationDate)
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [#  65] ASR MRTD: 
--------------------------------------------------------------------------------
  175:     linePos += DATE_LENGTH
  176:     travelData.birthdayCheck = line2[linePos:linePos + 1]
  177:     linePos += 1
  178:     travelData.sex = line2[linePos:linePos + SEX_LENGTH]
- 179:     linePos += 1
+ 179:     linePos -= 1
  180:     travelData.expirationDate = line2[linePos:linePos + DATE_LENGTH]
  181:     validateDate(travelData.expirationDate)
  182:     linePos += DATE_LENGTH
  183:     travelData.expirationCheck = line2[linePos:linePos + 1]
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [#  66] ASR MRTD: 
--------------------------------------------------------------------------------
  178:     travelData.sex = line2[linePos:linePos + SEX_LENGTH]
  179:     linePos += 1
  180:     travelData.expirationDate = line2[linePos:linePos + DATE_LENGTH]
  181:     validateDate(travelData.expirationDate)
- 182:     linePos += DATE_LENGTH
+ 182:     linePos -= DATE_LENGTH
  183:     travelData.expirationCheck = line2[linePos:linePos + 1]
  184:     linePos += 1
  185:     travelData.personalNo = line2[linePos:len(line2) - 1]
  186:     linePos = len(line2) - 1
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [#  67] ASR MRTD: 
--------------------------------------------------------------------------------
  180:     travelData.expirationDate = line2[linePos:linePos + DATE_LENGTH]
  181:     validateDate(travelData.expirationDate)
  182:     linePos += DATE_LENGTH
  183:     travelData.expirationCheck = line2[linePos:linePos + 1]
- 184:     linePos += 1
+ 184:     linePos -= 1
  185:     travelData.personalNo = line2[linePos:len(line2) - 1]
  186:     linePos = len(line2) - 1
  187:     travelData.personalNoCheck = line2[linePos]
  188:     linePos += 1
--------------------------------------------------------------------------------
[0.00101 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [#  68] ASR MRTD: 
--------------------------------------------------------------------------------
  184:     linePos += 1
  185:     travelData.personalNo = line2[linePos:len(line2) - 1]
  186:     linePos = len(line2) - 1
  187:     travelData.personalNoCheck = line2[linePos]
- 188:     linePos += 1
+ 188:     linePos -= 1
  189:     return travelData
  190: 
  191: 
  192: 
--------------------------------------------------------------------------------
[0.00301 s] survived
   - [#  69] ASR MRTD: 
--------------------------------------------------------------------------------
  201:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
  202:     if len(line1) > LINE_LENGTH:
  203:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
  204:     while len(line1) < LINE_LENGTH:
- 205:         line1 += '<'
+ 205:         line1 -= '<'
  206:     
  207:     
  208:     line2 = ((((((((data.passportNo + data.passportCheck) + data.countryCode) + data.birthday) + data.birthdayCheck) + data.sex) + data.expirationDate) + data.expirationCheck) + data.personalNo) + data.personalNoCheck
  209:     
--------------------------------------------------------------------------------
[0.00200 s] incompetent
   - [#  70] COI MRTD: 
--------------------------------------------------------------------------------
   94:     try:
   95:         int(i)
   96:         return int(i)
   97:     except ValueError:
-  98:         if (str(i) >= 'A' and str(i) <= 'Z'):
+  98:         if not ((str(i) >= 'A' and str(i) <= 'Z')):
   99:             return int(ord(str(i)) - 55)
  100:         else:
  101:             return 0
  102: 
--------------------------------------------------------------------------------
[0.00100 s] killed by testCalculateCheck (MRTDtest.TestMRTD)
   - [#  71] COI MRTD: 
--------------------------------------------------------------------------------
  112:     return total % 10
  113: 
  114: def validateDate(date):
  115:     for char in date:
- 116:         if (char != '<' and (char < '0' or char > '9')):
+ 116:         if not ((char != '<' and (char < '0' or char > '9'))):
  117:             raise Exception(('Invalid character ' + char) + ' in date')
  118: 
  119: 
  120: 
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [#  72] COI MRTD: 
--------------------------------------------------------------------------------
  126: 
  127: 
  128: def decodeMRZ():
  129:     (line1, line2) = scanMRZ()
- 130:     if (len(line1) != LINE_LENGTH or len(line2) != LINE_LENGTH):
+ 130:     if not ((len(line1) != LINE_LENGTH or len(line2) != LINE_LENGTH)):
  131:         raise Exception(('Lines must both be ' + str(LINE_LENGTH)) + ' characters.')
  132:     travelData = TravelData()
  133:     linePos = 0
  134:     
--------------------------------------------------------------------------------
[0.00099 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [#  73] COI MRTD: 
--------------------------------------------------------------------------------
  136:     travelData.docType = line1[linePos:linePos + 1]
  137:     linePos += 2
  138:     travelData.issuingCountry = line1[linePos:linePos + 3]
  139:     linePos += 3
- 140:     while line1[linePos] != '<':
+ 140:     while not (line1[linePos] != '<'):
  141:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
  142:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  143:         currentString += line1[linePos]
  144:         linePos += 1
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [#  74] COI MRTD: 
--------------------------------------------------------------------------------
  137:     linePos += 2
  138:     travelData.issuingCountry = line1[linePos:linePos + 3]
  139:     linePos += 3
  140:     while line1[linePos] != '<':
- 141:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
+ 141:         if not ((line1[linePos] < 'A' or line1[linePos] > 'Z')):
  142:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  143:         currentString += line1[linePos]
  144:         linePos += 1
  145:     travelData.lastName = currentString
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [#  75] COI MRTD: 
--------------------------------------------------------------------------------
  144:         linePos += 1
  145:     travelData.lastName = currentString
  146:     linePos += 2
  147:     currentString = ''
- 148:     while line1[linePos] != '<':
+ 148:     while not (line1[linePos] != '<'):
  149:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
  150:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  151:         currentString += line1[linePos]
  152:         linePos += 1
--------------------------------------------------------------------------------
[0.00102 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [#  76] COI MRTD: 
--------------------------------------------------------------------------------
  145:     travelData.lastName = currentString
  146:     linePos += 2
  147:     currentString = ''
  148:     while line1[linePos] != '<':
- 149:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
+ 149:         if not ((line1[linePos] < 'A' or line1[linePos] > 'Z')):
  150:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  151:         currentString += line1[linePos]
  152:         linePos += 1
  153:     travelData.firstName = currentString
--------------------------------------------------------------------------------
[0.00099 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [#  77] COI MRTD: 
--------------------------------------------------------------------------------
  152:         linePos += 1
  153:     travelData.firstName = currentString
  154:     linePos += 1
  155:     currentString = ''
- 156:     while line1[linePos] != '<':
+ 156:     while not (line1[linePos] != '<'):
  157:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
  158:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  159:         currentString += line1[linePos]
  160:         linePos += 1
--------------------------------------------------------------------------------
[0.00198 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [#  78] COI MRTD: 
--------------------------------------------------------------------------------
  153:     travelData.firstName = currentString
  154:     linePos += 1
  155:     currentString = ''
  156:     while line1[linePos] != '<':
- 157:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
+ 157:         if not ((line1[linePos] < 'A' or line1[linePos] > 'Z')):
  158:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  159:         currentString += line1[linePos]
  160:         linePos += 1
  161:     travelData.middleName = currentString
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [#  79] COI MRTD: 
--------------------------------------------------------------------------------
  198: def encodeMRZ(personalNo):
  199:     data = getTravelDataFromDB(personalNo)
  200:     
  201:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
- 202:     if len(line1) > LINE_LENGTH:
+ 202:     if not (len(line1) > LINE_LENGTH):
  203:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
  204:     while len(line1) < LINE_LENGTH:
  205:         line1 += '<'
  206:     
--------------------------------------------------------------------------------
[0.00300 s] killed by testEncodeMRZ (MRTDtest.TestMRTD)
   - [#  80] COI MRTD: 
--------------------------------------------------------------------------------
  200:     
  201:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
  202:     if len(line1) > LINE_LENGTH:
  203:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
- 204:     while len(line1) < LINE_LENGTH:
+ 204:     while not (len(line1) < LINE_LENGTH):
  205:         line1 += '<'
  206:     
  207:     
  208:     line2 = ((((((((data.passportNo + data.passportCheck) + data.countryCode) + data.birthday) + data.birthdayCheck) + data.sex) + data.expirationDate) + data.expirationCheck) + data.personalNo) + data.personalNoCheck
--------------------------------------------------------------------------------
[0.00300 s] killed by testEncodeMRZ (MRTDtest.TestMRTD)
   - [#  81] COI MRTD: 
--------------------------------------------------------------------------------
  206:     
  207:     
  208:     line2 = ((((((((data.passportNo + data.passportCheck) + data.countryCode) + data.birthday) + data.birthdayCheck) + data.sex) + data.expirationDate) + data.expirationCheck) + data.personalNo) + data.personalNoCheck
  209:     
- 210:     if len(line2) != LINE_LENGTH:
+ 210:     if not (len(line2) != LINE_LENGTH):
  211:         raise Exception(('Second line is not ' + str(LINE_LENGTH)) + ' characters.')
  212:     return (line1, line2)
  213: 
  214: 
--------------------------------------------------------------------------------
[0.00301 s] killed by testEncodeMRZ (MRTDtest.TestMRTD)
   - [#  82] COI MRTD: 
--------------------------------------------------------------------------------
  215: 
  216: def checkMismatches(travelData):
  217:     
  218:     errors = TravelDataError()
- 219:     if int(travelData.passportCheck) != calculateCheck(travelData.passportNo):
+ 219:     if not (int(travelData.passportCheck) != calculateCheck(travelData.passportNo)):
  220:         errors.passportError = True
  221:     else:
  222:         errors.passportError = False
  223:     
--------------------------------------------------------------------------------
[0.00099 s] killed by testCheckMismatches (MRTDtest.TestMRTD)
   - [#  83] COI MRTD: 
--------------------------------------------------------------------------------
  220:         errors.passportError = True
  221:     else:
  222:         errors.passportError = False
  223:     
- 224:     if int(travelData.birthdayCheck) != calculateCheck(travelData.birthday):
+ 224:     if not (int(travelData.birthdayCheck) != calculateCheck(travelData.birthday)):
  225:         errors.birthdayError = True
  226:     else:
  227:         errors.birthdayError = False
  228:     
--------------------------------------------------------------------------------
[0.00100 s] killed by testCheckMismatches (MRTDtest.TestMRTD)
   - [#  84] COI MRTD: 
--------------------------------------------------------------------------------
  225:         errors.birthdayError = True
  226:     else:
  227:         errors.birthdayError = False
  228:     
- 229:     if int(travelData.expirationCheck) != calculateCheck(travelData.expirationDate):
+ 229:     if not (int(travelData.expirationCheck) != calculateCheck(travelData.expirationDate)):
  230:         errors.expirationError = True
  231:     else:
  232:         errors.expirationError = False
  233:     
--------------------------------------------------------------------------------
[0.00100 s] killed by testCheckMismatches (MRTDtest.TestMRTD)
   - [#  85] COI MRTD: 
--------------------------------------------------------------------------------
  230:         errors.expirationError = True
  231:     else:
  232:         errors.expirationError = False
  233:     
- 234:     if int(travelData.personalNoCheck) != calculateCheck(travelData.personalNo):
+ 234:     if not (int(travelData.personalNoCheck) != calculateCheck(travelData.personalNo)):
  235:         errors.personalError = True
  236:     else:
  237:         errors.personalError = False
  238:     return errors
--------------------------------------------------------------------------------
[0.00000 s] killed by testCheckMismatches (MRTDtest.TestMRTD)
   - [#  86] CRP MRTD: 
--------------------------------------------------------------------------------
-   1: PASSPORT_LENGTH = 9
+   1: PASSPORT_LENGTH = 10
    2: COUNTRY_CODE_LENGTH = 3
    3: DATE_LENGTH = 6
    4: SEX_LENGTH = 1
    5: LINE_LENGTH = 44
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [#  87] CRP MRTD: 
--------------------------------------------------------------------------------
    1: PASSPORT_LENGTH = 9
-   2: COUNTRY_CODE_LENGTH = 3
+   2: COUNTRY_CODE_LENGTH = 4
    3: DATE_LENGTH = 6
    4: SEX_LENGTH = 1
    5: LINE_LENGTH = 44
    6: 
--------------------------------------------------------------------------------
[0.00101 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [#  88] CRP MRTD: 
--------------------------------------------------------------------------------
    1: PASSPORT_LENGTH = 9
    2: COUNTRY_CODE_LENGTH = 3
-   3: DATE_LENGTH = 6
+   3: DATE_LENGTH = 7
    4: SEX_LENGTH = 1
    5: LINE_LENGTH = 44
    6: 
    7: 
--------------------------------------------------------------------------------
[0.00101 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [#  89] CRP MRTD: 
--------------------------------------------------------------------------------
    1: PASSPORT_LENGTH = 9
    2: COUNTRY_CODE_LENGTH = 3
    3: DATE_LENGTH = 6
-   4: SEX_LENGTH = 1
+   4: SEX_LENGTH = 2
    5: LINE_LENGTH = 44
    6: 
    7: 
    8: 
--------------------------------------------------------------------------------
[0.00099 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [#  90] CRP MRTD: 
--------------------------------------------------------------------------------
    1: PASSPORT_LENGTH = 9
    2: COUNTRY_CODE_LENGTH = 3
    3: DATE_LENGTH = 6
    4: SEX_LENGTH = 1
-   5: LINE_LENGTH = 44
+   5: LINE_LENGTH = 45
    6: 
    7: 
    8: 
    9: class TravelData:
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [#  91] CRP MRTD: 
--------------------------------------------------------------------------------
   94:     try:
   95:         int(i)
   96:         return int(i)
   97:     except ValueError:
-  98:         if (str(i) >= 'A' and str(i) <= 'Z'):
+  98:         if (str(i) >= 'mutpy' and str(i) <= 'Z'):
   99:             return int(ord(str(i)) - 55)
  100:         else:
  101:             return 0
  102: 
--------------------------------------------------------------------------------
[0.00000 s] killed by testCalculateCheck (MRTDtest.TestMRTD)
   - [#  92] CRP MRTD: 
--------------------------------------------------------------------------------
   94:     try:
   95:         int(i)
   96:         return int(i)
   97:     except ValueError:
-  98:         if (str(i) >= 'A' and str(i) <= 'Z'):
+  98:         if (str(i) >= '' and str(i) <= 'Z'):
   99:             return int(ord(str(i)) - 55)
  100:         else:
  101:             return 0
  102: 
--------------------------------------------------------------------------------
[0.00099 s] killed by testCalculateCheck (MRTDtest.TestMRTD)
   - [#  93] CRP MRTD: 
--------------------------------------------------------------------------------
   94:     try:
   95:         int(i)
   96:         return int(i)
   97:     except ValueError:
-  98:         if (str(i) >= 'A' and str(i) <= 'Z'):
+  98:         if (str(i) >= 'A' and str(i) <= 'mutpy'):
   99:             return int(ord(str(i)) - 55)
  100:         else:
  101:             return 0
  102: 
--------------------------------------------------------------------------------
[0.00199 s] survived
   - [#  94] CRP MRTD: 
--------------------------------------------------------------------------------
   94:     try:
   95:         int(i)
   96:         return int(i)
   97:     except ValueError:
-  98:         if (str(i) >= 'A' and str(i) <= 'Z'):
+  98:         if (str(i) >= 'A' and str(i) <= ''):
   99:             return int(ord(str(i)) - 55)
  100:         else:
  101:             return 0
  102: 
--------------------------------------------------------------------------------
[0.00105 s] killed by testCalculateCheck (MRTDtest.TestMRTD)
   - [#  95] CRP MRTD: 
--------------------------------------------------------------------------------
   95:         int(i)
   96:         return int(i)
   97:     except ValueError:
   98:         if (str(i) >= 'A' and str(i) <= 'Z'):
-  99:             return int(ord(str(i)) - 55)
+  99:             return int(ord(str(i)) - 56)
  100:         else:
  101:             return 0
  102: 
  103: def calculateCheck(lst):
--------------------------------------------------------------------------------
[0.00099 s] killed by testCalculateCheck (MRTDtest.TestMRTD)
   - [#  96] CRP MRTD: 
--------------------------------------------------------------------------------
   97:     except ValueError:
   98:         if (str(i) >= 'A' and str(i) <= 'Z'):
   99:             return int(ord(str(i)) - 55)
  100:         else:
- 101:             return 0
+ 101:             return 1
  102: 
  103: def calculateCheck(lst):
  104:     weights = [7, 3, 1]
  105:     weightIdx = 0
--------------------------------------------------------------------------------
[0.00100 s] killed by testCalculateCheck (MRTDtest.TestMRTD)
   - [#  97] CRP MRTD: 
--------------------------------------------------------------------------------
  100:         else:
  101:             return 0
  102: 
  103: def calculateCheck(lst):
- 104:     weights = [7, 3, 1]
+ 104:     weights = [8, 3, 1]
  105:     weightIdx = 0
  106:     total = 0
  107:     
  108:     for i in lst:
--------------------------------------------------------------------------------
[0.00100 s] killed by testCalculateCheck (MRTDtest.TestMRTD)
   - [#  98] CRP MRTD: 
--------------------------------------------------------------------------------
  100:         else:
  101:             return 0
  102: 
  103: def calculateCheck(lst):
- 104:     weights = [7, 3, 1]
+ 104:     weights = [7, 4, 1]
  105:     weightIdx = 0
  106:     total = 0
  107:     
  108:     for i in lst:
--------------------------------------------------------------------------------
[0.00000 s] killed by testCalculateCheck (MRTDtest.TestMRTD)
   - [#  99] CRP MRTD: 
--------------------------------------------------------------------------------
  100:         else:
  101:             return 0
  102: 
  103: def calculateCheck(lst):
- 104:     weights = [7, 3, 1]
+ 104:     weights = [7, 3, 2]
  105:     weightIdx = 0
  106:     total = 0
  107:     
  108:     for i in lst:
--------------------------------------------------------------------------------
[0.00099 s] killed by testCalculateCheck (MRTDtest.TestMRTD)
   - [# 100] CRP MRTD: 
--------------------------------------------------------------------------------
  101:             return 0
  102: 
  103: def calculateCheck(lst):
  104:     weights = [7, 3, 1]
- 105:     weightIdx = 0
+ 105:     weightIdx = 1
  106:     total = 0
  107:     
  108:     for i in lst:
  109:         numVal = getNumericalValue(i)
--------------------------------------------------------------------------------
[0.00100 s] killed by testCalculateCheck (MRTDtest.TestMRTD)
   - [# 101] CRP MRTD: 
--------------------------------------------------------------------------------
  102: 
  103: def calculateCheck(lst):
  104:     weights = [7, 3, 1]
  105:     weightIdx = 0
- 106:     total = 0
+ 106:     total = 1
  107:     
  108:     for i in lst:
  109:         numVal = getNumericalValue(i)
  110:         total += numVal * weights[weightIdx]
--------------------------------------------------------------------------------
[0.00100 s] killed by testCalculateCheck (MRTDtest.TestMRTD)
   - [# 102] CRP MRTD: 
--------------------------------------------------------------------------------
  107:     
  108:     for i in lst:
  109:         numVal = getNumericalValue(i)
  110:         total += numVal * weights[weightIdx]
- 111:         weightIdx = (weightIdx + 1) % len(weights)
+ 111:         weightIdx = (weightIdx + 2) % len(weights)
  112:     return total % 10
  113: 
  114: def validateDate(date):
  115:     for char in date:
--------------------------------------------------------------------------------
[0.00000 s] killed by testCalculateCheck (MRTDtest.TestMRTD)
   - [# 103] CRP MRTD: 
--------------------------------------------------------------------------------
  108:     for i in lst:
  109:         numVal = getNumericalValue(i)
  110:         total += numVal * weights[weightIdx]
  111:         weightIdx = (weightIdx + 1) % len(weights)
- 112:     return total % 10
+ 112:     return total % 11
  113: 
  114: def validateDate(date):
  115:     for char in date:
  116:         if (char != '<' and (char < '0' or char > '9')):
--------------------------------------------------------------------------------
[0.00000 s] killed by testCalculateCheck (MRTDtest.TestMRTD)
   - [# 104] CRP MRTD: 
--------------------------------------------------------------------------------
  112:     return total % 10
  113: 
  114: def validateDate(date):
  115:     for char in date:
- 116:         if (char != '<' and (char < '0' or char > '9')):
+ 116:         if (char != 'mutpy' and (char < '0' or char > '9')):
  117:             raise Exception(('Invalid character ' + char) + ' in date')
  118: 
  119: 
  120: 
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ10 (MRTDtest.TestMRTD)
   - [# 105] CRP MRTD: 
--------------------------------------------------------------------------------
  112:     return total % 10
  113: 
  114: def validateDate(date):
  115:     for char in date:
- 116:         if (char != '<' and (char < '0' or char > '9')):
+ 116:         if (char != '' and (char < '0' or char > '9')):
  117:             raise Exception(('Invalid character ' + char) + ' in date')
  118: 
  119: 
  120: 
--------------------------------------------------------------------------------
[0.00109 s] killed by testDecodeMRZ10 (MRTDtest.TestMRTD)
   - [# 106] CRP MRTD: 
--------------------------------------------------------------------------------
  112:     return total % 10
  113: 
  114: def validateDate(date):
  115:     for char in date:
- 116:         if (char != '<' and (char < '0' or char > '9')):
+ 116:         if (char != '<' and (char < 'mutpy' or char > '9')):
  117:             raise Exception(('Invalid character ' + char) + ' in date')
  118: 
  119: 
  120: 
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 107] CRP MRTD: 
--------------------------------------------------------------------------------
  112:     return total % 10
  113: 
  114: def validateDate(date):
  115:     for char in date:
- 116:         if (char != '<' and (char < '0' or char > '9')):
+ 116:         if (char != '<' and (char < '' or char > '9')):
  117:             raise Exception(('Invalid character ' + char) + ' in date')
  118: 
  119: 
  120: 
--------------------------------------------------------------------------------
[0.00213 s] survived
   - [# 108] CRP MRTD: 
--------------------------------------------------------------------------------
  112:     return total % 10
  113: 
  114: def validateDate(date):
  115:     for char in date:
- 116:         if (char != '<' and (char < '0' or char > '9')):
+ 116:         if (char != '<' and (char < '0' or char > 'mutpy')):
  117:             raise Exception(('Invalid character ' + char) + ' in date')
  118: 
  119: 
  120: 
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ11 (MRTDtest.TestMRTD)
   - [# 109] CRP MRTD: 
--------------------------------------------------------------------------------
  112:     return total % 10
  113: 
  114: def validateDate(date):
  115:     for char in date:
- 116:         if (char != '<' and (char < '0' or char > '9')):
+ 116:         if (char != '<' and (char < '0' or char > '')):
  117:             raise Exception(('Invalid character ' + char) + ' in date')
  118: 
  119: 
  120: 
--------------------------------------------------------------------------------
[0.00199 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 110] CRP MRTD: 
--------------------------------------------------------------------------------
  113: 
  114: def validateDate(date):
  115:     for char in date:
  116:         if (char != '<' and (char < '0' or char > '9')):
- 117:             raise Exception(('Invalid character ' + char) + ' in date')
+ 117:             raise Exception(('mutpy' + char) + ' in date')
  118: 
  119: 
  120: 
  121: def scanMRZ():
--------------------------------------------------------------------------------
[0.00200 s] survived
   - [# 111] CRP MRTD: 
--------------------------------------------------------------------------------
  113: 
  114: def validateDate(date):
  115:     for char in date:
  116:         if (char != '<' and (char < '0' or char > '9')):
- 117:             raise Exception(('Invalid character ' + char) + ' in date')
+ 117:             raise Exception(('' + char) + ' in date')
  118: 
  119: 
  120: 
  121: def scanMRZ():
--------------------------------------------------------------------------------
[0.00300 s] survived
   - [# 112] CRP MRTD: 
--------------------------------------------------------------------------------
  113: 
  114: def validateDate(date):
  115:     for char in date:
  116:         if (char != '<' and (char < '0' or char > '9')):
- 117:             raise Exception(('Invalid character ' + char) + ' in date')
+ 117:             raise Exception(('Invalid character ' + char) + 'mutpy')
  118: 
  119: 
  120: 
  121: def scanMRZ():
--------------------------------------------------------------------------------
[0.00300 s] survived
   - [# 113] CRP MRTD: 
--------------------------------------------------------------------------------
  113: 
  114: def validateDate(date):
  115:     for char in date:
  116:         if (char != '<' and (char < '0' or char > '9')):
- 117:             raise Exception(('Invalid character ' + char) + ' in date')
+ 117:             raise Exception(('Invalid character ' + char) + '')
  118: 
  119: 
  120: 
  121: def scanMRZ():
--------------------------------------------------------------------------------
[0.00200 s] survived
   - [# 114] CRP MRTD: 
--------------------------------------------------------------------------------
  127: 
  128: def decodeMRZ():
  129:     (line1, line2) = scanMRZ()
  130:     if (len(line1) != LINE_LENGTH or len(line2) != LINE_LENGTH):
- 131:         raise Exception(('Lines must both be ' + str(LINE_LENGTH)) + ' characters.')
+ 131:         raise Exception(('mutpy' + str(LINE_LENGTH)) + ' characters.')
  132:     travelData = TravelData()
  133:     linePos = 0
  134:     
  135:     currentString = ''
--------------------------------------------------------------------------------
[0.00200 s] survived
   - [# 115] CRP MRTD: 
--------------------------------------------------------------------------------
  127: 
  128: def decodeMRZ():
  129:     (line1, line2) = scanMRZ()
  130:     if (len(line1) != LINE_LENGTH or len(line2) != LINE_LENGTH):
- 131:         raise Exception(('Lines must both be ' + str(LINE_LENGTH)) + ' characters.')
+ 131:         raise Exception(('' + str(LINE_LENGTH)) + ' characters.')
  132:     travelData = TravelData()
  133:     linePos = 0
  134:     
  135:     currentString = ''
--------------------------------------------------------------------------------
[0.00300 s] survived
   - [# 116] CRP MRTD: 
--------------------------------------------------------------------------------
  127: 
  128: def decodeMRZ():
  129:     (line1, line2) = scanMRZ()
  130:     if (len(line1) != LINE_LENGTH or len(line2) != LINE_LENGTH):
- 131:         raise Exception(('Lines must both be ' + str(LINE_LENGTH)) + ' characters.')
+ 131:         raise Exception(('Lines must both be ' + str(LINE_LENGTH)) + 'mutpy')
  132:     travelData = TravelData()
  133:     linePos = 0
  134:     
  135:     currentString = ''
--------------------------------------------------------------------------------
[0.00299 s] survived
   - [# 117] CRP MRTD: 
--------------------------------------------------------------------------------
  127: 
  128: def decodeMRZ():
  129:     (line1, line2) = scanMRZ()
  130:     if (len(line1) != LINE_LENGTH or len(line2) != LINE_LENGTH):
- 131:         raise Exception(('Lines must both be ' + str(LINE_LENGTH)) + ' characters.')
+ 131:         raise Exception(('Lines must both be ' + str(LINE_LENGTH)) + '')
  132:     travelData = TravelData()
  133:     linePos = 0
  134:     
  135:     currentString = ''
--------------------------------------------------------------------------------
[0.00199 s] survived
   - [# 118] CRP MRTD: 
--------------------------------------------------------------------------------
  129:     (line1, line2) = scanMRZ()
  130:     if (len(line1) != LINE_LENGTH or len(line2) != LINE_LENGTH):
  131:         raise Exception(('Lines must both be ' + str(LINE_LENGTH)) + ' characters.')
  132:     travelData = TravelData()
- 133:     linePos = 0
+ 133:     linePos = 1
  134:     
  135:     currentString = ''
  136:     travelData.docType = line1[linePos:linePos + 1]
  137:     linePos += 2
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 119] CRP MRTD: 
--------------------------------------------------------------------------------
  131:         raise Exception(('Lines must both be ' + str(LINE_LENGTH)) + ' characters.')
  132:     travelData = TravelData()
  133:     linePos = 0
  134:     
- 135:     currentString = ''
+ 135:     currentString = 'mutpy'
  136:     travelData.docType = line1[linePos:linePos + 1]
  137:     linePos += 2
  138:     travelData.issuingCountry = line1[linePos:linePos + 3]
  139:     linePos += 3
--------------------------------------------------------------------------------
[0.00101 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 120] CRP MRTD: 
--------------------------------------------------------------------------------
  132:     travelData = TravelData()
  133:     linePos = 0
  134:     
  135:     currentString = ''
- 136:     travelData.docType = line1[linePos:linePos + 1]
+ 136:     travelData.docType = line1[linePos:linePos + 2]
  137:     linePos += 2
  138:     travelData.issuingCountry = line1[linePos:linePos + 3]
  139:     linePos += 3
  140:     while line1[linePos] != '<':
--------------------------------------------------------------------------------
[0.00205 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 121] CRP MRTD: 
--------------------------------------------------------------------------------
  133:     linePos = 0
  134:     
  135:     currentString = ''
  136:     travelData.docType = line1[linePos:linePos + 1]
- 137:     linePos += 2
+ 137:     linePos += 3
  138:     travelData.issuingCountry = line1[linePos:linePos + 3]
  139:     linePos += 3
  140:     while line1[linePos] != '<':
  141:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 122] CRP MRTD: 
--------------------------------------------------------------------------------
  134:     
  135:     currentString = ''
  136:     travelData.docType = line1[linePos:linePos + 1]
  137:     linePos += 2
- 138:     travelData.issuingCountry = line1[linePos:linePos + 3]
+ 138:     travelData.issuingCountry = line1[linePos:linePos + 4]
  139:     linePos += 3
  140:     while line1[linePos] != '<':
  141:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
  142:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 123] CRP MRTD: 
--------------------------------------------------------------------------------
  135:     currentString = ''
  136:     travelData.docType = line1[linePos:linePos + 1]
  137:     linePos += 2
  138:     travelData.issuingCountry = line1[linePos:linePos + 3]
- 139:     linePos += 3
+ 139:     linePos += 4
  140:     while line1[linePos] != '<':
  141:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
  142:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  143:         currentString += line1[linePos]
--------------------------------------------------------------------------------
[0.00101 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 124] CRP MRTD: 
--------------------------------------------------------------------------------
  136:     travelData.docType = line1[linePos:linePos + 1]
  137:     linePos += 2
  138:     travelData.issuingCountry = line1[linePos:linePos + 3]
  139:     linePos += 3
- 140:     while line1[linePos] != '<':
+ 140:     while line1[linePos] != 'mutpy':
  141:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
  142:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  143:         currentString += line1[linePos]
  144:         linePos += 1
--------------------------------------------------------------------------------
[0.00099 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 125] CRP MRTD: 
--------------------------------------------------------------------------------
  136:     travelData.docType = line1[linePos:linePos + 1]
  137:     linePos += 2
  138:     travelData.issuingCountry = line1[linePos:linePos + 3]
  139:     linePos += 3
- 140:     while line1[linePos] != '<':
+ 140:     while line1[linePos] != '':
  141:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
  142:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  143:         currentString += line1[linePos]
  144:         linePos += 1
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 126] CRP MRTD: 
--------------------------------------------------------------------------------
  137:     linePos += 2
  138:     travelData.issuingCountry = line1[linePos:linePos + 3]
  139:     linePos += 3
  140:     while line1[linePos] != '<':
- 141:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
+ 141:         if (line1[linePos] < 'mutpy' or line1[linePos] > 'Z'):
  142:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  143:         currentString += line1[linePos]
  144:         linePos += 1
  145:     travelData.lastName = currentString
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 127] CRP MRTD: 
--------------------------------------------------------------------------------
  137:     linePos += 2
  138:     travelData.issuingCountry = line1[linePos:linePos + 3]
  139:     linePos += 3
  140:     while line1[linePos] != '<':
- 141:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
+ 141:         if (line1[linePos] < '' or line1[linePos] > 'Z'):
  142:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  143:         currentString += line1[linePos]
  144:         linePos += 1
  145:     travelData.lastName = currentString
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ6 (MRTDtest.TestMRTD)
   - [# 128] CRP MRTD: 
--------------------------------------------------------------------------------
  137:     linePos += 2
  138:     travelData.issuingCountry = line1[linePos:linePos + 3]
  139:     linePos += 3
  140:     while line1[linePos] != '<':
- 141:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
+ 141:         if (line1[linePos] < 'A' or line1[linePos] > 'mutpy'):
  142:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  143:         currentString += line1[linePos]
  144:         linePos += 1
  145:     travelData.lastName = currentString
--------------------------------------------------------------------------------
[0.00301 s] survived
   - [# 129] CRP MRTD: 
--------------------------------------------------------------------------------
  137:     linePos += 2
  138:     travelData.issuingCountry = line1[linePos:linePos + 3]
  139:     linePos += 3
  140:     while line1[linePos] != '<':
- 141:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
+ 141:         if (line1[linePos] < 'A' or line1[linePos] > ''):
  142:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  143:         currentString += line1[linePos]
  144:         linePos += 1
  145:     travelData.lastName = currentString
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 130] CRP MRTD: 
--------------------------------------------------------------------------------
  138:     travelData.issuingCountry = line1[linePos:linePos + 3]
  139:     linePos += 3
  140:     while line1[linePos] != '<':
  141:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
- 142:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
+ 142:             raise Exception(('mutpy' + line1[linePos]) + ' in last name')
  143:         currentString += line1[linePos]
  144:         linePos += 1
  145:     travelData.lastName = currentString
  146:     linePos += 2
--------------------------------------------------------------------------------
[0.00300 s] survived
   - [# 131] CRP MRTD: 
--------------------------------------------------------------------------------
  138:     travelData.issuingCountry = line1[linePos:linePos + 3]
  139:     linePos += 3
  140:     while line1[linePos] != '<':
  141:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
- 142:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
+ 142:             raise Exception(('' + line1[linePos]) + ' in last name')
  143:         currentString += line1[linePos]
  144:         linePos += 1
  145:     travelData.lastName = currentString
  146:     linePos += 2
--------------------------------------------------------------------------------
[0.00308 s] survived
   - [# 132] CRP MRTD: 
--------------------------------------------------------------------------------
  138:     travelData.issuingCountry = line1[linePos:linePos + 3]
  139:     linePos += 3
  140:     while line1[linePos] != '<':
  141:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
- 142:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
+ 142:             raise Exception(('Invalid character ' + line1[linePos]) + 'mutpy')
  143:         currentString += line1[linePos]
  144:         linePos += 1
  145:     travelData.lastName = currentString
  146:     linePos += 2
--------------------------------------------------------------------------------
[0.00201 s] survived
   - [# 133] CRP MRTD: 
--------------------------------------------------------------------------------
  138:     travelData.issuingCountry = line1[linePos:linePos + 3]
  139:     linePos += 3
  140:     while line1[linePos] != '<':
  141:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
- 142:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
+ 142:             raise Exception(('Invalid character ' + line1[linePos]) + '')
  143:         currentString += line1[linePos]
  144:         linePos += 1
  145:     travelData.lastName = currentString
  146:     linePos += 2
--------------------------------------------------------------------------------
[0.00210 s] survived
   - [# 134] CRP MRTD: 
--------------------------------------------------------------------------------
  140:     while line1[linePos] != '<':
  141:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
  142:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  143:         currentString += line1[linePos]
- 144:         linePos += 1
+ 144:         linePos += 2
  145:     travelData.lastName = currentString
  146:     linePos += 2
  147:     currentString = ''
  148:     while line1[linePos] != '<':
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 135] CRP MRTD: 
--------------------------------------------------------------------------------
  142:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  143:         currentString += line1[linePos]
  144:         linePos += 1
  145:     travelData.lastName = currentString
- 146:     linePos += 2
+ 146:     linePos += 3
  147:     currentString = ''
  148:     while line1[linePos] != '<':
  149:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
  150:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
--------------------------------------------------------------------------------
[0.00105 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 136] CRP MRTD: 
--------------------------------------------------------------------------------
  143:         currentString += line1[linePos]
  144:         linePos += 1
  145:     travelData.lastName = currentString
  146:     linePos += 2
- 147:     currentString = ''
+ 147:     currentString = 'mutpy'
  148:     while line1[linePos] != '<':
  149:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
  150:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  151:         currentString += line1[linePos]
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 137] CRP MRTD: 
--------------------------------------------------------------------------------
  144:         linePos += 1
  145:     travelData.lastName = currentString
  146:     linePos += 2
  147:     currentString = ''
- 148:     while line1[linePos] != '<':
+ 148:     while line1[linePos] != 'mutpy':
  149:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
  150:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  151:         currentString += line1[linePos]
  152:         linePos += 1
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 138] CRP MRTD: 
--------------------------------------------------------------------------------
  144:         linePos += 1
  145:     travelData.lastName = currentString
  146:     linePos += 2
  147:     currentString = ''
- 148:     while line1[linePos] != '<':
+ 148:     while line1[linePos] != '':
  149:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
  150:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  151:         currentString += line1[linePos]
  152:         linePos += 1
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 139] CRP MRTD: 
--------------------------------------------------------------------------------
  145:     travelData.lastName = currentString
  146:     linePos += 2
  147:     currentString = ''
  148:     while line1[linePos] != '<':
- 149:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
+ 149:         if (line1[linePos] < 'mutpy' or line1[linePos] > 'Z'):
  150:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  151:         currentString += line1[linePos]
  152:         linePos += 1
  153:     travelData.firstName = currentString
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 140] CRP MRTD: 
--------------------------------------------------------------------------------
  145:     travelData.lastName = currentString
  146:     linePos += 2
  147:     currentString = ''
  148:     while line1[linePos] != '<':
- 149:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
+ 149:         if (line1[linePos] < '' or line1[linePos] > 'Z'):
  150:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  151:         currentString += line1[linePos]
  152:         linePos += 1
  153:     travelData.firstName = currentString
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ7 (MRTDtest.TestMRTD)
   - [# 141] CRP MRTD: 
--------------------------------------------------------------------------------
  145:     travelData.lastName = currentString
  146:     linePos += 2
  147:     currentString = ''
  148:     while line1[linePos] != '<':
- 149:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
+ 149:         if (line1[linePos] < 'A' or line1[linePos] > 'mutpy'):
  150:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  151:         currentString += line1[linePos]
  152:         linePos += 1
  153:     travelData.firstName = currentString
--------------------------------------------------------------------------------
[0.00306 s] survived
   - [# 142] CRP MRTD: 
--------------------------------------------------------------------------------
  145:     travelData.lastName = currentString
  146:     linePos += 2
  147:     currentString = ''
  148:     while line1[linePos] != '<':
- 149:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
+ 149:         if (line1[linePos] < 'A' or line1[linePos] > ''):
  150:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  151:         currentString += line1[linePos]
  152:         linePos += 1
  153:     travelData.firstName = currentString
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 143] CRP MRTD: 
--------------------------------------------------------------------------------
  146:     linePos += 2
  147:     currentString = ''
  148:     while line1[linePos] != '<':
  149:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
- 150:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
+ 150:             raise Exception(('mutpy' + line1[linePos]) + ' in first name')
  151:         currentString += line1[linePos]
  152:         linePos += 1
  153:     travelData.firstName = currentString
  154:     linePos += 1
--------------------------------------------------------------------------------
[0.00206 s] survived
   - [# 144] CRP MRTD: 
--------------------------------------------------------------------------------
  146:     linePos += 2
  147:     currentString = ''
  148:     while line1[linePos] != '<':
  149:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
- 150:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
+ 150:             raise Exception(('' + line1[linePos]) + ' in first name')
  151:         currentString += line1[linePos]
  152:         linePos += 1
  153:     travelData.firstName = currentString
  154:     linePos += 1
--------------------------------------------------------------------------------
[0.00300 s] survived
   - [# 145] CRP MRTD: 
--------------------------------------------------------------------------------
  146:     linePos += 2
  147:     currentString = ''
  148:     while line1[linePos] != '<':
  149:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
- 150:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
+ 150:             raise Exception(('Invalid character ' + line1[linePos]) + 'mutpy')
  151:         currentString += line1[linePos]
  152:         linePos += 1
  153:     travelData.firstName = currentString
  154:     linePos += 1
--------------------------------------------------------------------------------
[0.00300 s] survived
   - [# 146] CRP MRTD: 
--------------------------------------------------------------------------------
  146:     linePos += 2
  147:     currentString = ''
  148:     while line1[linePos] != '<':
  149:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
- 150:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
+ 150:             raise Exception(('Invalid character ' + line1[linePos]) + '')
  151:         currentString += line1[linePos]
  152:         linePos += 1
  153:     travelData.firstName = currentString
  154:     linePos += 1
--------------------------------------------------------------------------------
[0.00200 s] survived
   - [# 147] CRP MRTD: 
--------------------------------------------------------------------------------
  148:     while line1[linePos] != '<':
  149:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
  150:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  151:         currentString += line1[linePos]
- 152:         linePos += 1
+ 152:         linePos += 2
  153:     travelData.firstName = currentString
  154:     linePos += 1
  155:     currentString = ''
  156:     while line1[linePos] != '<':
--------------------------------------------------------------------------------
[0.00101 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 148] CRP MRTD: 
--------------------------------------------------------------------------------
  150:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  151:         currentString += line1[linePos]
  152:         linePos += 1
  153:     travelData.firstName = currentString
- 154:     linePos += 1
+ 154:     linePos += 2
  155:     currentString = ''
  156:     while line1[linePos] != '<':
  157:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
  158:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
--------------------------------------------------------------------------------
[0.00199 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 149] CRP MRTD: 
--------------------------------------------------------------------------------
  151:         currentString += line1[linePos]
  152:         linePos += 1
  153:     travelData.firstName = currentString
  154:     linePos += 1
- 155:     currentString = ''
+ 155:     currentString = 'mutpy'
  156:     while line1[linePos] != '<':
  157:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
  158:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  159:         currentString += line1[linePos]
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 150] CRP MRTD: 
--------------------------------------------------------------------------------
  152:         linePos += 1
  153:     travelData.firstName = currentString
  154:     linePos += 1
  155:     currentString = ''
- 156:     while line1[linePos] != '<':
+ 156:     while line1[linePos] != 'mutpy':
  157:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
  158:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  159:         currentString += line1[linePos]
  160:         linePos += 1
--------------------------------------------------------------------------------
[0.00101 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 151] CRP MRTD: 
--------------------------------------------------------------------------------
  152:         linePos += 1
  153:     travelData.firstName = currentString
  154:     linePos += 1
  155:     currentString = ''
- 156:     while line1[linePos] != '<':
+ 156:     while line1[linePos] != '':
  157:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
  158:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  159:         currentString += line1[linePos]
  160:         linePos += 1
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 152] CRP MRTD: 
--------------------------------------------------------------------------------
  153:     travelData.firstName = currentString
  154:     linePos += 1
  155:     currentString = ''
  156:     while line1[linePos] != '<':
- 157:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
+ 157:         if (line1[linePos] < 'mutpy' or line1[linePos] > 'Z'):
  158:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  159:         currentString += line1[linePos]
  160:         linePos += 1
  161:     travelData.middleName = currentString
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 153] CRP MRTD: 
--------------------------------------------------------------------------------
  153:     travelData.firstName = currentString
  154:     linePos += 1
  155:     currentString = ''
  156:     while line1[linePos] != '<':
- 157:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
+ 157:         if (line1[linePos] < '' or line1[linePos] > 'Z'):
  158:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  159:         currentString += line1[linePos]
  160:         linePos += 1
  161:     travelData.middleName = currentString
--------------------------------------------------------------------------------
[0.00303 s] killed by testDecodeMRZ8 (MRTDtest.TestMRTD)
   - [# 154] CRP MRTD: 
--------------------------------------------------------------------------------
  153:     travelData.firstName = currentString
  154:     linePos += 1
  155:     currentString = ''
  156:     while line1[linePos] != '<':
- 157:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
+ 157:         if (line1[linePos] < 'A' or line1[linePos] > 'mutpy'):
  158:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  159:         currentString += line1[linePos]
  160:         linePos += 1
  161:     travelData.middleName = currentString
--------------------------------------------------------------------------------
[0.00201 s] survived
   - [# 155] CRP MRTD: 
--------------------------------------------------------------------------------
  153:     travelData.firstName = currentString
  154:     linePos += 1
  155:     currentString = ''
  156:     while line1[linePos] != '<':
- 157:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
+ 157:         if (line1[linePos] < 'A' or line1[linePos] > ''):
  158:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  159:         currentString += line1[linePos]
  160:         linePos += 1
  161:     travelData.middleName = currentString
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 156] CRP MRTD: 
--------------------------------------------------------------------------------
  154:     linePos += 1
  155:     currentString = ''
  156:     while line1[linePos] != '<':
  157:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
- 158:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
+ 158:             raise Exception(('mutpy' + line1[linePos]) + ' in middle name')
  159:         currentString += line1[linePos]
  160:         linePos += 1
  161:     travelData.middleName = currentString
  162:     currentString = ''
--------------------------------------------------------------------------------
[0.00199 s] survived
   - [# 157] CRP MRTD: 
--------------------------------------------------------------------------------
  154:     linePos += 1
  155:     currentString = ''
  156:     while line1[linePos] != '<':
  157:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
- 158:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
+ 158:             raise Exception(('' + line1[linePos]) + ' in middle name')
  159:         currentString += line1[linePos]
  160:         linePos += 1
  161:     travelData.middleName = currentString
  162:     currentString = ''
--------------------------------------------------------------------------------
[0.00309 s] survived
   - [# 158] CRP MRTD: 
--------------------------------------------------------------------------------
  154:     linePos += 1
  155:     currentString = ''
  156:     while line1[linePos] != '<':
  157:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
- 158:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
+ 158:             raise Exception(('Invalid character ' + line1[linePos]) + 'mutpy')
  159:         currentString += line1[linePos]
  160:         linePos += 1
  161:     travelData.middleName = currentString
  162:     currentString = ''
--------------------------------------------------------------------------------
[0.00302 s] survived
   - [# 159] CRP MRTD: 
--------------------------------------------------------------------------------
  154:     linePos += 1
  155:     currentString = ''
  156:     while line1[linePos] != '<':
  157:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
- 158:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
+ 158:             raise Exception(('Invalid character ' + line1[linePos]) + '')
  159:         currentString += line1[linePos]
  160:         linePos += 1
  161:     travelData.middleName = currentString
  162:     currentString = ''
--------------------------------------------------------------------------------
[0.00300 s] survived
   - [# 160] CRP MRTD: 
--------------------------------------------------------------------------------
  156:     while line1[linePos] != '<':
  157:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
  158:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  159:         currentString += line1[linePos]
- 160:         linePos += 1
+ 160:         linePos += 2
  161:     travelData.middleName = currentString
  162:     currentString = ''
  163:     
  164:     
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 161] CRP MRTD: 
--------------------------------------------------------------------------------
  158:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  159:         currentString += line1[linePos]
  160:         linePos += 1
  161:     travelData.middleName = currentString
- 162:     currentString = ''
+ 162:     currentString = 'mutpy'
  163:     
  164:     
  165:     
  166:     linePos = 0
--------------------------------------------------------------------------------
[0.00301 s] survived
   - [# 162] CRP MRTD: 
--------------------------------------------------------------------------------
  162:     currentString = ''
  163:     
  164:     
  165:     
- 166:     linePos = 0
+ 166:     linePos = 1
  167:     travelData.passportNo = line2[linePos:PASSPORT_LENGTH]
  168:     linePos += PASSPORT_LENGTH
  169:     travelData.passportCheck = line2[linePos:linePos + 1]
  170:     linePos += 1
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 163] CRP MRTD: 
--------------------------------------------------------------------------------
  165:     
  166:     linePos = 0
  167:     travelData.passportNo = line2[linePos:PASSPORT_LENGTH]
  168:     linePos += PASSPORT_LENGTH
- 169:     travelData.passportCheck = line2[linePos:linePos + 1]
+ 169:     travelData.passportCheck = line2[linePos:linePos + 2]
  170:     linePos += 1
  171:     travelData.countryCode = line2[linePos:linePos + COUNTRY_CODE_LENGTH]
  172:     linePos += COUNTRY_CODE_LENGTH
  173:     travelData.birthday = line2[linePos:linePos + DATE_LENGTH]
--------------------------------------------------------------------------------
[0.00089 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 164] CRP MRTD: 
--------------------------------------------------------------------------------
  166:     linePos = 0
  167:     travelData.passportNo = line2[linePos:PASSPORT_LENGTH]
  168:     linePos += PASSPORT_LENGTH
  169:     travelData.passportCheck = line2[linePos:linePos + 1]
- 170:     linePos += 1
+ 170:     linePos += 2
  171:     travelData.countryCode = line2[linePos:linePos + COUNTRY_CODE_LENGTH]
  172:     linePos += COUNTRY_CODE_LENGTH
  173:     travelData.birthday = line2[linePos:linePos + DATE_LENGTH]
  174:     validateDate(travelData.birthday)
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 165] CRP MRTD: 
--------------------------------------------------------------------------------
  172:     linePos += COUNTRY_CODE_LENGTH
  173:     travelData.birthday = line2[linePos:linePos + DATE_LENGTH]
  174:     validateDate(travelData.birthday)
  175:     linePos += DATE_LENGTH
- 176:     travelData.birthdayCheck = line2[linePos:linePos + 1]
+ 176:     travelData.birthdayCheck = line2[linePos:linePos + 2]
  177:     linePos += 1
  178:     travelData.sex = line2[linePos:linePos + SEX_LENGTH]
  179:     linePos += 1
  180:     travelData.expirationDate = line2[linePos:linePos + DATE_LENGTH]
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 166] CRP MRTD: 
--------------------------------------------------------------------------------
  173:     travelData.birthday = line2[linePos:linePos + DATE_LENGTH]
  174:     validateDate(travelData.birthday)
  175:     linePos += DATE_LENGTH
  176:     travelData.birthdayCheck = line2[linePos:linePos + 1]
- 177:     linePos += 1
+ 177:     linePos += 2
  178:     travelData.sex = line2[linePos:linePos + SEX_LENGTH]
  179:     linePos += 1
  180:     travelData.expirationDate = line2[linePos:linePos + DATE_LENGTH]
  181:     validateDate(travelData.expirationDate)
--------------------------------------------------------------------------------
[0.00210 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 167] CRP MRTD: 
--------------------------------------------------------------------------------
  175:     linePos += DATE_LENGTH
  176:     travelData.birthdayCheck = line2[linePos:linePos + 1]
  177:     linePos += 1
  178:     travelData.sex = line2[linePos:linePos + SEX_LENGTH]
- 179:     linePos += 1
+ 179:     linePos += 2
  180:     travelData.expirationDate = line2[linePos:linePos + DATE_LENGTH]
  181:     validateDate(travelData.expirationDate)
  182:     linePos += DATE_LENGTH
  183:     travelData.expirationCheck = line2[linePos:linePos + 1]
--------------------------------------------------------------------------------
[0.00101 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 168] CRP MRTD: 
--------------------------------------------------------------------------------
  179:     linePos += 1
  180:     travelData.expirationDate = line2[linePos:linePos + DATE_LENGTH]
  181:     validateDate(travelData.expirationDate)
  182:     linePos += DATE_LENGTH
- 183:     travelData.expirationCheck = line2[linePos:linePos + 1]
+ 183:     travelData.expirationCheck = line2[linePos:linePos + 2]
  184:     linePos += 1
  185:     travelData.personalNo = line2[linePos:len(line2) - 1]
  186:     linePos = len(line2) - 1
  187:     travelData.personalNoCheck = line2[linePos]
--------------------------------------------------------------------------------
[0.00099 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 169] CRP MRTD: 
--------------------------------------------------------------------------------
  180:     travelData.expirationDate = line2[linePos:linePos + DATE_LENGTH]
  181:     validateDate(travelData.expirationDate)
  182:     linePos += DATE_LENGTH
  183:     travelData.expirationCheck = line2[linePos:linePos + 1]
- 184:     linePos += 1
+ 184:     linePos += 2
  185:     travelData.personalNo = line2[linePos:len(line2) - 1]
  186:     linePos = len(line2) - 1
  187:     travelData.personalNoCheck = line2[linePos]
  188:     linePos += 1
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 170] CRP MRTD: 
--------------------------------------------------------------------------------
  181:     validateDate(travelData.expirationDate)
  182:     linePos += DATE_LENGTH
  183:     travelData.expirationCheck = line2[linePos:linePos + 1]
  184:     linePos += 1
- 185:     travelData.personalNo = line2[linePos:len(line2) - 1]
+ 185:     travelData.personalNo = line2[linePos:len(line2) - 2]
  186:     linePos = len(line2) - 1
  187:     travelData.personalNoCheck = line2[linePos]
  188:     linePos += 1
  189:     return travelData
--------------------------------------------------------------------------------
[0.00201 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 171] CRP MRTD: 
--------------------------------------------------------------------------------
  182:     linePos += DATE_LENGTH
  183:     travelData.expirationCheck = line2[linePos:linePos + 1]
  184:     linePos += 1
  185:     travelData.personalNo = line2[linePos:len(line2) - 1]
- 186:     linePos = len(line2) - 1
+ 186:     linePos = len(line2) - 2
  187:     travelData.personalNoCheck = line2[linePos]
  188:     linePos += 1
  189:     return travelData
  190: 
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 172] CRP MRTD: 
--------------------------------------------------------------------------------
  184:     linePos += 1
  185:     travelData.personalNo = line2[linePos:len(line2) - 1]
  186:     linePos = len(line2) - 1
  187:     travelData.personalNoCheck = line2[linePos]
- 188:     linePos += 1
+ 188:     linePos += 2
  189:     return travelData
  190: 
  191: 
  192: 
--------------------------------------------------------------------------------
[0.00200 s] survived
   - [# 173] CRP MRTD: 
--------------------------------------------------------------------------------
  197: 
  198: def encodeMRZ(personalNo):
  199:     data = getTravelDataFromDB(personalNo)
  200:     
- 201:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
+ 201:     line1 = ((((((data.docType + 'mutpy') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
  202:     if len(line1) > LINE_LENGTH:
  203:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
  204:     while len(line1) < LINE_LENGTH:
  205:         line1 += '<'
--------------------------------------------------------------------------------
[0.00201 s] killed by testEncodeMRZ (MRTDtest.TestMRTD)
   - [# 174] CRP MRTD: 
--------------------------------------------------------------------------------
  197: 
  198: def encodeMRZ(personalNo):
  199:     data = getTravelDataFromDB(personalNo)
  200:     
- 201:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
+ 201:     line1 = ((((((data.docType + '') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
  202:     if len(line1) > LINE_LENGTH:
  203:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
  204:     while len(line1) < LINE_LENGTH:
  205:         line1 += '<'
--------------------------------------------------------------------------------
[0.00301 s] killed by testEncodeMRZ (MRTDtest.TestMRTD)
   - [# 175] CRP MRTD: 
--------------------------------------------------------------------------------
  197: 
  198: def encodeMRZ(personalNo):
  199:     data = getTravelDataFromDB(personalNo)
  200:     
- 201:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
+ 201:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + 'mutpy') + data.firstName) + '<') + data.middleName
  202:     if len(line1) > LINE_LENGTH:
  203:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
  204:     while len(line1) < LINE_LENGTH:
  205:         line1 += '<'
--------------------------------------------------------------------------------
[0.00307 s] killed by testEncodeMRZ (MRTDtest.TestMRTD)
   - [# 176] CRP MRTD: 
--------------------------------------------------------------------------------
  197: 
  198: def encodeMRZ(personalNo):
  199:     data = getTravelDataFromDB(personalNo)
  200:     
- 201:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
+ 201:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '') + data.firstName) + '<') + data.middleName
  202:     if len(line1) > LINE_LENGTH:
  203:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
  204:     while len(line1) < LINE_LENGTH:
  205:         line1 += '<'
--------------------------------------------------------------------------------
[0.00413 s] killed by testEncodeMRZ (MRTDtest.TestMRTD)
   - [# 177] CRP MRTD: 
--------------------------------------------------------------------------------
  197: 
  198: def encodeMRZ(personalNo):
  199:     data = getTravelDataFromDB(personalNo)
  200:     
- 201:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
+ 201:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + 'mutpy') + data.middleName
  202:     if len(line1) > LINE_LENGTH:
  203:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
  204:     while len(line1) < LINE_LENGTH:
  205:         line1 += '<'
--------------------------------------------------------------------------------
[0.00400 s] killed by testEncodeMRZ (MRTDtest.TestMRTD)
   - [# 178] CRP MRTD: 
--------------------------------------------------------------------------------
  197: 
  198: def encodeMRZ(personalNo):
  199:     data = getTravelDataFromDB(personalNo)
  200:     
- 201:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
+ 201:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '') + data.middleName
  202:     if len(line1) > LINE_LENGTH:
  203:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
  204:     while len(line1) < LINE_LENGTH:
  205:         line1 += '<'
--------------------------------------------------------------------------------
[0.00308 s] killed by testEncodeMRZ (MRTDtest.TestMRTD)
   - [# 179] CRP MRTD: 
--------------------------------------------------------------------------------
  199:     data = getTravelDataFromDB(personalNo)
  200:     
  201:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
  202:     if len(line1) > LINE_LENGTH:
- 203:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
+ 203:         raise Exception(('mutpy' + str(LINE_LENGTH)) + ' characters.')
  204:     while len(line1) < LINE_LENGTH:
  205:         line1 += '<'
  206:     
  207:     
--------------------------------------------------------------------------------
[0.00301 s] survived
   - [# 180] CRP MRTD: 
--------------------------------------------------------------------------------
  199:     data = getTravelDataFromDB(personalNo)
  200:     
  201:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
  202:     if len(line1) > LINE_LENGTH:
- 203:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
+ 203:         raise Exception(('' + str(LINE_LENGTH)) + ' characters.')
  204:     while len(line1) < LINE_LENGTH:
  205:         line1 += '<'
  206:     
  207:     
--------------------------------------------------------------------------------
[0.01817 s] survived
   - [# 181] CRP MRTD: 
--------------------------------------------------------------------------------
  199:     data = getTravelDataFromDB(personalNo)
  200:     
  201:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
  202:     if len(line1) > LINE_LENGTH:
- 203:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
+ 203:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + 'mutpy')
  204:     while len(line1) < LINE_LENGTH:
  205:         line1 += '<'
  206:     
  207:     
--------------------------------------------------------------------------------
[0.00194 s] survived
   - [# 182] CRP MRTD: 
--------------------------------------------------------------------------------
  199:     data = getTravelDataFromDB(personalNo)
  200:     
  201:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
  202:     if len(line1) > LINE_LENGTH:
- 203:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
+ 203:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + '')
  204:     while len(line1) < LINE_LENGTH:
  205:         line1 += '<'
  206:     
  207:     
--------------------------------------------------------------------------------
[0.00200 s] survived
   - [# 183] CRP MRTD: 
--------------------------------------------------------------------------------
  201:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
  202:     if len(line1) > LINE_LENGTH:
  203:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
  204:     while len(line1) < LINE_LENGTH:
- 205:         line1 += '<'
+ 205:         line1 += 'mutpy'
  206:     
  207:     
  208:     line2 = ((((((((data.passportNo + data.passportCheck) + data.countryCode) + data.birthday) + data.birthdayCheck) + data.sex) + data.expirationDate) + data.expirationCheck) + data.personalNo) + data.personalNoCheck
  209:     
--------------------------------------------------------------------------------
[0.00300 s] killed by testEncodeMRZ (MRTDtest.TestMRTD)
   - [# 184] CRP MRTD: 
--------------------------------------------------------------------------------
  201:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
  202:     if len(line1) > LINE_LENGTH:
  203:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
  204:     while len(line1) < LINE_LENGTH:
- 205:         line1 += '<'
+ 205:         line1 += ''
  206:     
  207:     
  208:     line2 = ((((((((data.passportNo + data.passportCheck) + data.countryCode) + data.birthday) + data.birthdayCheck) + data.sex) + data.expirationDate) + data.expirationCheck) + data.personalNo) + data.personalNoCheck
  209:     
--------------------------------------------------------------------------------
[5.02764 s] timeout
   - [# 185] CRP MRTD: 
--------------------------------------------------------------------------------
  207:     
  208:     line2 = ((((((((data.passportNo + data.passportCheck) + data.countryCode) + data.birthday) + data.birthdayCheck) + data.sex) + data.expirationDate) + data.expirationCheck) + data.personalNo) + data.personalNoCheck
  209:     
  210:     if len(line2) != LINE_LENGTH:
- 211:         raise Exception(('Second line is not ' + str(LINE_LENGTH)) + ' characters.')
+ 211:         raise Exception(('mutpy' + str(LINE_LENGTH)) + ' characters.')
  212:     return (line1, line2)
  213: 
  214: 
  215: 
--------------------------------------------------------------------------------
[0.00299 s] survived
   - [# 186] CRP MRTD: 
--------------------------------------------------------------------------------
  207:     
  208:     line2 = ((((((((data.passportNo + data.passportCheck) + data.countryCode) + data.birthday) + data.birthdayCheck) + data.sex) + data.expirationDate) + data.expirationCheck) + data.personalNo) + data.personalNoCheck
  209:     
  210:     if len(line2) != LINE_LENGTH:
- 211:         raise Exception(('Second line is not ' + str(LINE_LENGTH)) + ' characters.')
+ 211:         raise Exception(('' + str(LINE_LENGTH)) + ' characters.')
  212:     return (line1, line2)
  213: 
  214: 
  215: 
--------------------------------------------------------------------------------
[0.00300 s] survived
   - [# 187] CRP MRTD: 
--------------------------------------------------------------------------------
  207:     
  208:     line2 = ((((((((data.passportNo + data.passportCheck) + data.countryCode) + data.birthday) + data.birthdayCheck) + data.sex) + data.expirationDate) + data.expirationCheck) + data.personalNo) + data.personalNoCheck
  209:     
  210:     if len(line2) != LINE_LENGTH:
- 211:         raise Exception(('Second line is not ' + str(LINE_LENGTH)) + ' characters.')
+ 211:         raise Exception(('Second line is not ' + str(LINE_LENGTH)) + 'mutpy')
  212:     return (line1, line2)
  213: 
  214: 
  215: 
--------------------------------------------------------------------------------
[0.00299 s] survived
   - [# 188] CRP MRTD: 
--------------------------------------------------------------------------------
  207:     
  208:     line2 = ((((((((data.passportNo + data.passportCheck) + data.countryCode) + data.birthday) + data.birthdayCheck) + data.sex) + data.expirationDate) + data.expirationCheck) + data.personalNo) + data.personalNoCheck
  209:     
  210:     if len(line2) != LINE_LENGTH:
- 211:         raise Exception(('Second line is not ' + str(LINE_LENGTH)) + ' characters.')
+ 211:         raise Exception(('Second line is not ' + str(LINE_LENGTH)) + '')
  212:     return (line1, line2)
  213: 
  214: 
  215: 
--------------------------------------------------------------------------------
[0.00200 s] survived
   - [# 189] EHD MRTD: 
--------------------------------------------------------------------------------
   94:     try:
   95:         int(i)
   96:         return int(i)
   97:     except ValueError:
-  98:         if (str(i) >= 'A' and str(i) <= 'Z'):
-  99:             return int(ord(str(i)) - 55)
- 100:         else:
- 101:             return 0
+  98:         raise
+  99: 
+ 100: 
+ 101: 
  102: 
  103: def calculateCheck(lst):
  104:     weights = [7, 3, 1]
  105:     weightIdx = 0
--------------------------------------------------------------------------------
[0.00099 s] killed by testCalculateCheck (MRTDtest.TestMRTD)
   - [# 190] EXS MRTD: 
--------------------------------------------------------------------------------
   94:     try:
   95:         int(i)
   96:         return int(i)
   97:     except ValueError:
-  98:         if (str(i) >= 'A' and str(i) <= 'Z'):
-  99:             return int(ord(str(i)) - 55)
- 100:         else:
- 101:             return 0
+  98:         pass
+  99: 
+ 100: 
+ 101: 
  102: 
  103: def calculateCheck(lst):
  104:     weights = [7, 3, 1]
  105:     weightIdx = 0
--------------------------------------------------------------------------------
[0.00300 s] incompetent
   - [# 191] LCR MRTD: 
--------------------------------------------------------------------------------
   94:     try:
   95:         int(i)
   96:         return int(i)
   97:     except ValueError:
-  98:         if (str(i) >= 'A' and str(i) <= 'Z'):
+  98:         if (str(i) >= 'A' or str(i) <= 'Z'):
   99:             return int(ord(str(i)) - 55)
  100:         else:
  101:             return 0
  102: 
--------------------------------------------------------------------------------
[0.00101 s] killed by testCalculateCheck (MRTDtest.TestMRTD)
   - [# 192] LCR MRTD: 
--------------------------------------------------------------------------------
  112:     return total % 10
  113: 
  114: def validateDate(date):
  115:     for char in date:
- 116:         if (char != '<' and (char < '0' or char > '9')):
+ 116:         if (char != '<' or (char < '0' or char > '9')):
  117:             raise Exception(('Invalid character ' + char) + ' in date')
  118: 
  119: 
  120: 
--------------------------------------------------------------------------------
[0.00105 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 193] LCR MRTD: 
--------------------------------------------------------------------------------
  112:     return total % 10
  113: 
  114: def validateDate(date):
  115:     for char in date:
- 116:         if (char != '<' and (char < '0' or char > '9')):
+ 116:         if (char != '<' and (char < '0' and char > '9')):
  117:             raise Exception(('Invalid character ' + char) + ' in date')
  118: 
  119: 
  120: 
--------------------------------------------------------------------------------
[0.00156 s] killed by testDecodeMRZ11 (MRTDtest.TestMRTD)
   - [# 194] LCR MRTD: 
--------------------------------------------------------------------------------
  126: 
  127: 
  128: def decodeMRZ():
  129:     (line1, line2) = scanMRZ()
- 130:     if (len(line1) != LINE_LENGTH or len(line2) != LINE_LENGTH):
+ 130:     if (len(line1) != LINE_LENGTH and len(line2) != LINE_LENGTH):
  131:         raise Exception(('Lines must both be ' + str(LINE_LENGTH)) + ' characters.')
  132:     travelData = TravelData()
  133:     linePos = 0
  134:     
--------------------------------------------------------------------------------
[0.00299 s] survived
   - [# 195] LCR MRTD: 
--------------------------------------------------------------------------------
  137:     linePos += 2
  138:     travelData.issuingCountry = line1[linePos:linePos + 3]
  139:     linePos += 3
  140:     while line1[linePos] != '<':
- 141:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
+ 141:         if (line1[linePos] < 'A' and line1[linePos] > 'Z'):
  142:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  143:         currentString += line1[linePos]
  144:         linePos += 1
  145:     travelData.lastName = currentString
--------------------------------------------------------------------------------
[0.00209 s] killed by testDecodeMRZ6 (MRTDtest.TestMRTD)
   - [# 196] LCR MRTD: 
--------------------------------------------------------------------------------
  145:     travelData.lastName = currentString
  146:     linePos += 2
  147:     currentString = ''
  148:     while line1[linePos] != '<':
- 149:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
+ 149:         if (line1[linePos] < 'A' and line1[linePos] > 'Z'):
  150:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  151:         currentString += line1[linePos]
  152:         linePos += 1
  153:     travelData.firstName = currentString
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ7 (MRTDtest.TestMRTD)
   - [# 197] LCR MRTD: 
--------------------------------------------------------------------------------
  153:     travelData.firstName = currentString
  154:     linePos += 1
  155:     currentString = ''
  156:     while line1[linePos] != '<':
- 157:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
+ 157:         if (line1[linePos] < 'A' and line1[linePos] > 'Z'):
  158:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  159:         currentString += line1[linePos]
  160:         linePos += 1
  161:     travelData.middleName = currentString
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ8 (MRTDtest.TestMRTD)
   - [# 198] ROR MRTD: 
--------------------------------------------------------------------------------
   94:     try:
   95:         int(i)
   96:         return int(i)
   97:     except ValueError:
-  98:         if (str(i) >= 'A' and str(i) <= 'Z'):
+  98:         if (str(i) <= 'A' and str(i) <= 'Z'):
   99:             return int(ord(str(i)) - 55)
  100:         else:
  101:             return 0
  102: 
--------------------------------------------------------------------------------
[0.00000 s] killed by testCalculateCheck (MRTDtest.TestMRTD)
   - [# 199] ROR MRTD: 
--------------------------------------------------------------------------------
   94:     try:
   95:         int(i)
   96:         return int(i)
   97:     except ValueError:
-  98:         if (str(i) >= 'A' and str(i) <= 'Z'):
+  98:         if (str(i) > 'A' and str(i) <= 'Z'):
   99:             return int(ord(str(i)) - 55)
  100:         else:
  101:             return 0
  102: 
--------------------------------------------------------------------------------
[0.00299 s] killed by testGetNumericalValue (MRTDtest.TestMRTD)
   - [# 200] ROR MRTD: 
--------------------------------------------------------------------------------
   94:     try:
   95:         int(i)
   96:         return int(i)
   97:     except ValueError:
-  98:         if (str(i) >= 'A' and str(i) <= 'Z'):
+  98:         if (str(i) >= 'A' and str(i) >= 'Z'):
   99:             return int(ord(str(i)) - 55)
  100:         else:
  101:             return 0
  102: 
--------------------------------------------------------------------------------
[0.00100 s] killed by testCalculateCheck (MRTDtest.TestMRTD)
   - [# 201] ROR MRTD: 
--------------------------------------------------------------------------------
   94:     try:
   95:         int(i)
   96:         return int(i)
   97:     except ValueError:
-  98:         if (str(i) >= 'A' and str(i) <= 'Z'):
+  98:         if (str(i) >= 'A' and str(i) < 'Z'):
   99:             return int(ord(str(i)) - 55)
  100:         else:
  101:             return 0
  102: 
--------------------------------------------------------------------------------
[0.00100 s] killed by testCalculateCheck (MRTDtest.TestMRTD)
   - [# 202] ROR MRTD: 
--------------------------------------------------------------------------------
  112:     return total % 10
  113: 
  114: def validateDate(date):
  115:     for char in date:
- 116:         if (char != '<' and (char < '0' or char > '9')):
+ 116:         if (char == '<' and (char < '0' or char > '9')):
  117:             raise Exception(('Invalid character ' + char) + ' in date')
  118: 
  119: 
  120: 
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ10 (MRTDtest.TestMRTD)
   - [# 203] ROR MRTD: 
--------------------------------------------------------------------------------
  112:     return total % 10
  113: 
  114: def validateDate(date):
  115:     for char in date:
- 116:         if (char != '<' and (char < '0' or char > '9')):
+ 116:         if (char != '<' and (char > '0' or char > '9')):
  117:             raise Exception(('Invalid character ' + char) + ' in date')
  118: 
  119: 
  120: 
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 204] ROR MRTD: 
--------------------------------------------------------------------------------
  112:     return total % 10
  113: 
  114: def validateDate(date):
  115:     for char in date:
- 116:         if (char != '<' and (char < '0' or char > '9')):
+ 116:         if (char != '<' and (char <= '0' or char > '9')):
  117:             raise Exception(('Invalid character ' + char) + ' in date')
  118: 
  119: 
  120: 
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 205] ROR MRTD: 
--------------------------------------------------------------------------------
  112:     return total % 10
  113: 
  114: def validateDate(date):
  115:     for char in date:
- 116:         if (char != '<' and (char < '0' or char > '9')):
+ 116:         if (char != '<' and (char < '0' or char < '9')):
  117:             raise Exception(('Invalid character ' + char) + ' in date')
  118: 
  119: 
  120: 
--------------------------------------------------------------------------------
[0.00099 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 206] ROR MRTD: 
--------------------------------------------------------------------------------
  112:     return total % 10
  113: 
  114: def validateDate(date):
  115:     for char in date:
- 116:         if (char != '<' and (char < '0' or char > '9')):
+ 116:         if (char != '<' and (char < '0' or char >= '9')):
  117:             raise Exception(('Invalid character ' + char) + ' in date')
  118: 
  119: 
  120: 
--------------------------------------------------------------------------------
[0.00210 s] killed by testDecodeMRZ2 (MRTDtest.TestMRTD)
   - [# 207] ROR MRTD: 
--------------------------------------------------------------------------------
  126: 
  127: 
  128: def decodeMRZ():
  129:     (line1, line2) = scanMRZ()
- 130:     if (len(line1) != LINE_LENGTH or len(line2) != LINE_LENGTH):
+ 130:     if (len(line1) == LINE_LENGTH or len(line2) != LINE_LENGTH):
  131:         raise Exception(('Lines must both be ' + str(LINE_LENGTH)) + ' characters.')
  132:     travelData = TravelData()
  133:     linePos = 0
  134:     
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 208] ROR MRTD: 
--------------------------------------------------------------------------------
  126: 
  127: 
  128: def decodeMRZ():
  129:     (line1, line2) = scanMRZ()
- 130:     if (len(line1) != LINE_LENGTH or len(line2) != LINE_LENGTH):
+ 130:     if (len(line1) != LINE_LENGTH or len(line2) == LINE_LENGTH):
  131:         raise Exception(('Lines must both be ' + str(LINE_LENGTH)) + ' characters.')
  132:     travelData = TravelData()
  133:     linePos = 0
  134:     
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 209] ROR MRTD: 
--------------------------------------------------------------------------------
  136:     travelData.docType = line1[linePos:linePos + 1]
  137:     linePos += 2
  138:     travelData.issuingCountry = line1[linePos:linePos + 3]
  139:     linePos += 3
- 140:     while line1[linePos] != '<':
+ 140:     while line1[linePos] == '<':
  141:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
  142:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  143:         currentString += line1[linePos]
  144:         linePos += 1
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 210] ROR MRTD: 
--------------------------------------------------------------------------------
  137:     linePos += 2
  138:     travelData.issuingCountry = line1[linePos:linePos + 3]
  139:     linePos += 3
  140:     while line1[linePos] != '<':
- 141:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
+ 141:         if (line1[linePos] > 'A' or line1[linePos] > 'Z'):
  142:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  143:         currentString += line1[linePos]
  144:         linePos += 1
  145:     travelData.lastName = currentString
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 211] ROR MRTD: 
--------------------------------------------------------------------------------
  137:     linePos += 2
  138:     travelData.issuingCountry = line1[linePos:linePos + 3]
  139:     linePos += 3
  140:     while line1[linePos] != '<':
- 141:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
+ 141:         if (line1[linePos] <= 'A' or line1[linePos] > 'Z'):
  142:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  143:         currentString += line1[linePos]
  144:         linePos += 1
  145:     travelData.lastName = currentString
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ3 (MRTDtest.TestMRTD)
   - [# 212] ROR MRTD: 
--------------------------------------------------------------------------------
  137:     linePos += 2
  138:     travelData.issuingCountry = line1[linePos:linePos + 3]
  139:     linePos += 3
  140:     while line1[linePos] != '<':
- 141:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
+ 141:         if (line1[linePos] < 'A' or line1[linePos] < 'Z'):
  142:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  143:         currentString += line1[linePos]
  144:         linePos += 1
  145:     travelData.lastName = currentString
--------------------------------------------------------------------------------
[0.00099 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 213] ROR MRTD: 
--------------------------------------------------------------------------------
  137:     linePos += 2
  138:     travelData.issuingCountry = line1[linePos:linePos + 3]
  139:     linePos += 3
  140:     while line1[linePos] != '<':
- 141:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
+ 141:         if (line1[linePos] < 'A' or line1[linePos] >= 'Z'):
  142:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
  143:         currentString += line1[linePos]
  144:         linePos += 1
  145:     travelData.lastName = currentString
--------------------------------------------------------------------------------
[0.00194 s] survived
   - [# 214] ROR MRTD: 
--------------------------------------------------------------------------------
  144:         linePos += 1
  145:     travelData.lastName = currentString
  146:     linePos += 2
  147:     currentString = ''
- 148:     while line1[linePos] != '<':
+ 148:     while line1[linePos] == '<':
  149:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
  150:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  151:         currentString += line1[linePos]
  152:         linePos += 1
--------------------------------------------------------------------------------
[0.00099 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 215] ROR MRTD: 
--------------------------------------------------------------------------------
  145:     travelData.lastName = currentString
  146:     linePos += 2
  147:     currentString = ''
  148:     while line1[linePos] != '<':
- 149:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
+ 149:         if (line1[linePos] > 'A' or line1[linePos] > 'Z'):
  150:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  151:         currentString += line1[linePos]
  152:         linePos += 1
  153:     travelData.firstName = currentString
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 216] ROR MRTD: 
--------------------------------------------------------------------------------
  145:     travelData.lastName = currentString
  146:     linePos += 2
  147:     currentString = ''
  148:     while line1[linePos] != '<':
- 149:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
+ 149:         if (line1[linePos] <= 'A' or line1[linePos] > 'Z'):
  150:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  151:         currentString += line1[linePos]
  152:         linePos += 1
  153:     travelData.firstName = currentString
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 217] ROR MRTD: 
--------------------------------------------------------------------------------
  145:     travelData.lastName = currentString
  146:     linePos += 2
  147:     currentString = ''
  148:     while line1[linePos] != '<':
- 149:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
+ 149:         if (line1[linePos] < 'A' or line1[linePos] < 'Z'):
  150:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  151:         currentString += line1[linePos]
  152:         linePos += 1
  153:     travelData.firstName = currentString
--------------------------------------------------------------------------------
[0.00123 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 218] ROR MRTD: 
--------------------------------------------------------------------------------
  145:     travelData.lastName = currentString
  146:     linePos += 2
  147:     currentString = ''
  148:     while line1[linePos] != '<':
- 149:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
+ 149:         if (line1[linePos] < 'A' or line1[linePos] >= 'Z'):
  150:             raise Exception(('Invalid character ' + line1[linePos]) + ' in first name')
  151:         currentString += line1[linePos]
  152:         linePos += 1
  153:     travelData.firstName = currentString
--------------------------------------------------------------------------------
[0.00300 s] survived
   - [# 219] ROR MRTD: 
--------------------------------------------------------------------------------
  152:         linePos += 1
  153:     travelData.firstName = currentString
  154:     linePos += 1
  155:     currentString = ''
- 156:     while line1[linePos] != '<':
+ 156:     while line1[linePos] == '<':
  157:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
  158:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  159:         currentString += line1[linePos]
  160:         linePos += 1
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 220] ROR MRTD: 
--------------------------------------------------------------------------------
  153:     travelData.firstName = currentString
  154:     linePos += 1
  155:     currentString = ''
  156:     while line1[linePos] != '<':
- 157:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
+ 157:         if (line1[linePos] > 'A' or line1[linePos] > 'Z'):
  158:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  159:         currentString += line1[linePos]
  160:         linePos += 1
  161:     travelData.middleName = currentString
--------------------------------------------------------------------------------
[0.00099 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 221] ROR MRTD: 
--------------------------------------------------------------------------------
  153:     travelData.firstName = currentString
  154:     linePos += 1
  155:     currentString = ''
  156:     while line1[linePos] != '<':
- 157:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
+ 157:         if (line1[linePos] <= 'A' or line1[linePos] > 'Z'):
  158:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  159:         currentString += line1[linePos]
  160:         linePos += 1
  161:     travelData.middleName = currentString
--------------------------------------------------------------------------------
[0.00099 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 222] ROR MRTD: 
--------------------------------------------------------------------------------
  153:     travelData.firstName = currentString
  154:     linePos += 1
  155:     currentString = ''
  156:     while line1[linePos] != '<':
- 157:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
+ 157:         if (line1[linePos] < 'A' or line1[linePos] < 'Z'):
  158:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  159:         currentString += line1[linePos]
  160:         linePos += 1
  161:     travelData.middleName = currentString
--------------------------------------------------------------------------------
[0.00199 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 223] ROR MRTD: 
--------------------------------------------------------------------------------
  153:     travelData.firstName = currentString
  154:     linePos += 1
  155:     currentString = ''
  156:     while line1[linePos] != '<':
- 157:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
+ 157:         if (line1[linePos] < 'A' or line1[linePos] >= 'Z'):
  158:             raise Exception(('Invalid character ' + line1[linePos]) + ' in middle name')
  159:         currentString += line1[linePos]
  160:         linePos += 1
  161:     travelData.middleName = currentString
--------------------------------------------------------------------------------
[0.00301 s] survived
   - [# 224] ROR MRTD: 
--------------------------------------------------------------------------------
  198: def encodeMRZ(personalNo):
  199:     data = getTravelDataFromDB(personalNo)
  200:     
  201:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
- 202:     if len(line1) > LINE_LENGTH:
+ 202:     if len(line1) < LINE_LENGTH:
  203:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
  204:     while len(line1) < LINE_LENGTH:
  205:         line1 += '<'
  206:     
--------------------------------------------------------------------------------
[0.00200 s] killed by testEncodeMRZ (MRTDtest.TestMRTD)
   - [# 225] ROR MRTD: 
--------------------------------------------------------------------------------
  198: def encodeMRZ(personalNo):
  199:     data = getTravelDataFromDB(personalNo)
  200:     
  201:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
- 202:     if len(line1) > LINE_LENGTH:
+ 202:     if len(line1) >= LINE_LENGTH:
  203:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
  204:     while len(line1) < LINE_LENGTH:
  205:         line1 += '<'
  206:     
--------------------------------------------------------------------------------
[0.00300 s] survived
   - [# 226] ROR MRTD: 
--------------------------------------------------------------------------------
  200:     
  201:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
  202:     if len(line1) > LINE_LENGTH:
  203:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
- 204:     while len(line1) < LINE_LENGTH:
+ 204:     while len(line1) > LINE_LENGTH:
  205:         line1 += '<'
  206:     
  207:     
  208:     line2 = ((((((((data.passportNo + data.passportCheck) + data.countryCode) + data.birthday) + data.birthdayCheck) + data.sex) + data.expirationDate) + data.expirationCheck) + data.personalNo) + data.personalNoCheck
--------------------------------------------------------------------------------
[0.00299 s] killed by testEncodeMRZ (MRTDtest.TestMRTD)
   - [# 227] ROR MRTD: 
--------------------------------------------------------------------------------
  200:     
  201:     line1 = ((((((data.docType + '<') + data.issuingCountry) + data.lastName) + '<<') + data.firstName) + '<') + data.middleName
  202:     if len(line1) > LINE_LENGTH:
  203:         raise Exception(('First line is not ' + str(LINE_LENGTH)) + ' characters.')
- 204:     while len(line1) < LINE_LENGTH:
+ 204:     while len(line1) <= LINE_LENGTH:
  205:         line1 += '<'
  206:     
  207:     
  208:     line2 = ((((((((data.passportNo + data.passportCheck) + data.countryCode) + data.birthday) + data.birthdayCheck) + data.sex) + data.expirationDate) + data.expirationCheck) + data.personalNo) + data.personalNoCheck
--------------------------------------------------------------------------------
[0.00300 s] killed by testEncodeMRZ (MRTDtest.TestMRTD)
   - [# 228] ROR MRTD: 
--------------------------------------------------------------------------------
  206:     
  207:     
  208:     line2 = ((((((((data.passportNo + data.passportCheck) + data.countryCode) + data.birthday) + data.birthdayCheck) + data.sex) + data.expirationDate) + data.expirationCheck) + data.personalNo) + data.personalNoCheck
  209:     
- 210:     if len(line2) != LINE_LENGTH:
+ 210:     if len(line2) == LINE_LENGTH:
  211:         raise Exception(('Second line is not ' + str(LINE_LENGTH)) + ' characters.')
  212:     return (line1, line2)
  213: 
  214: 
--------------------------------------------------------------------------------
[0.00300 s] killed by testEncodeMRZ (MRTDtest.TestMRTD)
   - [# 229] ROR MRTD: 
--------------------------------------------------------------------------------
  215: 
  216: def checkMismatches(travelData):
  217:     
  218:     errors = TravelDataError()
- 219:     if int(travelData.passportCheck) != calculateCheck(travelData.passportNo):
+ 219:     if int(travelData.passportCheck) == calculateCheck(travelData.passportNo):
  220:         errors.passportError = True
  221:     else:
  222:         errors.passportError = False
  223:     
--------------------------------------------------------------------------------
[0.00000 s] killed by testCheckMismatches (MRTDtest.TestMRTD)
   - [# 230] ROR MRTD: 
--------------------------------------------------------------------------------
  220:         errors.passportError = True
  221:     else:
  222:         errors.passportError = False
  223:     
- 224:     if int(travelData.birthdayCheck) != calculateCheck(travelData.birthday):
+ 224:     if int(travelData.birthdayCheck) == calculateCheck(travelData.birthday):
  225:         errors.birthdayError = True
  226:     else:
  227:         errors.birthdayError = False
  228:     
--------------------------------------------------------------------------------
[0.00000 s] killed by testCheckMismatches (MRTDtest.TestMRTD)
   - [# 231] ROR MRTD: 
--------------------------------------------------------------------------------
  225:         errors.birthdayError = True
  226:     else:
  227:         errors.birthdayError = False
  228:     
- 229:     if int(travelData.expirationCheck) != calculateCheck(travelData.expirationDate):
+ 229:     if int(travelData.expirationCheck) == calculateCheck(travelData.expirationDate):
  230:         errors.expirationError = True
  231:     else:
  232:         errors.expirationError = False
  233:     
--------------------------------------------------------------------------------
[0.00000 s] killed by testCheckMismatches (MRTDtest.TestMRTD)
   - [# 232] ROR MRTD: 
--------------------------------------------------------------------------------
  230:         errors.expirationError = True
  231:     else:
  232:         errors.expirationError = False
  233:     
- 234:     if int(travelData.personalNoCheck) != calculateCheck(travelData.personalNo):
+ 234:     if int(travelData.personalNoCheck) == calculateCheck(travelData.personalNo):
  235:         errors.personalError = True
  236:     else:
  237:         errors.personalError = False
  238:     return errors
--------------------------------------------------------------------------------
[0.00100 s] killed by testCheckMismatches (MRTDtest.TestMRTD)
   - [# 233] SIR MRTD: 
--------------------------------------------------------------------------------
  132:     travelData = TravelData()
  133:     linePos = 0
  134:     
  135:     currentString = ''
- 136:     travelData.docType = line1[linePos:linePos + 1]
+ 136:     travelData.docType = line1[:linePos + 1]
  137:     linePos += 2
  138:     travelData.issuingCountry = line1[linePos:linePos + 3]
  139:     linePos += 3
  140:     while line1[linePos] != '<':
--------------------------------------------------------------------------------
[0.00300 s] survived
   - [# 234] SIR MRTD: 
--------------------------------------------------------------------------------
  132:     travelData = TravelData()
  133:     linePos = 0
  134:     
  135:     currentString = ''
- 136:     travelData.docType = line1[linePos:linePos + 1]
+ 136:     travelData.docType = line1[linePos:]
  137:     linePos += 2
  138:     travelData.issuingCountry = line1[linePos:linePos + 3]
  139:     linePos += 3
  140:     while line1[linePos] != '<':
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 235] SIR MRTD: 
--------------------------------------------------------------------------------
  134:     
  135:     currentString = ''
  136:     travelData.docType = line1[linePos:linePos + 1]
  137:     linePos += 2
- 138:     travelData.issuingCountry = line1[linePos:linePos + 3]
+ 138:     travelData.issuingCountry = line1[:linePos + 3]
  139:     linePos += 3
  140:     while line1[linePos] != '<':
  141:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
  142:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 236] SIR MRTD: 
--------------------------------------------------------------------------------
  134:     
  135:     currentString = ''
  136:     travelData.docType = line1[linePos:linePos + 1]
  137:     linePos += 2
- 138:     travelData.issuingCountry = line1[linePos:linePos + 3]
+ 138:     travelData.issuingCountry = line1[linePos:]
  139:     linePos += 3
  140:     while line1[linePos] != '<':
  141:         if (line1[linePos] < 'A' or line1[linePos] > 'Z'):
  142:             raise Exception(('Invalid character ' + line1[linePos]) + ' in last name')
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 237] SIR MRTD: 
--------------------------------------------------------------------------------
  163:     
  164:     
  165:     
  166:     linePos = 0
- 167:     travelData.passportNo = line2[linePos:PASSPORT_LENGTH]
+ 167:     travelData.passportNo = line2[:PASSPORT_LENGTH]
  168:     linePos += PASSPORT_LENGTH
  169:     travelData.passportCheck = line2[linePos:linePos + 1]
  170:     linePos += 1
  171:     travelData.countryCode = line2[linePos:linePos + COUNTRY_CODE_LENGTH]
--------------------------------------------------------------------------------
[0.00301 s] survived
   - [# 238] SIR MRTD: 
--------------------------------------------------------------------------------
  163:     
  164:     
  165:     
  166:     linePos = 0
- 167:     travelData.passportNo = line2[linePos:PASSPORT_LENGTH]
+ 167:     travelData.passportNo = line2[linePos:]
  168:     linePos += PASSPORT_LENGTH
  169:     travelData.passportCheck = line2[linePos:linePos + 1]
  170:     linePos += 1
  171:     travelData.countryCode = line2[linePos:linePos + COUNTRY_CODE_LENGTH]
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 239] SIR MRTD: 
--------------------------------------------------------------------------------
  165:     
  166:     linePos = 0
  167:     travelData.passportNo = line2[linePos:PASSPORT_LENGTH]
  168:     linePos += PASSPORT_LENGTH
- 169:     travelData.passportCheck = line2[linePos:linePos + 1]
+ 169:     travelData.passportCheck = line2[:linePos + 1]
  170:     linePos += 1
  171:     travelData.countryCode = line2[linePos:linePos + COUNTRY_CODE_LENGTH]
  172:     linePos += COUNTRY_CODE_LENGTH
  173:     travelData.birthday = line2[linePos:linePos + DATE_LENGTH]
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 240] SIR MRTD: 
--------------------------------------------------------------------------------
  165:     
  166:     linePos = 0
  167:     travelData.passportNo = line2[linePos:PASSPORT_LENGTH]
  168:     linePos += PASSPORT_LENGTH
- 169:     travelData.passportCheck = line2[linePos:linePos + 1]
+ 169:     travelData.passportCheck = line2[linePos:]
  170:     linePos += 1
  171:     travelData.countryCode = line2[linePos:linePos + COUNTRY_CODE_LENGTH]
  172:     linePos += COUNTRY_CODE_LENGTH
  173:     travelData.birthday = line2[linePos:linePos + DATE_LENGTH]
--------------------------------------------------------------------------------
[0.00099 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 241] SIR MRTD: 
--------------------------------------------------------------------------------
  167:     travelData.passportNo = line2[linePos:PASSPORT_LENGTH]
  168:     linePos += PASSPORT_LENGTH
  169:     travelData.passportCheck = line2[linePos:linePos + 1]
  170:     linePos += 1
- 171:     travelData.countryCode = line2[linePos:linePos + COUNTRY_CODE_LENGTH]
+ 171:     travelData.countryCode = line2[:linePos + COUNTRY_CODE_LENGTH]
  172:     linePos += COUNTRY_CODE_LENGTH
  173:     travelData.birthday = line2[linePos:linePos + DATE_LENGTH]
  174:     validateDate(travelData.birthday)
  175:     linePos += DATE_LENGTH
--------------------------------------------------------------------------------
[0.00201 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 242] SIR MRTD: 
--------------------------------------------------------------------------------
  167:     travelData.passportNo = line2[linePos:PASSPORT_LENGTH]
  168:     linePos += PASSPORT_LENGTH
  169:     travelData.passportCheck = line2[linePos:linePos + 1]
  170:     linePos += 1
- 171:     travelData.countryCode = line2[linePos:linePos + COUNTRY_CODE_LENGTH]
+ 171:     travelData.countryCode = line2[linePos:]
  172:     linePos += COUNTRY_CODE_LENGTH
  173:     travelData.birthday = line2[linePos:linePos + DATE_LENGTH]
  174:     validateDate(travelData.birthday)
  175:     linePos += DATE_LENGTH
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 243] SIR MRTD: 
--------------------------------------------------------------------------------
  169:     travelData.passportCheck = line2[linePos:linePos + 1]
  170:     linePos += 1
  171:     travelData.countryCode = line2[linePos:linePos + COUNTRY_CODE_LENGTH]
  172:     linePos += COUNTRY_CODE_LENGTH
- 173:     travelData.birthday = line2[linePos:linePos + DATE_LENGTH]
+ 173:     travelData.birthday = line2[:linePos + DATE_LENGTH]
  174:     validateDate(travelData.birthday)
  175:     linePos += DATE_LENGTH
  176:     travelData.birthdayCheck = line2[linePos:linePos + 1]
  177:     linePos += 1
--------------------------------------------------------------------------------
[0.00099 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 244] SIR MRTD: 
--------------------------------------------------------------------------------
  169:     travelData.passportCheck = line2[linePos:linePos + 1]
  170:     linePos += 1
  171:     travelData.countryCode = line2[linePos:linePos + COUNTRY_CODE_LENGTH]
  172:     linePos += COUNTRY_CODE_LENGTH
- 173:     travelData.birthday = line2[linePos:linePos + DATE_LENGTH]
+ 173:     travelData.birthday = line2[linePos:]
  174:     validateDate(travelData.birthday)
  175:     linePos += DATE_LENGTH
  176:     travelData.birthdayCheck = line2[linePos:linePos + 1]
  177:     linePos += 1
--------------------------------------------------------------------------------
[0.00200 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 245] SIR MRTD: 
--------------------------------------------------------------------------------
  172:     linePos += COUNTRY_CODE_LENGTH
  173:     travelData.birthday = line2[linePos:linePos + DATE_LENGTH]
  174:     validateDate(travelData.birthday)
  175:     linePos += DATE_LENGTH
- 176:     travelData.birthdayCheck = line2[linePos:linePos + 1]
+ 176:     travelData.birthdayCheck = line2[:linePos + 1]
  177:     linePos += 1
  178:     travelData.sex = line2[linePos:linePos + SEX_LENGTH]
  179:     linePos += 1
  180:     travelData.expirationDate = line2[linePos:linePos + DATE_LENGTH]
--------------------------------------------------------------------------------
[0.00101 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 246] SIR MRTD: 
--------------------------------------------------------------------------------
  172:     linePos += COUNTRY_CODE_LENGTH
  173:     travelData.birthday = line2[linePos:linePos + DATE_LENGTH]
  174:     validateDate(travelData.birthday)
  175:     linePos += DATE_LENGTH
- 176:     travelData.birthdayCheck = line2[linePos:linePos + 1]
+ 176:     travelData.birthdayCheck = line2[linePos:]
  177:     linePos += 1
  178:     travelData.sex = line2[linePos:linePos + SEX_LENGTH]
  179:     linePos += 1
  180:     travelData.expirationDate = line2[linePos:linePos + DATE_LENGTH]
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 247] SIR MRTD: 
--------------------------------------------------------------------------------
  174:     validateDate(travelData.birthday)
  175:     linePos += DATE_LENGTH
  176:     travelData.birthdayCheck = line2[linePos:linePos + 1]
  177:     linePos += 1
- 178:     travelData.sex = line2[linePos:linePos + SEX_LENGTH]
+ 178:     travelData.sex = line2[:linePos + SEX_LENGTH]
  179:     linePos += 1
  180:     travelData.expirationDate = line2[linePos:linePos + DATE_LENGTH]
  181:     validateDate(travelData.expirationDate)
  182:     linePos += DATE_LENGTH
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 248] SIR MRTD: 
--------------------------------------------------------------------------------
  174:     validateDate(travelData.birthday)
  175:     linePos += DATE_LENGTH
  176:     travelData.birthdayCheck = line2[linePos:linePos + 1]
  177:     linePos += 1
- 178:     travelData.sex = line2[linePos:linePos + SEX_LENGTH]
+ 178:     travelData.sex = line2[linePos:]
  179:     linePos += 1
  180:     travelData.expirationDate = line2[linePos:linePos + DATE_LENGTH]
  181:     validateDate(travelData.expirationDate)
  182:     linePos += DATE_LENGTH
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 249] SIR MRTD: 
--------------------------------------------------------------------------------
  176:     travelData.birthdayCheck = line2[linePos:linePos + 1]
  177:     linePos += 1
  178:     travelData.sex = line2[linePos:linePos + SEX_LENGTH]
  179:     linePos += 1
- 180:     travelData.expirationDate = line2[linePos:linePos + DATE_LENGTH]
+ 180:     travelData.expirationDate = line2[:linePos + DATE_LENGTH]
  181:     validateDate(travelData.expirationDate)
  182:     linePos += DATE_LENGTH
  183:     travelData.expirationCheck = line2[linePos:linePos + 1]
  184:     linePos += 1
--------------------------------------------------------------------------------
[0.00233 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 250] SIR MRTD: 
--------------------------------------------------------------------------------
  176:     travelData.birthdayCheck = line2[linePos:linePos + 1]
  177:     linePos += 1
  178:     travelData.sex = line2[linePos:linePos + SEX_LENGTH]
  179:     linePos += 1
- 180:     travelData.expirationDate = line2[linePos:linePos + DATE_LENGTH]
+ 180:     travelData.expirationDate = line2[linePos:]
  181:     validateDate(travelData.expirationDate)
  182:     linePos += DATE_LENGTH
  183:     travelData.expirationCheck = line2[linePos:linePos + 1]
  184:     linePos += 1
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 251] SIR MRTD: 
--------------------------------------------------------------------------------
  179:     linePos += 1
  180:     travelData.expirationDate = line2[linePos:linePos + DATE_LENGTH]
  181:     validateDate(travelData.expirationDate)
  182:     linePos += DATE_LENGTH
- 183:     travelData.expirationCheck = line2[linePos:linePos + 1]
+ 183:     travelData.expirationCheck = line2[:linePos + 1]
  184:     linePos += 1
  185:     travelData.personalNo = line2[linePos:len(line2) - 1]
  186:     linePos = len(line2) - 1
  187:     travelData.personalNoCheck = line2[linePos]
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 252] SIR MRTD: 
--------------------------------------------------------------------------------
  179:     linePos += 1
  180:     travelData.expirationDate = line2[linePos:linePos + DATE_LENGTH]
  181:     validateDate(travelData.expirationDate)
  182:     linePos += DATE_LENGTH
- 183:     travelData.expirationCheck = line2[linePos:linePos + 1]
+ 183:     travelData.expirationCheck = line2[linePos:]
  184:     linePos += 1
  185:     travelData.personalNo = line2[linePos:len(line2) - 1]
  186:     linePos = len(line2) - 1
  187:     travelData.personalNoCheck = line2[linePos]
--------------------------------------------------------------------------------
[0.00100 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 253] SIR MRTD: 
--------------------------------------------------------------------------------
  181:     validateDate(travelData.expirationDate)
  182:     linePos += DATE_LENGTH
  183:     travelData.expirationCheck = line2[linePos:linePos + 1]
  184:     linePos += 1
- 185:     travelData.personalNo = line2[linePos:len(line2) - 1]
+ 185:     travelData.personalNo = line2[:len(line2) - 1]
  186:     linePos = len(line2) - 1
  187:     travelData.personalNoCheck = line2[linePos]
  188:     linePos += 1
  189:     return travelData
--------------------------------------------------------------------------------
[0.00101 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
   - [# 254] SIR MRTD: 
--------------------------------------------------------------------------------
  181:     validateDate(travelData.expirationDate)
  182:     linePos += DATE_LENGTH
  183:     travelData.expirationCheck = line2[linePos:linePos + 1]
  184:     linePos += 1
- 185:     travelData.personalNo = line2[linePos:len(line2) - 1]
+ 185:     travelData.personalNo = line2[linePos:]
  186:     linePos = len(line2) - 1
  187:     travelData.personalNoCheck = line2[linePos]
  188:     linePos += 1
  189:     return travelData
--------------------------------------------------------------------------------
[0.00101 s] killed by testDecodeMRZ (MRTDtest.TestMRTD)
[*] Mutation score [24.00624 s]: 75.5%
   - all: 254
   - killed: 175 (68.9%)
   - survived: 57 (22.4%)
   - incompetent: 21 (8.3%)
   - timeout: 1 (0.4%)
